/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_SUBSTRAIT_SUBSTRAIT_ALGEBRA_PB_H_INCLUDED
#define PB_SUBSTRAIT_SUBSTRAIT_ALGEBRA_PB_H_INCLUDED
#include <pb.h>
#include "substrait/any.pb.h"
#include "substrait/extensions/extensions.pb.h"
#include "substrait/type.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* Describes which part of an aggregation or window function to perform within
 the context of distributed algorithms. */
typedef enum _substrait_AggregationPhase { 
    /* Implies `INTERMEDIATE_TO_RESULT`. */
    substrait_AggregationPhase_AGGREGATION_PHASE_UNSPECIFIED = 0, 
    /* Specifies that the function should be run only up to the point of
 generating an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_AggregationPhase_AGGREGATION_PHASE_INITIAL_TO_INTERMEDIATE = 1, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, and that the output should also be
 an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_AggregationPhase_AGGREGATION_PHASE_INTERMEDIATE_TO_INTERMEDIATE = 2, 
    /* A complete invocation: the function should aggregate the given set of
 inputs to yield a single return value. This style must be used for
 aggregate or window functions that are not decomposable. */
    substrait_AggregationPhase_AGGREGATION_PHASE_INITIAL_TO_RESULT = 3, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, generated previously using
 INITIAL_TO_INTERMEDIATE and possibly INTERMEDIATE_TO_INTERMEDIATE calls.
 This call should combine the intermediate values to yield the final
 return value. */
    substrait_AggregationPhase_AGGREGATION_PHASE_INTERMEDIATE_TO_RESULT = 4 
} substrait_AggregationPhase;

/* Describes which part of an aggregation or window function to perform within
 the context of distributed algorithms. */
typedef enum _substrait_JoinRel_JoinType { 
    /* Implies `INTERMEDIATE_TO_RESULT`. */
    substrait_JoinRel_JoinType_JOIN_TYPE_UNSPECIFIED = 0, 
    /* Specifies that the function should be run only up to the point of
 generating an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_JoinRel_JoinType_JOIN_TYPE_INNER = 1, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, and that the output should also be
 an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_JoinRel_JoinType_JOIN_TYPE_OUTER = 2, 
    /* A complete invocation: the function should aggregate the given set of
 inputs to yield a single return value. This style must be used for
 aggregate or window functions that are not decomposable. */
    substrait_JoinRel_JoinType_JOIN_TYPE_LEFT = 3, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, generated previously using
 INITIAL_TO_INTERMEDIATE and possibly INTERMEDIATE_TO_INTERMEDIATE calls.
 This call should combine the intermediate values to yield the final
 return value. */
    substrait_JoinRel_JoinType_JOIN_TYPE_RIGHT = 4, 
    substrait_JoinRel_JoinType_JOIN_TYPE_SEMI = 5, 
    substrait_JoinRel_JoinType_JOIN_TYPE_ANTI = 6, 
    substrait_JoinRel_JoinType_JOIN_TYPE_SINGLE = 7 
} substrait_JoinRel_JoinType;

/* Describes which part of an aggregation or window function to perform within
 the context of distributed algorithms. */
typedef enum _substrait_SetRel_SetOp { 
    /* Implies `INTERMEDIATE_TO_RESULT`. */
    substrait_SetRel_SetOp_SET_OP_UNSPECIFIED = 0, 
    /* Specifies that the function should be run only up to the point of
 generating an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_SetRel_SetOp_SET_OP_MINUS_PRIMARY = 1, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, and that the output should also be
 an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_SetRel_SetOp_SET_OP_MINUS_MULTISET = 2, 
    /* A complete invocation: the function should aggregate the given set of
 inputs to yield a single return value. This style must be used for
 aggregate or window functions that are not decomposable. */
    substrait_SetRel_SetOp_SET_OP_INTERSECTION_PRIMARY = 3, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, generated previously using
 INITIAL_TO_INTERMEDIATE and possibly INTERMEDIATE_TO_INTERMEDIATE calls.
 This call should combine the intermediate values to yield the final
 return value. */
    substrait_SetRel_SetOp_SET_OP_INTERSECTION_MULTISET = 4, 
    substrait_SetRel_SetOp_SET_OP_UNION_DISTINCT = 5, 
    substrait_SetRel_SetOp_SET_OP_UNION_ALL = 6 
} substrait_SetRel_SetOp;

/* Describes which part of an aggregation or window function to perform within
 the context of distributed algorithms. */
typedef enum _substrait_DdlRel_DdlObject { 
    /* Implies `INTERMEDIATE_TO_RESULT`. */
    substrait_DdlRel_DdlObject_DDL_OBJECT_UNSPECIFIED = 0, 
    /* Specifies that the function should be run only up to the point of
 generating an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_DdlRel_DdlObject_DDL_OBJECT_TABLE = 1, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, and that the output should also be
 an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_DdlRel_DdlObject_DDL_OBJECT_VIEW = 2 
} substrait_DdlRel_DdlObject;

typedef enum _substrait_DdlRel_DdlOp { 
    substrait_DdlRel_DdlOp_DDL_OP_UNSPECIFIED = 0, 
    substrait_DdlRel_DdlOp_DDL_OP_CREATE = 1, 
    substrait_DdlRel_DdlOp_DDL_OP_CREATE_OR_REPLACE = 2, 
    substrait_DdlRel_DdlOp_DDL_OP_ALTER = 3, 
    substrait_DdlRel_DdlOp_DDL_OP_DROP = 4, 
    substrait_DdlRel_DdlOp_DDL_OP_DROP_IF_EXIST = 5 
} substrait_DdlRel_DdlOp;

/* Describes which part of an aggregation or window function to perform within
 the context of distributed algorithms. */
typedef enum _substrait_WriteRel_WriteOp { 
    /* Implies `INTERMEDIATE_TO_RESULT`. */
    substrait_WriteRel_WriteOp_WRITE_OP_UNSPECIFIED = 0, 
    /* Specifies that the function should be run only up to the point of
 generating an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_WriteRel_WriteOp_WRITE_OP_INSERT = 1, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, and that the output should also be
 an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_WriteRel_WriteOp_WRITE_OP_DELETE = 2, 
    /* A complete invocation: the function should aggregate the given set of
 inputs to yield a single return value. This style must be used for
 aggregate or window functions that are not decomposable. */
    substrait_WriteRel_WriteOp_WRITE_OP_UPDATE = 3, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, generated previously using
 INITIAL_TO_INTERMEDIATE and possibly INTERMEDIATE_TO_INTERMEDIATE calls.
 This call should combine the intermediate values to yield the final
 return value. */
    substrait_WriteRel_WriteOp_WRITE_OP_CTAS = 4 
} substrait_WriteRel_WriteOp;

typedef enum _substrait_WriteRel_OutputMode { 
    substrait_WriteRel_OutputMode_OUTPUT_MODE_UNSPECIFIED = 0, 
    substrait_WriteRel_OutputMode_OUTPUT_MODE_NO_OUTPUT = 1, 
    substrait_WriteRel_OutputMode_OUTPUT_MODE_MODIFIED_TUPLES = 2 
} substrait_WriteRel_OutputMode;

/* Describes which part of an aggregation or window function to perform within
 the context of distributed algorithms. */
typedef enum _substrait_Expression_Cast_FailureBehavior { 
    /* Implies `INTERMEDIATE_TO_RESULT`. */
    substrait_Expression_Cast_FailureBehavior_FAILURE_BEHAVIOR_UNSPECIFIED = 0, 
    /* Specifies that the function should be run only up to the point of
 generating an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_Expression_Cast_FailureBehavior_FAILURE_BEHAVIOR_RETURN_NULL = 1, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, and that the output should also be
 an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_Expression_Cast_FailureBehavior_FAILURE_BEHAVIOR_THROW_EXCEPTION = 2 
} substrait_Expression_Cast_FailureBehavior;

/* Describes which part of an aggregation or window function to perform within
 the context of distributed algorithms. */
typedef enum _substrait_Expression_Subquery_SetPredicate_PredicateOp { 
    /* Implies `INTERMEDIATE_TO_RESULT`. */
    substrait_Expression_Subquery_SetPredicate_PredicateOp_PREDICATE_OP_UNSPECIFIED = 0, 
    /* Specifies that the function should be run only up to the point of
 generating an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_Expression_Subquery_SetPredicate_PredicateOp_PREDICATE_OP_EXISTS = 1, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, and that the output should also be
 an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_Expression_Subquery_SetPredicate_PredicateOp_PREDICATE_OP_UNIQUE = 2 
} substrait_Expression_Subquery_SetPredicate_PredicateOp;

/* Describes which part of an aggregation or window function to perform within
 the context of distributed algorithms. */
typedef enum _substrait_Expression_Subquery_SetComparison_ComparisonOp { 
    /* Implies `INTERMEDIATE_TO_RESULT`. */
    substrait_Expression_Subquery_SetComparison_ComparisonOp_COMPARISON_OP_UNSPECIFIED = 0, 
    /* Specifies that the function should be run only up to the point of
 generating an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_Expression_Subquery_SetComparison_ComparisonOp_COMPARISON_OP_EQ = 1, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, and that the output should also be
 an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_Expression_Subquery_SetComparison_ComparisonOp_COMPARISON_OP_NE = 2, 
    /* A complete invocation: the function should aggregate the given set of
 inputs to yield a single return value. This style must be used for
 aggregate or window functions that are not decomposable. */
    substrait_Expression_Subquery_SetComparison_ComparisonOp_COMPARISON_OP_LT = 3, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, generated previously using
 INITIAL_TO_INTERMEDIATE and possibly INTERMEDIATE_TO_INTERMEDIATE calls.
 This call should combine the intermediate values to yield the final
 return value. */
    substrait_Expression_Subquery_SetComparison_ComparisonOp_COMPARISON_OP_GT = 4, 
    substrait_Expression_Subquery_SetComparison_ComparisonOp_COMPARISON_OP_LE = 5, 
    substrait_Expression_Subquery_SetComparison_ComparisonOp_COMPARISON_OP_GE = 6 
} substrait_Expression_Subquery_SetComparison_ComparisonOp;

typedef enum _substrait_Expression_Subquery_SetComparison_ReductionOp { 
    substrait_Expression_Subquery_SetComparison_ReductionOp_REDUCTION_OP_UNSPECIFIED = 0, 
    substrait_Expression_Subquery_SetComparison_ReductionOp_REDUCTION_OP_ANY = 1, 
    substrait_Expression_Subquery_SetComparison_ReductionOp_REDUCTION_OP_ALL = 2 
} substrait_Expression_Subquery_SetComparison_ReductionOp;

/* Describes which part of an aggregation or window function to perform within
 the context of distributed algorithms. */
typedef enum _substrait_SortField_SortDirection { 
    /* Implies `INTERMEDIATE_TO_RESULT`. */
    substrait_SortField_SortDirection_SORT_DIRECTION_UNSPECIFIED = 0, 
    /* Specifies that the function should be run only up to the point of
 generating an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_SortField_SortDirection_SORT_DIRECTION_ASC_NULLS_FIRST = 1, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, and that the output should also be
 an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_SortField_SortDirection_SORT_DIRECTION_ASC_NULLS_LAST = 2, 
    /* A complete invocation: the function should aggregate the given set of
 inputs to yield a single return value. This style must be used for
 aggregate or window functions that are not decomposable. */
    substrait_SortField_SortDirection_SORT_DIRECTION_DESC_NULLS_FIRST = 3, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, generated previously using
 INITIAL_TO_INTERMEDIATE and possibly INTERMEDIATE_TO_INTERMEDIATE calls.
 This call should combine the intermediate values to yield the final
 return value. */
    substrait_SortField_SortDirection_SORT_DIRECTION_DESC_NULLS_LAST = 4, 
    substrait_SortField_SortDirection_SORT_DIRECTION_CLUSTERED = 5 
} substrait_SortField_SortDirection;

/* Describes which part of an aggregation or window function to perform within
 the context of distributed algorithms. */
typedef enum _substrait_AggregateFunction_AggregationInvocation { 
    /* Implies `INTERMEDIATE_TO_RESULT`. */
    substrait_AggregateFunction_AggregationInvocation_AGGREGATION_INVOCATION_UNSPECIFIED = 0, 
    /* Specifies that the function should be run only up to the point of
 generating an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_AggregateFunction_AggregationInvocation_AGGREGATION_INVOCATION_ALL = 1, 
    /* Specifies that the inputs of the aggregate or window function are the
 intermediate values of the function, and that the output should also be
 an intermediate value, to be further aggregated later using
 INTERMEDIATE_TO_INTERMEDIATE or INTERMEDIATE_TO_RESULT. */
    substrait_AggregateFunction_AggregationInvocation_AGGREGATION_INVOCATION_DISTINCT = 2 
} substrait_AggregateFunction_AggregationInvocation;

/* Struct definitions */
typedef struct _substrait_AggregateFunction { 
    uint32_t *function_reference;
    pb_size_t args_count;
    struct _substrait_Expression *args;
    pb_size_t sorts_count;
    struct _substrait_SortField *sorts;
    substrait_AggregationPhase *phase;
    struct _substrait_Type *output_type;
    substrait_AggregateFunction_AggregationInvocation *invocation;
    pb_size_t arguments_count;
    struct _substrait_FunctionArgument *arguments;
    pb_size_t options_count;
    struct _substrait_FunctionOption *options;
} substrait_AggregateFunction;

typedef struct _substrait_AggregateFunction_ReferenceRel { 
    int32_t *subtree_ordinal;
} substrait_AggregateFunction_ReferenceRel;

/* The argument of a function */
typedef struct _substrait_AggregateRel { 
    struct _substrait_RelCommon *common;
    struct _substrait_Rel *input;
    pb_size_t groupings_count;
    struct _substrait_AggregateRel_Grouping *groupings;
    pb_size_t measures_count;
    struct _substrait_AggregateRel_Measure *measures;
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_AggregateRel;

/* An optional function argument.  Typically used for specifying behavior in
 invalid or corner cases. */
typedef struct _substrait_AggregateRel_Grouping { 
    /* Name of the option to set. If the consumer does not recognize the
 option, it must reject the plan. The name is matched case-insensitively
 with option names defined for the function. */
    pb_size_t grouping_expressions_count;
    struct _substrait_Expression *grouping_expressions;
} substrait_AggregateRel_Grouping;

typedef struct _substrait_AggregateRel_Measure { 
    struct _substrait_AggregateFunction *measure;
    struct _substrait_Expression *filter;
} substrait_AggregateRel_Measure;

typedef struct _substrait_CrossRel { 
    struct _substrait_RelCommon *common;
    struct _substrait_Rel *left;
    /* The columns that will be modified (representing after-image of a schema change) */
    struct _substrait_Rel *right;
    /* The default values for the columns (representing after-image of a schema change)
 E.g., in case of an ALTER TABLE that changes some of the column default values, we expect
 the table_defaults Struct to report a full list of default values reflecting the result of applying
 the ALTER TABLE operator successfully */
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_CrossRel;

typedef struct _substrait_DdlRel { 
    pb_size_t which_write_type;
    union {
        struct _substrait_NamedObjectWrite *named_object;
        struct _substrait_ExtensionObject *extension_object;
    } write_type;
    struct _substrait_NamedStruct *table_schema;
    struct _substrait_Expression_Literal_Struct *table_defaults;
    substrait_DdlRel_DdlObject *object;
    substrait_DdlRel_DdlOp *op;
    struct _substrait_Rel *view_definition;
} substrait_DdlRel;

typedef struct _substrait_ExchangeRel { 
    struct _substrait_RelCommon *common;
    struct _substrait_Rel *input;
    int32_t *partition_count;
    pb_size_t targets_count;
    struct _substrait_ExchangeRel_ExchangeTarget *targets;
    pb_size_t which_exchange_kind;
    union {
        struct _substrait_ExchangeRel_ScatterFields *scatter_by_fields;
        struct _substrait_ExchangeRel_SingleBucketExpression *single_target;
        struct _substrait_ExchangeRel_MultiBucketExpression *multi_target;
        struct _substrait_ExchangeRel_RoundRobin *round_robin;
        struct _substrait_ExchangeRel_Broadcast *broadcast;
    } exchange_kind;
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_ExchangeRel;

typedef struct _substrait_ExchangeRel_Broadcast { 
    char dummy_field;
} substrait_ExchangeRel_Broadcast;

typedef struct _substrait_ExchangeRel_ExchangeTarget { 
    pb_size_t partition_id_count;
    int32_t *partition_id;
    pb_size_t which_target_type;
    union {
        char *uri;
        struct _substrait_Any *extended;
    } target_type;
} substrait_ExchangeRel_ExchangeTarget;

typedef struct _substrait_ExchangeRel_MultiBucketExpression { 
    struct _substrait_Expression *expression;
    bool *constrained_to_count;
} substrait_ExchangeRel_MultiBucketExpression;

typedef struct _substrait_ExchangeRel_RoundRobin { 
    bool *exact;
} substrait_ExchangeRel_RoundRobin;

typedef struct _substrait_ExchangeRel_ScatterFields { 
    pb_size_t fields_count;
    struct _substrait_Expression_FieldReference *fields;
} substrait_ExchangeRel_ScatterFields;

typedef struct _substrait_ExchangeRel_SingleBucketExpression { 
    struct _substrait_Expression *expression;
} substrait_ExchangeRel_SingleBucketExpression;

typedef struct _substrait_Expression { 
    pb_size_t which_rex_type;
    union {
        struct _substrait_Expression_Literal *literal;
        struct _substrait_Expression_FieldReference *selection;
        struct _substrait_Expression_ScalarFunction *scalar_function;
        struct _substrait_Expression_WindowFunction *window_function;
        struct _substrait_Expression_IfThen *if_then;
        struct _substrait_Expression_SwitchExpression *switch_expression;
        struct _substrait_Expression_SingularOrList *singular_or_list;
        struct _substrait_Expression_MultiOrList *multi_or_list;
        struct _substrait_Expression_Enum *enum;
        struct _substrait_Expression_Cast *cast;
        struct _substrait_Expression_Subquery *subquery;
    } rex_type;
} substrait_Expression;

typedef struct _substrait_Expression_Cast { 
    struct _substrait_Type *type;
    struct _substrait_Expression *input;
    substrait_Expression_Cast_FailureBehavior *failure_behavior;
} substrait_Expression_Cast;

typedef struct _substrait_Expression_EmbeddedFunction { 
    pb_size_t arguments_count;
    struct _substrait_Expression *arguments;
    struct _substrait_Type *output_type;
    pb_size_t which_kind;
    union {
        struct _substrait_Expression_EmbeddedFunction_PythonPickleFunction *python_pickle_function;
        struct _substrait_Expression_EmbeddedFunction_WebAssemblyFunction *web_assembly_function;
    } kind;
} substrait_Expression_EmbeddedFunction;

typedef struct _substrait_Expression_EmbeddedFunction_PythonPickleFunction { 
    pb_bytes_array_t *function_;
    pb_size_t prerequisite_count;
    char **prerequisite;
} substrait_Expression_EmbeddedFunction_PythonPickleFunction;

typedef struct _substrait_Expression_EmbeddedFunction_WebAssemblyFunction { 
    pb_bytes_array_t *script;
    pb_size_t prerequisite_count;
    char **prerequisite;
} substrait_Expression_EmbeddedFunction_WebAssemblyFunction;

typedef struct _substrait_Expression_Enum { 
    pb_size_t which_enum_kind;
    union {
        char *specified;
        struct _substrait_Expression_Enum_Empty *unspecified;
    } enum_kind;
} substrait_Expression_Enum;

typedef struct _substrait_Expression_Enum_Empty { 
    char dummy_field;
} substrait_Expression_Enum_Empty;

typedef struct _substrait_Expression_FieldReference { 
    pb_size_t which_reference_type;
    union {
        struct _substrait_Expression_ReferenceSegment *direct_reference;
        struct _substrait_Expression_MaskExpression *masked_reference;
    } reference_type;
    pb_size_t which_root_type;
    union {
        struct _substrait_Expression *expression;
        struct _substrait_Expression_FieldReference_RootReference *root_reference;
        struct _substrait_Expression_FieldReference_OuterReference *outer_reference;
    } root_type;
} substrait_Expression_FieldReference;

typedef struct _substrait_Expression_FieldReference_OuterReference { 
    uint32_t *steps_out;
} substrait_Expression_FieldReference_OuterReference;

typedef struct _substrait_Expression_FieldReference_RootReference { 
    char dummy_field;
} substrait_Expression_FieldReference_RootReference;

typedef struct _substrait_Expression_IfThen { 
    pb_size_t ifs_count;
    struct _substrait_Expression_IfThen_IfClause *ifs;
    struct _substrait_Expression *else_;
} substrait_Expression_IfThen;

typedef struct _substrait_Expression_IfThen_IfClause { 
    struct _substrait_Expression *if_;
    struct _substrait_Expression *then;
} substrait_Expression_IfThen_IfClause;

typedef struct _substrait_Expression_Literal { 
    pb_size_t which_literal_type;
    union {
        bool *boolean;
        int32_t *i8;
        int32_t *i16;
        int32_t *i32;
        int64_t *i64;
        float *fp32;
        double *fp64;
        char *string;
        pb_bytes_array_t *binary;
        int64_t *timestamp;
        int32_t *date;
        int64_t *time;
        struct _substrait_Expression_Literal_IntervalYearToMonth *interval_year_to_month;
        struct _substrait_Expression_Literal_IntervalDayToSecond *interval_day_to_second;
        char *fixed_char;
        struct _substrait_Expression_Literal_VarChar *var_char;
        pb_bytes_array_t *fixed_binary;
        struct _substrait_Expression_Literal_Decimal *decimal;
        struct _substrait_Expression_Literal_Struct *struct_;
        struct _substrait_Expression_Literal_Map *map;
        int64_t *timestamp_tz;
        pb_bytes_array_t *uuid;
        struct _substrait_Type *null;
        struct _substrait_Expression_Literal_List *list;
        struct _substrait_Type_List *empty_list;
        struct _substrait_Type_Map *empty_map;
        struct _substrait_Expression_Literal_UserDefined *user_defined;
    } literal_type;
    bool *nullable;
    uint32_t *type_variation_reference;
} substrait_Expression_Literal;

typedef struct _substrait_Expression_Literal_Decimal { 
    pb_bytes_array_t *value;
    int32_t *precision;
    int32_t *scale;
} substrait_Expression_Literal_Decimal;

typedef struct _substrait_Expression_Literal_IntervalDayToSecond { 
    int32_t *days;
    int32_t *seconds;
    int32_t *microseconds;
} substrait_Expression_Literal_IntervalDayToSecond;

typedef struct _substrait_Expression_Literal_IntervalYearToMonth { 
    int32_t *years;
    int32_t *months;
} substrait_Expression_Literal_IntervalYearToMonth;

typedef struct _substrait_Expression_Literal_List { 
    pb_size_t values_count;
    struct _substrait_Expression_Literal *values;
} substrait_Expression_Literal_List;

typedef struct _substrait_Expression_Literal_Map { 
    pb_size_t key_values_count;
    struct _substrait_Expression_Literal_Map_KeyValue *key_values;
} substrait_Expression_Literal_Map;

typedef struct _substrait_Expression_Literal_Map_KeyValue { 
    struct _substrait_Expression_Literal *key;
    struct _substrait_Expression_Literal *value;
} substrait_Expression_Literal_Map_KeyValue;

typedef struct _substrait_Expression_Literal_Struct { 
    pb_size_t fields_count;
    struct _substrait_Expression_Literal *fields;
} substrait_Expression_Literal_Struct;

typedef struct _substrait_Expression_Literal_UserDefined { 
    uint32_t *type_reference;
    struct _substrait_Any *value;
    pb_size_t type_parameters_count;
    struct _substrait_Type_Parameter *type_parameters;
} substrait_Expression_Literal_UserDefined;

typedef struct _substrait_Expression_Literal_VarChar { 
    char *value;
    uint32_t *length;
} substrait_Expression_Literal_VarChar;

typedef struct _substrait_Expression_MaskExpression { 
    struct _substrait_Expression_MaskExpression_StructSelect *select;
    bool *maintain_singular_struct;
} substrait_Expression_MaskExpression;

typedef struct _substrait_Expression_MaskExpression_ListSelect { 
    pb_size_t selection_count;
    struct _substrait_Expression_MaskExpression_ListSelect_ListSelectItem *selection;
    struct _substrait_Expression_MaskExpression_Select *child;
} substrait_Expression_MaskExpression_ListSelect;

typedef struct _substrait_Expression_MaskExpression_ListSelect_ListSelectItem { 
    pb_size_t which_type;
    union {
        struct _substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement *item;
        struct _substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice *slice;
    } type;
} substrait_Expression_MaskExpression_ListSelect_ListSelectItem;

typedef struct _substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement { 
    int32_t *field;
} substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement;

typedef struct _substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice { 
    int32_t *start;
    int32_t *end;
} substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice;

typedef struct _substrait_Expression_MaskExpression_MapSelect { 
    pb_size_t which_select;
    union {
        struct _substrait_Expression_MaskExpression_MapSelect_MapKey *key;
        struct _substrait_Expression_MaskExpression_MapSelect_MapKeyExpression *expression;
    } select;
    struct _substrait_Expression_MaskExpression_Select *child;
} substrait_Expression_MaskExpression_MapSelect;

typedef struct _substrait_Expression_MaskExpression_MapSelect_MapKey { 
    char *map_key;
} substrait_Expression_MaskExpression_MapSelect_MapKey;

typedef struct _substrait_Expression_MaskExpression_MapSelect_MapKeyExpression { 
    char *map_key_expression;
} substrait_Expression_MaskExpression_MapSelect_MapKeyExpression;

typedef struct _substrait_Expression_MaskExpression_Select { 
    pb_size_t which_type;
    union {
        struct _substrait_Expression_MaskExpression_StructSelect *struct_;
        struct _substrait_Expression_MaskExpression_ListSelect *list;
        struct _substrait_Expression_MaskExpression_MapSelect *map;
    } type;
} substrait_Expression_MaskExpression_Select;

typedef struct _substrait_Expression_MaskExpression_StructItem { 
    int32_t *field;
    struct _substrait_Expression_MaskExpression_Select *child;
} substrait_Expression_MaskExpression_StructItem;

typedef struct _substrait_Expression_MaskExpression_StructSelect { 
    pb_size_t struct_items_count;
    struct _substrait_Expression_MaskExpression_StructItem *struct_items;
} substrait_Expression_MaskExpression_StructSelect;

typedef struct _substrait_Expression_MultiOrList { 
    pb_size_t value_count;
    struct _substrait_Expression *value;
    pb_size_t options_count;
    struct _substrait_Expression_MultiOrList_Record *options;
} substrait_Expression_MultiOrList;

typedef struct _substrait_Expression_MultiOrList_Record { 
    pb_size_t fields_count;
    struct _substrait_Expression *fields;
} substrait_Expression_MultiOrList_Record;

typedef struct _substrait_Expression_ReferenceSegment { 
    pb_size_t which_reference_type;
    union {
        struct _substrait_Expression_ReferenceSegment_MapKey *map_key;
        struct _substrait_Expression_ReferenceSegment_StructField *struct_field;
        struct _substrait_Expression_ReferenceSegment_ListElement *list_element;
    } reference_type;
} substrait_Expression_ReferenceSegment;

typedef struct _substrait_Expression_ReferenceSegment_ListElement { 
    int32_t *offset;
    struct _substrait_Expression_ReferenceSegment *child;
} substrait_Expression_ReferenceSegment_ListElement;

typedef struct _substrait_Expression_ReferenceSegment_MapKey { 
    struct _substrait_Expression_Literal *map_key;
    struct _substrait_Expression_ReferenceSegment *child;
} substrait_Expression_ReferenceSegment_MapKey;

typedef struct _substrait_Expression_ReferenceSegment_StructField { 
    int32_t *field;
    struct _substrait_Expression_ReferenceSegment *child;
} substrait_Expression_ReferenceSegment_StructField;

typedef struct _substrait_Expression_ScalarFunction { 
    uint32_t *function_reference;
    pb_size_t args_count;
    struct _substrait_Expression *args;
    struct _substrait_Type *output_type;
    pb_size_t arguments_count;
    struct _substrait_FunctionArgument *arguments;
    pb_size_t options_count;
    struct _substrait_FunctionOption *options;
} substrait_Expression_ScalarFunction;

typedef struct _substrait_Expression_SingularOrList { 
    struct _substrait_Expression *value;
    pb_size_t options_count;
    struct _substrait_Expression *options;
} substrait_Expression_SingularOrList;

typedef struct _substrait_Expression_Subquery { 
    pb_size_t which_subquery_type;
    union {
        struct _substrait_Expression_Subquery_Scalar *scalar;
        struct _substrait_Expression_Subquery_InPredicate *in_predicate;
        struct _substrait_Expression_Subquery_SetPredicate *set_predicate;
        struct _substrait_Expression_Subquery_SetComparison *set_comparison;
    } subquery_type;
} substrait_Expression_Subquery;

typedef struct _substrait_Expression_Subquery_InPredicate { 
    pb_size_t needles_count;
    struct _substrait_Expression *needles;
    struct _substrait_Rel *haystack;
} substrait_Expression_Subquery_InPredicate;

typedef struct _substrait_Expression_Subquery_Scalar { 
    struct _substrait_Rel *input;
} substrait_Expression_Subquery_Scalar;

typedef struct _substrait_Expression_Subquery_SetComparison { 
    substrait_Expression_Subquery_SetComparison_ReductionOp *reduction_op;
    substrait_Expression_Subquery_SetComparison_ComparisonOp *comparison_op;
    struct _substrait_Expression *left;
    struct _substrait_Rel *right;
} substrait_Expression_Subquery_SetComparison;

typedef struct _substrait_Expression_Subquery_SetPredicate { 
    substrait_Expression_Subquery_SetPredicate_PredicateOp *predicate_op;
    struct _substrait_Rel *tuples;
} substrait_Expression_Subquery_SetPredicate;

typedef struct _substrait_Expression_SwitchExpression { 
    pb_size_t ifs_count;
    struct _substrait_Expression_SwitchExpression_IfValue *ifs;
    struct _substrait_Expression *else_;
    struct _substrait_Expression *match;
} substrait_Expression_SwitchExpression;

typedef struct _substrait_Expression_SwitchExpression_IfValue { 
    struct _substrait_Expression_Literal *if_;
    struct _substrait_Expression *then;
} substrait_Expression_SwitchExpression_IfValue;

typedef struct _substrait_Expression_WindowFunction { 
    uint32_t *function_reference;
    pb_size_t partitions_count;
    struct _substrait_Expression *partitions;
    pb_size_t sorts_count;
    struct _substrait_SortField *sorts;
    struct _substrait_Expression_WindowFunction_Bound *upper_bound;
    struct _substrait_Expression_WindowFunction_Bound *lower_bound;
    substrait_AggregationPhase *phase;
    struct _substrait_Type *output_type;
    pb_size_t args_count;
    struct _substrait_Expression *args;
    pb_size_t arguments_count;
    struct _substrait_FunctionArgument *arguments;
    substrait_AggregateFunction_AggregationInvocation *invocation;
    pb_size_t options_count;
    struct _substrait_FunctionOption *options;
} substrait_Expression_WindowFunction;

typedef struct _substrait_Expression_WindowFunction_Bound { 
    pb_size_t which_kind;
    union {
        struct _substrait_Expression_WindowFunction_Bound_Preceding *preceding;
        struct _substrait_Expression_WindowFunction_Bound_Following *following;
        struct _substrait_Expression_WindowFunction_Bound_CurrentRow *current_row;
        struct _substrait_Expression_WindowFunction_Bound_Unbounded *unbounded;
    } kind;
} substrait_Expression_WindowFunction_Bound;

typedef struct _substrait_Expression_WindowFunction_Bound_CurrentRow { 
    char dummy_field;
} substrait_Expression_WindowFunction_Bound_CurrentRow;

typedef struct _substrait_Expression_WindowFunction_Bound_Following { 
    int64_t *offset;
} substrait_Expression_WindowFunction_Bound_Following;

typedef struct _substrait_Expression_WindowFunction_Bound_Preceding { 
    int64_t *offset;
} substrait_Expression_WindowFunction_Bound_Preceding;

typedef struct _substrait_Expression_WindowFunction_Bound_Unbounded { 
    char dummy_field;
} substrait_Expression_WindowFunction_Bound_Unbounded;

typedef struct _substrait_ExtensionLeafRel { 
    struct _substrait_RelCommon *common;
    struct _substrait_Any *detail;
} substrait_ExtensionLeafRel;

typedef struct _substrait_ExtensionMultiRel { 
    struct _substrait_RelCommon *common;
    pb_size_t inputs_count;
    struct _substrait_Rel *inputs;
    struct _substrait_Any *detail;
} substrait_ExtensionMultiRel;

typedef struct _substrait_ExtensionObject { 
    struct _substrait_Any *detail;
} substrait_ExtensionObject;

typedef struct _substrait_ExtensionSingleRel { 
    struct _substrait_RelCommon *common;
    struct _substrait_Rel *input;
    struct _substrait_Any *detail;
} substrait_ExtensionSingleRel;

/* The operator that modifies the content of a database (operates on 1 table at a time, but tuple-selection/source can be
 based on joining of multiple tables). */
typedef struct _substrait_FetchRel { 
    struct _substrait_RelCommon *common;
    struct _substrait_Rel *input;
    /* The schema of the table (must align with Rel input (e.g., number of leaf fields must match)) */
    int64_t *offset;
    /* The type of operation to perform */
    int64_t *count;
    /* The relation that determines the tuples to add/remove/modify
 the schema must match with table_schema. Default values must be explicitly stated
 in a ProjectRel at the top of the input. The match must also
 occur in case of DELETE to ensure multi-engine plans are unequivocal. */
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_FetchRel;

/* An aggregate function. */
typedef struct _substrait_FilterRel { 
    /* Points to a function_anchor defined in this plan, which must refer
 to an aggregate function in the associated YAML file. Required; 0 is
 considered to be a valid anchor/reference. */
    struct _substrait_RelCommon *common;
    /* The arguments to be bound to the function. This must have exactly the
 number of arguments specified in the function definition, and the
 argument types must also match exactly:

  - Value arguments must be bound using FunctionArgument.value, and
    the expression in that must yield a value of a type that a function
    overload is defined for.
  - Type arguments must be bound using FunctionArgument.type, and a
    function overload must be defined for that type.
  - Enum arguments must be bound using FunctionArgument.enum
    followed by Enum.specified, with a string that case-insensitively
    matches one of the allowed options.
  - Optional enum arguments must be bound using FunctionArgument.enum
    followed by either Enum.specified or Enum.unspecified. If specified,
    the string must case-insensitively match one of the allowed options. */
    struct _substrait_Rel *input;
    /* Options to specify behavior for corner cases, or leave behavior
 unspecified if the consumer does not need specific behavior in these
 cases. */
    struct _substrait_Expression *condition;
    /* Must be set to the return type of the function, exactly as derived
 using the declaration in the extension. */
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_FilterRel;

typedef struct _substrait_FunctionArgument { 
    pb_size_t which_arg_type;
    union {
        char *enum_;
        struct _substrait_Type *type;
        struct _substrait_Expression *value;
    } arg_type;
} substrait_FunctionArgument;

typedef struct _substrait_FunctionOption { 
    char *name;
    pb_size_t preference_count;
    char **preference;
} substrait_FunctionOption;

/* A stub type that can be used to extend/introduce new table types outside
 the specification. */
typedef struct _substrait_JoinRel { 
    struct _substrait_RelCommon *common;
    struct _substrait_Rel *left;
    struct _substrait_Rel *right;
    struct _substrait_Expression *expression;
    struct _substrait_Expression *post_join_filter;
    substrait_JoinRel_JoinType *type;
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_JoinRel;

typedef struct _substrait_NamedObjectWrite { 
    pb_size_t names_count;
    char **names;
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_NamedObjectWrite;

/* A base object for writing (e.g., a table or a view). */
typedef struct _substrait_ProjectRel { 
    /* The list of string is used to represent namespacing (e.g., mydb.mytable).
 This assumes shared catalog between systems exchanging a message. */
    struct _substrait_RelCommon *common;
    struct _substrait_Rel *input;
    pb_size_t expressions_count;
    struct _substrait_Expression *expressions;
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_ProjectRel;

/* The relational operator representing a GROUP BY Aggregate */
typedef struct _substrait_ReadRel { 
    struct _substrait_RelCommon *common;
    /* Input of the aggregation */
    struct _substrait_NamedStruct *base_schema;
    /* A list of expression grouping that the aggregation measured should be calculated for. */
    struct _substrait_Expression *filter;
    struct _substrait_Expression_MaskExpression *projection;
    pb_size_t which_read_type;
    union {
        struct _substrait_ReadRel_VirtualTable *virtual_table;
        struct _substrait_ReadRel_LocalFiles *local_files;
        struct _substrait_ReadRel_NamedTable *named_table;
        struct _substrait_ReadRel_ExtensionTable *extension_table;
    } read_type;
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
    /* A list of one or more aggregate expressions along with an optional filter. */
    struct _substrait_Expression *best_effort_filter;
} substrait_ReadRel;

/* The relational set operators (intersection/union/etc..) */
typedef struct _substrait_ReadRel_ExtensionTable { 
    struct _substrait_Any *detail;
} substrait_ReadRel_ExtensionTable;

/* Stub to support extension with a single input */
typedef struct _substrait_ReadRel_LocalFiles { 
    pb_size_t items_count;
    struct _substrait_ReadRel_LocalFiles_FileOrFiles *items;
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_ReadRel_LocalFiles;

/* Stub to support extension with a zero inputs */
typedef struct _substrait_ReadRel_LocalFiles_FileOrFiles { 
    pb_size_t which_path_type;
    union {
        char *uri_path;
        char *uri_path_glob;
        char *uri_file;
        char *uri_folder;
    } path_type;
    uint64_t *partition_index;
    uint64_t *start;
    uint64_t *length;
    pb_size_t which_file_format;
    union {
        struct _substrait_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions *parquet;
        struct _substrait_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions *arrow;
        struct _substrait_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions *orc;
        struct _substrait_Any *extension;
        struct _substrait_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions *dwrf;
    } file_format;
} substrait_ReadRel_LocalFiles_FileOrFiles;

/* A redistribution operation */
typedef struct _substrait_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions { 
    char dummy_field;
} substrait_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions;

/* A relation (used internally in a plan) */
typedef struct _substrait_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions { 
    char dummy_field;
} substrait_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions;

/* A relation with output field names.

 This is for use at the root of a `Rel` tree. */
typedef struct _substrait_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions { 
    char dummy_field;
} substrait_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions;

/* Stub to support extension with multiple inputs */
typedef struct _substrait_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions { 
    char dummy_field;
} substrait_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions;

/* The ORDERY BY (or sorting) relational operator. Beside describing a base relation, it includes a list of fields to sort on */
typedef struct _substrait_ReadRel_NamedTable { 
    pb_size_t names_count;
    char **names;
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_ReadRel_NamedTable;

/* The relational operator capturing simple FILTERs (as in the WHERE clause of SQL) */
typedef struct _substrait_ReadRel_VirtualTable { 
    pb_size_t values_count;
    struct _substrait_Expression_Literal_Struct *values;
} substrait_ReadRel_VirtualTable;

typedef struct _substrait_Rel { 
    pb_size_t which_rel_type;
    union {
        struct _substrait_ReadRel *read;
        struct _substrait_FilterRel *filter;
        struct _substrait_FetchRel *fetch;
        struct _substrait_AggregateRel *aggregate;
        struct _substrait_SortRel *sort;
        struct _substrait_JoinRel *join;
        struct _substrait_ProjectRel *project;
        struct _substrait_SetRel *set;
        struct _substrait_ExtensionSingleRel *extension_single;
        struct _substrait_ExtensionMultiRel *extension_multi;
        struct _substrait_ExtensionLeafRel *extension_leaf;
        struct _substrait_CrossRel *cross;
    } rel_type;
} substrait_Rel;

/* Common fields for all relational operators */
typedef struct _substrait_RelCommon { 
    pb_size_t which_emit_kind;
    union {
        /* The underlying relation is output as is (no reordering or projection of columns) */
        struct _substrait_RelCommon_Direct *direct;
        /* Allows to control for order and inclusion of fields */
        struct _substrait_RelCommon_Emit *emit;
    } emit_kind;
    struct _substrait_RelCommon_Hint *hint;
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_RelCommon;

/* The scan operator of base data (physical or virtual), including filtering and projection. */
typedef struct _substrait_RelCommon_Direct { 
    char dummy_field;
} substrait_RelCommon_Direct;

/* This operator allows to represent calculated expressions of fields (e.g., a+b). Direct/Emit are used to represent classical relational projections */
typedef struct _substrait_RelCommon_Emit { 
    pb_size_t output_mapping_count;
    int32_t *output_mapping;
} substrait_RelCommon_Emit;

/* The binary JOIN relational operator left-join-right, including various join types, a join condition and post_join_filter expression */
typedef struct _substrait_RelCommon_Hint { 
    struct _substrait_RelCommon_Hint_Stats *stats;
    struct _substrait_RelCommon_Hint_RuntimeConstraint *constraint;
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_RelCommon_Hint;

/* The relational operator representing LIMIT/OFFSET or TOP type semantics. */
typedef struct _substrait_RelCommon_Hint_RuntimeConstraint { 
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_RelCommon_Hint_RuntimeConstraint;

/* Cartesian product relational operator of two tables (left and right) */
typedef struct _substrait_RelCommon_Hint_Stats { 
    double *row_count;
    double *record_size;
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_RelCommon_Hint_Stats;

typedef struct _substrait_RelRoot { 
    struct _substrait_Rel *input;
    pb_size_t names_count;
    char **names;
} substrait_RelRoot;

typedef struct _substrait_SetRel { 
    struct _substrait_RelCommon *common;
    pb_size_t inputs_count;
    struct _substrait_Rel *inputs;
    substrait_SetRel_SetOp *op;
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_SetRel;

typedef struct _substrait_SortField { 
    struct _substrait_Expression *expr;
    pb_size_t which_sort_kind;
    union {
        substrait_SortField_SortDirection *direction;
        uint32_t *comparison_function_reference;
    } sort_kind;
} substrait_SortField;

/* The description of a field to sort on (including the direction of sorting and null semantics) */
typedef struct _substrait_SortRel { 
    struct _substrait_RelCommon *common;
    struct _substrait_Rel *input;
    pb_size_t sorts_count;
    struct _substrait_SortField *sorts;
    struct _substrait_extensions_AdvancedExtension *advanced_extension;
} substrait_SortRel;

typedef struct _substrait_WriteRel { 
    pb_size_t which_write_type;
    union {
        struct _substrait_NamedObjectWrite *named_table;
        struct _substrait_ExtensionObject *extension_table;
    } write_type;
    struct _substrait_NamedStruct *table_schema;
    substrait_WriteRel_WriteOp *op;
    struct _substrait_Rel *input;
    substrait_WriteRel_OutputMode *output;
} substrait_WriteRel;


/* Helper constants for enums */
#define _substrait_AggregationPhase_MIN substrait_AggregationPhase_AGGREGATION_PHASE_UNSPECIFIED
#define _substrait_AggregationPhase_MAX substrait_AggregationPhase_AGGREGATION_PHASE_INTERMEDIATE_TO_RESULT
#define _substrait_AggregationPhase_ARRAYSIZE ((substrait_AggregationPhase)(substrait_AggregationPhase_AGGREGATION_PHASE_INTERMEDIATE_TO_RESULT+1))

#define _substrait_JoinRel_JoinType_MIN substrait_JoinRel_JoinType_JOIN_TYPE_UNSPECIFIED
#define _substrait_JoinRel_JoinType_MAX substrait_JoinRel_JoinType_JOIN_TYPE_SINGLE
#define _substrait_JoinRel_JoinType_ARRAYSIZE ((substrait_JoinRel_JoinType)(substrait_JoinRel_JoinType_JOIN_TYPE_SINGLE+1))

#define _substrait_SetRel_SetOp_MIN substrait_SetRel_SetOp_SET_OP_UNSPECIFIED
#define _substrait_SetRel_SetOp_MAX substrait_SetRel_SetOp_SET_OP_UNION_ALL
#define _substrait_SetRel_SetOp_ARRAYSIZE ((substrait_SetRel_SetOp)(substrait_SetRel_SetOp_SET_OP_UNION_ALL+1))

#define _substrait_DdlRel_DdlObject_MIN substrait_DdlRel_DdlObject_DDL_OBJECT_UNSPECIFIED
#define _substrait_DdlRel_DdlObject_MAX substrait_DdlRel_DdlObject_DDL_OBJECT_VIEW
#define _substrait_DdlRel_DdlObject_ARRAYSIZE ((substrait_DdlRel_DdlObject)(substrait_DdlRel_DdlObject_DDL_OBJECT_VIEW+1))

#define _substrait_DdlRel_DdlOp_MIN substrait_DdlRel_DdlOp_DDL_OP_UNSPECIFIED
#define _substrait_DdlRel_DdlOp_MAX substrait_DdlRel_DdlOp_DDL_OP_DROP_IF_EXIST
#define _substrait_DdlRel_DdlOp_ARRAYSIZE ((substrait_DdlRel_DdlOp)(substrait_DdlRel_DdlOp_DDL_OP_DROP_IF_EXIST+1))

#define _substrait_WriteRel_WriteOp_MIN substrait_WriteRel_WriteOp_WRITE_OP_UNSPECIFIED
#define _substrait_WriteRel_WriteOp_MAX substrait_WriteRel_WriteOp_WRITE_OP_CTAS
#define _substrait_WriteRel_WriteOp_ARRAYSIZE ((substrait_WriteRel_WriteOp)(substrait_WriteRel_WriteOp_WRITE_OP_CTAS+1))

#define _substrait_WriteRel_OutputMode_MIN substrait_WriteRel_OutputMode_OUTPUT_MODE_UNSPECIFIED
#define _substrait_WriteRel_OutputMode_MAX substrait_WriteRel_OutputMode_OUTPUT_MODE_MODIFIED_TUPLES
#define _substrait_WriteRel_OutputMode_ARRAYSIZE ((substrait_WriteRel_OutputMode)(substrait_WriteRel_OutputMode_OUTPUT_MODE_MODIFIED_TUPLES+1))

#define _substrait_Expression_Cast_FailureBehavior_MIN substrait_Expression_Cast_FailureBehavior_FAILURE_BEHAVIOR_UNSPECIFIED
#define _substrait_Expression_Cast_FailureBehavior_MAX substrait_Expression_Cast_FailureBehavior_FAILURE_BEHAVIOR_THROW_EXCEPTION
#define _substrait_Expression_Cast_FailureBehavior_ARRAYSIZE ((substrait_Expression_Cast_FailureBehavior)(substrait_Expression_Cast_FailureBehavior_FAILURE_BEHAVIOR_THROW_EXCEPTION+1))

#define _substrait_Expression_Subquery_SetPredicate_PredicateOp_MIN substrait_Expression_Subquery_SetPredicate_PredicateOp_PREDICATE_OP_UNSPECIFIED
#define _substrait_Expression_Subquery_SetPredicate_PredicateOp_MAX substrait_Expression_Subquery_SetPredicate_PredicateOp_PREDICATE_OP_UNIQUE
#define _substrait_Expression_Subquery_SetPredicate_PredicateOp_ARRAYSIZE ((substrait_Expression_Subquery_SetPredicate_PredicateOp)(substrait_Expression_Subquery_SetPredicate_PredicateOp_PREDICATE_OP_UNIQUE+1))

#define _substrait_Expression_Subquery_SetComparison_ComparisonOp_MIN substrait_Expression_Subquery_SetComparison_ComparisonOp_COMPARISON_OP_UNSPECIFIED
#define _substrait_Expression_Subquery_SetComparison_ComparisonOp_MAX substrait_Expression_Subquery_SetComparison_ComparisonOp_COMPARISON_OP_GE
#define _substrait_Expression_Subquery_SetComparison_ComparisonOp_ARRAYSIZE ((substrait_Expression_Subquery_SetComparison_ComparisonOp)(substrait_Expression_Subquery_SetComparison_ComparisonOp_COMPARISON_OP_GE+1))

#define _substrait_Expression_Subquery_SetComparison_ReductionOp_MIN substrait_Expression_Subquery_SetComparison_ReductionOp_REDUCTION_OP_UNSPECIFIED
#define _substrait_Expression_Subquery_SetComparison_ReductionOp_MAX substrait_Expression_Subquery_SetComparison_ReductionOp_REDUCTION_OP_ALL
#define _substrait_Expression_Subquery_SetComparison_ReductionOp_ARRAYSIZE ((substrait_Expression_Subquery_SetComparison_ReductionOp)(substrait_Expression_Subquery_SetComparison_ReductionOp_REDUCTION_OP_ALL+1))

#define _substrait_SortField_SortDirection_MIN substrait_SortField_SortDirection_SORT_DIRECTION_UNSPECIFIED
#define _substrait_SortField_SortDirection_MAX substrait_SortField_SortDirection_SORT_DIRECTION_CLUSTERED
#define _substrait_SortField_SortDirection_ARRAYSIZE ((substrait_SortField_SortDirection)(substrait_SortField_SortDirection_SORT_DIRECTION_CLUSTERED+1))

#define _substrait_AggregateFunction_AggregationInvocation_MIN substrait_AggregateFunction_AggregationInvocation_AGGREGATION_INVOCATION_UNSPECIFIED
#define _substrait_AggregateFunction_AggregationInvocation_MAX substrait_AggregateFunction_AggregationInvocation_AGGREGATION_INVOCATION_DISTINCT
#define _substrait_AggregateFunction_AggregationInvocation_ARRAYSIZE ((substrait_AggregateFunction_AggregationInvocation)(substrait_AggregateFunction_AggregationInvocation_AGGREGATION_INVOCATION_DISTINCT+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define substrait_RelCommon_init_default         {0, {NULL}, NULL, NULL}
#define substrait_RelCommon_Direct_init_default  {0}
#define substrait_RelCommon_Emit_init_default    {0, NULL}
#define substrait_RelCommon_Hint_init_default    {NULL, NULL, NULL}
#define substrait_RelCommon_Hint_Stats_init_default {NULL, NULL, NULL}
#define substrait_RelCommon_Hint_RuntimeConstraint_init_default {NULL}
#define substrait_ReadRel_init_default           {NULL, NULL, NULL, NULL, 0, {NULL}, NULL, NULL}
#define substrait_ReadRel_NamedTable_init_default {0, NULL, NULL}
#define substrait_ReadRel_VirtualTable_init_default {0, NULL}
#define substrait_ReadRel_ExtensionTable_init_default {NULL}
#define substrait_ReadRel_LocalFiles_init_default {0, NULL, NULL}
#define substrait_ReadRel_LocalFiles_FileOrFiles_init_default {0, {NULL}, NULL, NULL, NULL, 0, {NULL}}
#define substrait_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions_init_default {0}
#define substrait_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions_init_default {0}
#define substrait_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions_init_default {0}
#define substrait_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions_init_default {0}
#define substrait_ProjectRel_init_default        {NULL, NULL, 0, NULL, NULL}
#define substrait_JoinRel_init_default           {NULL, NULL, NULL, NULL, NULL, NULL, NULL}
#define substrait_CrossRel_init_default          {NULL, NULL, NULL, NULL}
#define substrait_FetchRel_init_default          {NULL, NULL, NULL, NULL, NULL}
#define substrait_AggregateRel_init_default      {NULL, NULL, 0, NULL, 0, NULL, NULL}
#define substrait_AggregateRel_Grouping_init_default {0, NULL}
#define substrait_AggregateRel_Measure_init_default {NULL, NULL}
#define substrait_SortRel_init_default           {NULL, NULL, 0, NULL, NULL}
#define substrait_FilterRel_init_default         {NULL, NULL, NULL, NULL}
#define substrait_SetRel_init_default            {NULL, 0, NULL, NULL, NULL}
#define substrait_ExtensionSingleRel_init_default {NULL, NULL, NULL}
#define substrait_ExtensionLeafRel_init_default  {NULL, NULL}
#define substrait_ExtensionMultiRel_init_default {NULL, 0, NULL, NULL}
#define substrait_ExchangeRel_init_default       {NULL, NULL, NULL, 0, NULL, 0, {NULL}, NULL}
#define substrait_ExchangeRel_ScatterFields_init_default {0, NULL}
#define substrait_ExchangeRel_SingleBucketExpression_init_default {NULL}
#define substrait_ExchangeRel_MultiBucketExpression_init_default {NULL, NULL}
#define substrait_ExchangeRel_Broadcast_init_default {0}
#define substrait_ExchangeRel_RoundRobin_init_default {NULL}
#define substrait_ExchangeRel_ExchangeTarget_init_default {0, NULL, 0, {NULL}}
#define substrait_RelRoot_init_default           {NULL, 0, NULL}
#define substrait_Rel_init_default               {0, {NULL}}
#define substrait_NamedObjectWrite_init_default  {0, NULL, NULL}
#define substrait_ExtensionObject_init_default   {NULL}
#define substrait_DdlRel_init_default            {0, {NULL}, NULL, NULL, NULL, NULL, NULL}
#define substrait_WriteRel_init_default          {0, {NULL}, NULL, NULL, NULL, NULL}
#define substrait_FunctionArgument_init_default  {0, {NULL}}
#define substrait_FunctionOption_init_default    {NULL, 0, NULL}
#define substrait_Expression_init_default        {0, {NULL}}
#define substrait_Expression_Enum_init_default   {0, {NULL}}
#define substrait_Expression_Enum_Empty_init_default {0}
#define substrait_Expression_Literal_init_default {0, {NULL}, NULL, NULL}
#define substrait_Expression_Literal_VarChar_init_default {NULL, NULL}
#define substrait_Expression_Literal_Decimal_init_default {NULL, NULL, NULL}
#define substrait_Expression_Literal_Map_init_default {0, NULL}
#define substrait_Expression_Literal_Map_KeyValue_init_default {NULL, NULL}
#define substrait_Expression_Literal_IntervalYearToMonth_init_default {NULL, NULL}
#define substrait_Expression_Literal_IntervalDayToSecond_init_default {NULL, NULL, NULL}
#define substrait_Expression_Literal_Struct_init_default {0, NULL}
#define substrait_Expression_Literal_List_init_default {0, NULL}
#define substrait_Expression_Literal_UserDefined_init_default {NULL, NULL, 0, NULL}
#define substrait_Expression_ScalarFunction_init_default {NULL, 0, NULL, NULL, 0, NULL, 0, NULL}
#define substrait_Expression_WindowFunction_init_default {NULL, 0, NULL, 0, NULL, NULL, NULL, NULL, NULL, 0, NULL, 0, NULL, NULL, 0, NULL}
#define substrait_Expression_WindowFunction_Bound_init_default {0, {NULL}}
#define substrait_Expression_WindowFunction_Bound_Preceding_init_default {NULL}
#define substrait_Expression_WindowFunction_Bound_Following_init_default {NULL}
#define substrait_Expression_WindowFunction_Bound_CurrentRow_init_default {0}
#define substrait_Expression_WindowFunction_Bound_Unbounded_init_default {0}
#define substrait_Expression_IfThen_init_default {0, NULL, NULL}
#define substrait_Expression_IfThen_IfClause_init_default {NULL, NULL}
#define substrait_Expression_Cast_init_default   {NULL, NULL, NULL}
#define substrait_Expression_SwitchExpression_init_default {0, NULL, NULL, NULL}
#define substrait_Expression_SwitchExpression_IfValue_init_default {NULL, NULL}
#define substrait_Expression_SingularOrList_init_default {NULL, 0, NULL}
#define substrait_Expression_MultiOrList_init_default {0, NULL, 0, NULL}
#define substrait_Expression_MultiOrList_Record_init_default {0, NULL}
#define substrait_Expression_EmbeddedFunction_init_default {0, NULL, NULL, 0, {NULL}}
#define substrait_Expression_EmbeddedFunction_PythonPickleFunction_init_default {NULL, 0, NULL}
#define substrait_Expression_EmbeddedFunction_WebAssemblyFunction_init_default {NULL, 0, NULL}
#define substrait_Expression_ReferenceSegment_init_default {0, {NULL}}
#define substrait_Expression_ReferenceSegment_MapKey_init_default {NULL, NULL}
#define substrait_Expression_ReferenceSegment_StructField_init_default {NULL, NULL}
#define substrait_Expression_ReferenceSegment_ListElement_init_default {NULL, NULL}
#define substrait_Expression_MaskExpression_init_default {NULL, NULL}
#define substrait_Expression_MaskExpression_Select_init_default {0, {NULL}}
#define substrait_Expression_MaskExpression_StructSelect_init_default {0, NULL}
#define substrait_Expression_MaskExpression_StructItem_init_default {NULL, NULL}
#define substrait_Expression_MaskExpression_ListSelect_init_default {0, NULL, NULL}
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_init_default {0, {NULL}}
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement_init_default {NULL}
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice_init_default {NULL, NULL}
#define substrait_Expression_MaskExpression_MapSelect_init_default {0, {NULL}, NULL}
#define substrait_Expression_MaskExpression_MapSelect_MapKey_init_default {NULL}
#define substrait_Expression_MaskExpression_MapSelect_MapKeyExpression_init_default {NULL}
#define substrait_Expression_FieldReference_init_default {0, {NULL}, 0, {NULL}}
#define substrait_Expression_FieldReference_RootReference_init_default {0}
#define substrait_Expression_FieldReference_OuterReference_init_default {NULL}
#define substrait_Expression_Subquery_init_default {0, {NULL}}
#define substrait_Expression_Subquery_Scalar_init_default {NULL}
#define substrait_Expression_Subquery_InPredicate_init_default {0, NULL, NULL}
#define substrait_Expression_Subquery_SetPredicate_init_default {NULL, NULL}
#define substrait_Expression_Subquery_SetComparison_init_default {NULL, NULL, NULL, NULL}
#define substrait_SortField_init_default         {NULL, 0, {NULL}}
#define substrait_AggregateFunction_init_default {NULL, 0, NULL, 0, NULL, NULL, NULL, NULL, 0, NULL, 0, NULL}
#define substrait_AggregateFunction_ReferenceRel_init_default {NULL}
#define substrait_RelCommon_init_zero            {0, {NULL}, NULL, NULL}
#define substrait_RelCommon_Direct_init_zero     {0}
#define substrait_RelCommon_Emit_init_zero       {0, NULL}
#define substrait_RelCommon_Hint_init_zero       {NULL, NULL, NULL}
#define substrait_RelCommon_Hint_Stats_init_zero {NULL, NULL, NULL}
#define substrait_RelCommon_Hint_RuntimeConstraint_init_zero {NULL}
#define substrait_ReadRel_init_zero              {NULL, NULL, NULL, NULL, 0, {NULL}, NULL, NULL}
#define substrait_ReadRel_NamedTable_init_zero   {0, NULL, NULL}
#define substrait_ReadRel_VirtualTable_init_zero {0, NULL}
#define substrait_ReadRel_ExtensionTable_init_zero {NULL}
#define substrait_ReadRel_LocalFiles_init_zero   {0, NULL, NULL}
#define substrait_ReadRel_LocalFiles_FileOrFiles_init_zero {0, {NULL}, NULL, NULL, NULL, 0, {NULL}}
#define substrait_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions_init_zero {0}
#define substrait_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions_init_zero {0}
#define substrait_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions_init_zero {0}
#define substrait_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions_init_zero {0}
#define substrait_ProjectRel_init_zero           {NULL, NULL, 0, NULL, NULL}
#define substrait_JoinRel_init_zero              {NULL, NULL, NULL, NULL, NULL, NULL, NULL}
#define substrait_CrossRel_init_zero             {NULL, NULL, NULL, NULL}
#define substrait_FetchRel_init_zero             {NULL, NULL, NULL, NULL, NULL}
#define substrait_AggregateRel_init_zero         {NULL, NULL, 0, NULL, 0, NULL, NULL}
#define substrait_AggregateRel_Grouping_init_zero {0, NULL}
#define substrait_AggregateRel_Measure_init_zero {NULL, NULL}
#define substrait_SortRel_init_zero              {NULL, NULL, 0, NULL, NULL}
#define substrait_FilterRel_init_zero            {NULL, NULL, NULL, NULL}
#define substrait_SetRel_init_zero               {NULL, 0, NULL, NULL, NULL}
#define substrait_ExtensionSingleRel_init_zero   {NULL, NULL, NULL}
#define substrait_ExtensionLeafRel_init_zero     {NULL, NULL}
#define substrait_ExtensionMultiRel_init_zero    {NULL, 0, NULL, NULL}
#define substrait_ExchangeRel_init_zero          {NULL, NULL, NULL, 0, NULL, 0, {NULL}, NULL}
#define substrait_ExchangeRel_ScatterFields_init_zero {0, NULL}
#define substrait_ExchangeRel_SingleBucketExpression_init_zero {NULL}
#define substrait_ExchangeRel_MultiBucketExpression_init_zero {NULL, NULL}
#define substrait_ExchangeRel_Broadcast_init_zero {0}
#define substrait_ExchangeRel_RoundRobin_init_zero {NULL}
#define substrait_ExchangeRel_ExchangeTarget_init_zero {0, NULL, 0, {NULL}}
#define substrait_RelRoot_init_zero              {NULL, 0, NULL}
#define substrait_Rel_init_zero                  {0, {NULL}}
#define substrait_NamedObjectWrite_init_zero     {0, NULL, NULL}
#define substrait_ExtensionObject_init_zero      {NULL}
#define substrait_DdlRel_init_zero               {0, {NULL}, NULL, NULL, NULL, NULL, NULL}
#define substrait_WriteRel_init_zero             {0, {NULL}, NULL, NULL, NULL, NULL}
#define substrait_FunctionArgument_init_zero     {0, {NULL}}
#define substrait_FunctionOption_init_zero       {NULL, 0, NULL}
#define substrait_Expression_init_zero           {0, {NULL}}
#define substrait_Expression_Enum_init_zero      {0, {NULL}}
#define substrait_Expression_Enum_Empty_init_zero {0}
#define substrait_Expression_Literal_init_zero   {0, {NULL}, NULL, NULL}
#define substrait_Expression_Literal_VarChar_init_zero {NULL, NULL}
#define substrait_Expression_Literal_Decimal_init_zero {NULL, NULL, NULL}
#define substrait_Expression_Literal_Map_init_zero {0, NULL}
#define substrait_Expression_Literal_Map_KeyValue_init_zero {NULL, NULL}
#define substrait_Expression_Literal_IntervalYearToMonth_init_zero {NULL, NULL}
#define substrait_Expression_Literal_IntervalDayToSecond_init_zero {NULL, NULL, NULL}
#define substrait_Expression_Literal_Struct_init_zero {0, NULL}
#define substrait_Expression_Literal_List_init_zero {0, NULL}
#define substrait_Expression_Literal_UserDefined_init_zero {NULL, NULL, 0, NULL}
#define substrait_Expression_ScalarFunction_init_zero {NULL, 0, NULL, NULL, 0, NULL, 0, NULL}
#define substrait_Expression_WindowFunction_init_zero {NULL, 0, NULL, 0, NULL, NULL, NULL, NULL, NULL, 0, NULL, 0, NULL, NULL, 0, NULL}
#define substrait_Expression_WindowFunction_Bound_init_zero {0, {NULL}}
#define substrait_Expression_WindowFunction_Bound_Preceding_init_zero {NULL}
#define substrait_Expression_WindowFunction_Bound_Following_init_zero {NULL}
#define substrait_Expression_WindowFunction_Bound_CurrentRow_init_zero {0}
#define substrait_Expression_WindowFunction_Bound_Unbounded_init_zero {0}
#define substrait_Expression_IfThen_init_zero    {0, NULL, NULL}
#define substrait_Expression_IfThen_IfClause_init_zero {NULL, NULL}
#define substrait_Expression_Cast_init_zero      {NULL, NULL, NULL}
#define substrait_Expression_SwitchExpression_init_zero {0, NULL, NULL, NULL}
#define substrait_Expression_SwitchExpression_IfValue_init_zero {NULL, NULL}
#define substrait_Expression_SingularOrList_init_zero {NULL, 0, NULL}
#define substrait_Expression_MultiOrList_init_zero {0, NULL, 0, NULL}
#define substrait_Expression_MultiOrList_Record_init_zero {0, NULL}
#define substrait_Expression_EmbeddedFunction_init_zero {0, NULL, NULL, 0, {NULL}}
#define substrait_Expression_EmbeddedFunction_PythonPickleFunction_init_zero {NULL, 0, NULL}
#define substrait_Expression_EmbeddedFunction_WebAssemblyFunction_init_zero {NULL, 0, NULL}
#define substrait_Expression_ReferenceSegment_init_zero {0, {NULL}}
#define substrait_Expression_ReferenceSegment_MapKey_init_zero {NULL, NULL}
#define substrait_Expression_ReferenceSegment_StructField_init_zero {NULL, NULL}
#define substrait_Expression_ReferenceSegment_ListElement_init_zero {NULL, NULL}
#define substrait_Expression_MaskExpression_init_zero {NULL, NULL}
#define substrait_Expression_MaskExpression_Select_init_zero {0, {NULL}}
#define substrait_Expression_MaskExpression_StructSelect_init_zero {0, NULL}
#define substrait_Expression_MaskExpression_StructItem_init_zero {NULL, NULL}
#define substrait_Expression_MaskExpression_ListSelect_init_zero {0, NULL, NULL}
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_init_zero {0, {NULL}}
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement_init_zero {NULL}
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice_init_zero {NULL, NULL}
#define substrait_Expression_MaskExpression_MapSelect_init_zero {0, {NULL}, NULL}
#define substrait_Expression_MaskExpression_MapSelect_MapKey_init_zero {NULL}
#define substrait_Expression_MaskExpression_MapSelect_MapKeyExpression_init_zero {NULL}
#define substrait_Expression_FieldReference_init_zero {0, {NULL}, 0, {NULL}}
#define substrait_Expression_FieldReference_RootReference_init_zero {0}
#define substrait_Expression_FieldReference_OuterReference_init_zero {NULL}
#define substrait_Expression_Subquery_init_zero  {0, {NULL}}
#define substrait_Expression_Subquery_Scalar_init_zero {NULL}
#define substrait_Expression_Subquery_InPredicate_init_zero {0, NULL, NULL}
#define substrait_Expression_Subquery_SetPredicate_init_zero {NULL, NULL}
#define substrait_Expression_Subquery_SetComparison_init_zero {NULL, NULL, NULL, NULL}
#define substrait_SortField_init_zero            {NULL, 0, {NULL}}
#define substrait_AggregateFunction_init_zero    {NULL, 0, NULL, 0, NULL, NULL, NULL, NULL, 0, NULL, 0, NULL}
#define substrait_AggregateFunction_ReferenceRel_init_zero {NULL}

/* Field tags (for use in manual encoding/decoding) */
#define substrait_AggregateFunction_function_reference_tag 1
#define substrait_AggregateFunction_args_tag     2
#define substrait_AggregateFunction_sorts_tag    3
#define substrait_AggregateFunction_phase_tag    4
#define substrait_AggregateFunction_output_type_tag 5
#define substrait_AggregateFunction_invocation_tag 6
#define substrait_AggregateFunction_arguments_tag 7
#define substrait_AggregateFunction_options_tag  8
#define substrait_AggregateFunction_ReferenceRel_subtree_ordinal_tag 1
#define substrait_AggregateRel_common_tag        1
#define substrait_AggregateRel_input_tag         2
#define substrait_AggregateRel_groupings_tag     3
#define substrait_AggregateRel_measures_tag      4
#define substrait_AggregateRel_advanced_extension_tag 10
#define substrait_AggregateRel_Grouping_grouping_expressions_tag 1
#define substrait_AggregateRel_Measure_measure_tag 1
#define substrait_AggregateRel_Measure_filter_tag 2
#define substrait_CrossRel_common_tag            1
#define substrait_CrossRel_left_tag              2
#define substrait_CrossRel_right_tag             3
#define substrait_CrossRel_advanced_extension_tag 10
#define substrait_DdlRel_named_object_tag        1
#define substrait_DdlRel_extension_object_tag    2
#define substrait_DdlRel_table_schema_tag        3
#define substrait_DdlRel_table_defaults_tag      4
#define substrait_DdlRel_object_tag              5
#define substrait_DdlRel_op_tag                  6
#define substrait_DdlRel_view_definition_tag     7
#define substrait_ExchangeRel_common_tag         1
#define substrait_ExchangeRel_input_tag          2
#define substrait_ExchangeRel_partition_count_tag 3
#define substrait_ExchangeRel_targets_tag        4
#define substrait_ExchangeRel_scatter_by_fields_tag 5
#define substrait_ExchangeRel_single_target_tag  6
#define substrait_ExchangeRel_multi_target_tag   7
#define substrait_ExchangeRel_round_robin_tag    8
#define substrait_ExchangeRel_broadcast_tag      9
#define substrait_ExchangeRel_advanced_extension_tag 10
#define substrait_ExchangeRel_ExchangeTarget_partition_id_tag 1
#define substrait_ExchangeRel_ExchangeTarget_uri_tag 2
#define substrait_ExchangeRel_ExchangeTarget_extended_tag 3
#define substrait_ExchangeRel_MultiBucketExpression_expression_tag 1
#define substrait_ExchangeRel_MultiBucketExpression_constrained_to_count_tag 2
#define substrait_ExchangeRel_RoundRobin_exact_tag 1
#define substrait_ExchangeRel_ScatterFields_fields_tag 1
#define substrait_ExchangeRel_SingleBucketExpression_expression_tag 1
#define substrait_Expression_literal_tag         1
#define substrait_Expression_selection_tag       2
#define substrait_Expression_scalar_function_tag 3
#define substrait_Expression_window_function_tag 5
#define substrait_Expression_if_then_tag         6
#define substrait_Expression_switch_expression_tag 7
#define substrait_Expression_singular_or_list_tag 8
#define substrait_Expression_multi_or_list_tag   9
#define substrait_Expression_enum_tag            10
#define substrait_Expression_cast_tag            11
#define substrait_Expression_subquery_tag        12
#define substrait_Expression_Cast_type_tag       1
#define substrait_Expression_Cast_input_tag      2
#define substrait_Expression_Cast_failure_behavior_tag 3
#define substrait_Expression_EmbeddedFunction_arguments_tag 1
#define substrait_Expression_EmbeddedFunction_output_type_tag 2
#define substrait_Expression_EmbeddedFunction_python_pickle_function_tag 3
#define substrait_Expression_EmbeddedFunction_web_assembly_function_tag 4
#define substrait_Expression_EmbeddedFunction_PythonPickleFunction_function__tag 1
#define substrait_Expression_EmbeddedFunction_PythonPickleFunction_prerequisite_tag 2
#define substrait_Expression_EmbeddedFunction_WebAssemblyFunction_script_tag 1
#define substrait_Expression_EmbeddedFunction_WebAssemblyFunction_prerequisite_tag 2
#define substrait_Expression_Enum_specified_tag  1
#define substrait_Expression_Enum_unspecified_tag 2
#define substrait_Expression_FieldReference_direct_reference_tag 1
#define substrait_Expression_FieldReference_masked_reference_tag 2
#define substrait_Expression_FieldReference_expression_tag 3
#define substrait_Expression_FieldReference_root_reference_tag 4
#define substrait_Expression_FieldReference_outer_reference_tag 5
#define substrait_Expression_FieldReference_OuterReference_steps_out_tag 1
#define substrait_Expression_IfThen_ifs_tag      1
#define substrait_Expression_IfThen_else__tag    2
#define substrait_Expression_IfThen_IfClause_if__tag 1
#define substrait_Expression_IfThen_IfClause_then_tag 2
#define substrait_Expression_Literal_boolean_tag 1
#define substrait_Expression_Literal_i8_tag      2
#define substrait_Expression_Literal_i16_tag     3
#define substrait_Expression_Literal_i32_tag     5
#define substrait_Expression_Literal_i64_tag     7
#define substrait_Expression_Literal_fp32_tag    10
#define substrait_Expression_Literal_fp64_tag    11
#define substrait_Expression_Literal_string_tag  12
#define substrait_Expression_Literal_binary_tag  13
#define substrait_Expression_Literal_timestamp_tag 14
#define substrait_Expression_Literal_date_tag    16
#define substrait_Expression_Literal_time_tag    17
#define substrait_Expression_Literal_interval_year_to_month_tag 19
#define substrait_Expression_Literal_interval_day_to_second_tag 20
#define substrait_Expression_Literal_fixed_char_tag 21
#define substrait_Expression_Literal_var_char_tag 22
#define substrait_Expression_Literal_fixed_binary_tag 23
#define substrait_Expression_Literal_decimal_tag 24
#define substrait_Expression_Literal_struct__tag 25
#define substrait_Expression_Literal_map_tag     26
#define substrait_Expression_Literal_timestamp_tz_tag 27
#define substrait_Expression_Literal_uuid_tag    28
#define substrait_Expression_Literal_null_tag    29
#define substrait_Expression_Literal_list_tag    30
#define substrait_Expression_Literal_empty_list_tag 31
#define substrait_Expression_Literal_empty_map_tag 32
#define substrait_Expression_Literal_user_defined_tag 33
#define substrait_Expression_Literal_nullable_tag 50
#define substrait_Expression_Literal_type_variation_reference_tag 51
#define substrait_Expression_Literal_Decimal_value_tag 1
#define substrait_Expression_Literal_Decimal_precision_tag 2
#define substrait_Expression_Literal_Decimal_scale_tag 3
#define substrait_Expression_Literal_IntervalDayToSecond_days_tag 1
#define substrait_Expression_Literal_IntervalDayToSecond_seconds_tag 2
#define substrait_Expression_Literal_IntervalDayToSecond_microseconds_tag 3
#define substrait_Expression_Literal_IntervalYearToMonth_years_tag 1
#define substrait_Expression_Literal_IntervalYearToMonth_months_tag 2
#define substrait_Expression_Literal_List_values_tag 1
#define substrait_Expression_Literal_Map_key_values_tag 1
#define substrait_Expression_Literal_Map_KeyValue_key_tag 1
#define substrait_Expression_Literal_Map_KeyValue_value_tag 2
#define substrait_Expression_Literal_Struct_fields_tag 1
#define substrait_Expression_Literal_UserDefined_type_reference_tag 1
#define substrait_Expression_Literal_UserDefined_value_tag 2
#define substrait_Expression_Literal_UserDefined_type_parameters_tag 3
#define substrait_Expression_Literal_VarChar_value_tag 1
#define substrait_Expression_Literal_VarChar_length_tag 2
#define substrait_Expression_MaskExpression_select_tag 1
#define substrait_Expression_MaskExpression_maintain_singular_struct_tag 2
#define substrait_Expression_MaskExpression_ListSelect_selection_tag 1
#define substrait_Expression_MaskExpression_ListSelect_child_tag 2
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_item_tag 1
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_slice_tag 2
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement_field_tag 1
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice_start_tag 1
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice_end_tag 2
#define substrait_Expression_MaskExpression_MapSelect_key_tag 1
#define substrait_Expression_MaskExpression_MapSelect_expression_tag 2
#define substrait_Expression_MaskExpression_MapSelect_child_tag 3
#define substrait_Expression_MaskExpression_MapSelect_MapKey_map_key_tag 1
#define substrait_Expression_MaskExpression_MapSelect_MapKeyExpression_map_key_expression_tag 1
#define substrait_Expression_MaskExpression_Select_struct__tag 1
#define substrait_Expression_MaskExpression_Select_list_tag 2
#define substrait_Expression_MaskExpression_Select_map_tag 3
#define substrait_Expression_MaskExpression_StructItem_field_tag 1
#define substrait_Expression_MaskExpression_StructItem_child_tag 2
#define substrait_Expression_MaskExpression_StructSelect_struct_items_tag 1
#define substrait_Expression_MultiOrList_value_tag 1
#define substrait_Expression_MultiOrList_options_tag 2
#define substrait_Expression_MultiOrList_Record_fields_tag 1
#define substrait_Expression_ReferenceSegment_map_key_tag 1
#define substrait_Expression_ReferenceSegment_struct_field_tag 2
#define substrait_Expression_ReferenceSegment_list_element_tag 3
#define substrait_Expression_ReferenceSegment_ListElement_offset_tag 1
#define substrait_Expression_ReferenceSegment_ListElement_child_tag 2
#define substrait_Expression_ReferenceSegment_MapKey_map_key_tag 1
#define substrait_Expression_ReferenceSegment_MapKey_child_tag 2
#define substrait_Expression_ReferenceSegment_StructField_field_tag 1
#define substrait_Expression_ReferenceSegment_StructField_child_tag 2
#define substrait_Expression_ScalarFunction_function_reference_tag 1
#define substrait_Expression_ScalarFunction_args_tag 2
#define substrait_Expression_ScalarFunction_output_type_tag 3
#define substrait_Expression_ScalarFunction_arguments_tag 4
#define substrait_Expression_ScalarFunction_options_tag 5
#define substrait_Expression_SingularOrList_value_tag 1
#define substrait_Expression_SingularOrList_options_tag 2
#define substrait_Expression_Subquery_scalar_tag 1
#define substrait_Expression_Subquery_in_predicate_tag 2
#define substrait_Expression_Subquery_set_predicate_tag 3
#define substrait_Expression_Subquery_set_comparison_tag 4
#define substrait_Expression_Subquery_InPredicate_needles_tag 1
#define substrait_Expression_Subquery_InPredicate_haystack_tag 2
#define substrait_Expression_Subquery_Scalar_input_tag 1
#define substrait_Expression_Subquery_SetComparison_reduction_op_tag 1
#define substrait_Expression_Subquery_SetComparison_comparison_op_tag 2
#define substrait_Expression_Subquery_SetComparison_left_tag 3
#define substrait_Expression_Subquery_SetComparison_right_tag 4
#define substrait_Expression_Subquery_SetPredicate_predicate_op_tag 1
#define substrait_Expression_Subquery_SetPredicate_tuples_tag 2
#define substrait_Expression_SwitchExpression_ifs_tag 1
#define substrait_Expression_SwitchExpression_else__tag 2
#define substrait_Expression_SwitchExpression_match_tag 3
#define substrait_Expression_SwitchExpression_IfValue_if__tag 1
#define substrait_Expression_SwitchExpression_IfValue_then_tag 2
#define substrait_Expression_WindowFunction_function_reference_tag 1
#define substrait_Expression_WindowFunction_partitions_tag 2
#define substrait_Expression_WindowFunction_sorts_tag 3
#define substrait_Expression_WindowFunction_upper_bound_tag 4
#define substrait_Expression_WindowFunction_lower_bound_tag 5
#define substrait_Expression_WindowFunction_phase_tag 6
#define substrait_Expression_WindowFunction_output_type_tag 7
#define substrait_Expression_WindowFunction_args_tag 8
#define substrait_Expression_WindowFunction_arguments_tag 9
#define substrait_Expression_WindowFunction_invocation_tag 10
#define substrait_Expression_WindowFunction_options_tag 11
#define substrait_Expression_WindowFunction_Bound_preceding_tag 1
#define substrait_Expression_WindowFunction_Bound_following_tag 2
#define substrait_Expression_WindowFunction_Bound_current_row_tag 3
#define substrait_Expression_WindowFunction_Bound_unbounded_tag 4
#define substrait_Expression_WindowFunction_Bound_Following_offset_tag 1
#define substrait_Expression_WindowFunction_Bound_Preceding_offset_tag 1
#define substrait_ExtensionLeafRel_common_tag    1
#define substrait_ExtensionLeafRel_detail_tag    2
#define substrait_ExtensionMultiRel_common_tag   1
#define substrait_ExtensionMultiRel_inputs_tag   2
#define substrait_ExtensionMultiRel_detail_tag   3
#define substrait_ExtensionObject_detail_tag     1
#define substrait_ExtensionSingleRel_common_tag  1
#define substrait_ExtensionSingleRel_input_tag   2
#define substrait_ExtensionSingleRel_detail_tag  3
#define substrait_FetchRel_common_tag            1
#define substrait_FetchRel_input_tag             2
#define substrait_FetchRel_offset_tag            3
#define substrait_FetchRel_count_tag             4
#define substrait_FetchRel_advanced_extension_tag 10
#define substrait_FilterRel_common_tag           1
#define substrait_FilterRel_input_tag            2
#define substrait_FilterRel_condition_tag        3
#define substrait_FilterRel_advanced_extension_tag 10
#define substrait_FunctionArgument_enum__tag     1
#define substrait_FunctionArgument_type_tag      2
#define substrait_FunctionArgument_value_tag     3
#define substrait_FunctionOption_name_tag        1
#define substrait_FunctionOption_preference_tag  2
#define substrait_JoinRel_common_tag             1
#define substrait_JoinRel_left_tag               2
#define substrait_JoinRel_right_tag              3
#define substrait_JoinRel_expression_tag         4
#define substrait_JoinRel_post_join_filter_tag   5
#define substrait_JoinRel_type_tag               6
#define substrait_JoinRel_advanced_extension_tag 10
#define substrait_NamedObjectWrite_names_tag     1
#define substrait_NamedObjectWrite_advanced_extension_tag 10
#define substrait_ProjectRel_common_tag          1
#define substrait_ProjectRel_input_tag           2
#define substrait_ProjectRel_expressions_tag     3
#define substrait_ProjectRel_advanced_extension_tag 10
#define substrait_ReadRel_common_tag             1
#define substrait_ReadRel_base_schema_tag        2
#define substrait_ReadRel_filter_tag             3
#define substrait_ReadRel_projection_tag         4
#define substrait_ReadRel_virtual_table_tag      5
#define substrait_ReadRel_local_files_tag        6
#define substrait_ReadRel_named_table_tag        7
#define substrait_ReadRel_extension_table_tag    8
#define substrait_ReadRel_advanced_extension_tag 10
#define substrait_ReadRel_best_effort_filter_tag 11
#define substrait_ReadRel_ExtensionTable_detail_tag 1
#define substrait_ReadRel_LocalFiles_items_tag   1
#define substrait_ReadRel_LocalFiles_advanced_extension_tag 10
#define substrait_ReadRel_LocalFiles_FileOrFiles_uri_path_tag 1
#define substrait_ReadRel_LocalFiles_FileOrFiles_uri_path_glob_tag 2
#define substrait_ReadRel_LocalFiles_FileOrFiles_uri_file_tag 3
#define substrait_ReadRel_LocalFiles_FileOrFiles_uri_folder_tag 4
#define substrait_ReadRel_LocalFiles_FileOrFiles_partition_index_tag 6
#define substrait_ReadRel_LocalFiles_FileOrFiles_start_tag 7
#define substrait_ReadRel_LocalFiles_FileOrFiles_length_tag 8
#define substrait_ReadRel_LocalFiles_FileOrFiles_parquet_tag 9
#define substrait_ReadRel_LocalFiles_FileOrFiles_arrow_tag 10
#define substrait_ReadRel_LocalFiles_FileOrFiles_orc_tag 11
#define substrait_ReadRel_LocalFiles_FileOrFiles_extension_tag 12
#define substrait_ReadRel_LocalFiles_FileOrFiles_dwrf_tag 13
#define substrait_ReadRel_NamedTable_names_tag   1
#define substrait_ReadRel_NamedTable_advanced_extension_tag 10
#define substrait_ReadRel_VirtualTable_values_tag 1
#define substrait_Rel_read_tag                   1
#define substrait_Rel_filter_tag                 2
#define substrait_Rel_fetch_tag                  3
#define substrait_Rel_aggregate_tag              4
#define substrait_Rel_sort_tag                   5
#define substrait_Rel_join_tag                   6
#define substrait_Rel_project_tag                7
#define substrait_Rel_set_tag                    8
#define substrait_Rel_extension_single_tag       9
#define substrait_Rel_extension_multi_tag        10
#define substrait_Rel_extension_leaf_tag         11
#define substrait_Rel_cross_tag                  12
#define substrait_RelCommon_direct_tag           1
#define substrait_RelCommon_emit_tag             2
#define substrait_RelCommon_hint_tag             3
#define substrait_RelCommon_advanced_extension_tag 4
#define substrait_RelCommon_Emit_output_mapping_tag 1
#define substrait_RelCommon_Hint_stats_tag       1
#define substrait_RelCommon_Hint_constraint_tag  2
#define substrait_RelCommon_Hint_advanced_extension_tag 10
#define substrait_RelCommon_Hint_RuntimeConstraint_advanced_extension_tag 10
#define substrait_RelCommon_Hint_Stats_row_count_tag 1
#define substrait_RelCommon_Hint_Stats_record_size_tag 2
#define substrait_RelCommon_Hint_Stats_advanced_extension_tag 10
#define substrait_RelRoot_input_tag              1
#define substrait_RelRoot_names_tag              2
#define substrait_SetRel_common_tag              1
#define substrait_SetRel_inputs_tag              2
#define substrait_SetRel_op_tag                  3
#define substrait_SetRel_advanced_extension_tag  10
#define substrait_SortField_expr_tag             1
#define substrait_SortField_direction_tag        2
#define substrait_SortField_comparison_function_reference_tag 3
#define substrait_SortRel_common_tag             1
#define substrait_SortRel_input_tag              2
#define substrait_SortRel_sorts_tag              3
#define substrait_SortRel_advanced_extension_tag 10
#define substrait_WriteRel_named_table_tag       1
#define substrait_WriteRel_extension_table_tag   2
#define substrait_WriteRel_table_schema_tag      3
#define substrait_WriteRel_op_tag                4
#define substrait_WriteRel_input_tag             5
#define substrait_WriteRel_output_tag            6

/* Struct field encoding specification for nanopb */
#define substrait_RelCommon_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    MESSAGE,  (emit_kind,direct,emit_kind.direct),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (emit_kind,emit,emit_kind.emit),   2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  hint,              3) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,   4)
#define substrait_RelCommon_CALLBACK NULL
#define substrait_RelCommon_DEFAULT NULL
#define substrait_RelCommon_emit_kind_direct_MSGTYPE substrait_RelCommon_Direct
#define substrait_RelCommon_emit_kind_emit_MSGTYPE substrait_RelCommon_Emit
#define substrait_RelCommon_hint_MSGTYPE substrait_RelCommon_Hint
#define substrait_RelCommon_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_RelCommon_Direct_FIELDLIST(X, a) \

#define substrait_RelCommon_Direct_CALLBACK NULL
#define substrait_RelCommon_Direct_DEFAULT NULL

#define substrait_RelCommon_Emit_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, INT32,    output_mapping,    1)
#define substrait_RelCommon_Emit_CALLBACK NULL
#define substrait_RelCommon_Emit_DEFAULT NULL

#define substrait_RelCommon_Hint_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  stats,             1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  constraint,        2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10)
#define substrait_RelCommon_Hint_CALLBACK NULL
#define substrait_RelCommon_Hint_DEFAULT NULL
#define substrait_RelCommon_Hint_stats_MSGTYPE substrait_RelCommon_Hint_Stats
#define substrait_RelCommon_Hint_constraint_MSGTYPE substrait_RelCommon_Hint_RuntimeConstraint
#define substrait_RelCommon_Hint_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_RelCommon_Hint_Stats_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, DOUBLE,   row_count,         1) \
X(a, POINTER,  SINGULAR, DOUBLE,   record_size,       2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10)
#define substrait_RelCommon_Hint_Stats_CALLBACK NULL
#define substrait_RelCommon_Hint_Stats_DEFAULT NULL
#define substrait_RelCommon_Hint_Stats_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_RelCommon_Hint_RuntimeConstraint_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10)
#define substrait_RelCommon_Hint_RuntimeConstraint_CALLBACK NULL
#define substrait_RelCommon_Hint_RuntimeConstraint_DEFAULT NULL
#define substrait_RelCommon_Hint_RuntimeConstraint_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_ReadRel_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  common,            1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  base_schema,       2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  filter,            3) \
X(a, POINTER,  OPTIONAL, MESSAGE,  projection,        4) \
X(a, POINTER,  ONEOF,    MESSAGE,  (read_type,virtual_table,read_type.virtual_table),   5) \
X(a, POINTER,  ONEOF,    MESSAGE,  (read_type,local_files,read_type.local_files),   6) \
X(a, POINTER,  ONEOF,    MESSAGE,  (read_type,named_table,read_type.named_table),   7) \
X(a, POINTER,  ONEOF,    MESSAGE,  (read_type,extension_table,read_type.extension_table),   8) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10) \
X(a, POINTER,  OPTIONAL, MESSAGE,  best_effort_filter,  11)
#define substrait_ReadRel_CALLBACK NULL
#define substrait_ReadRel_DEFAULT NULL
#define substrait_ReadRel_common_MSGTYPE substrait_RelCommon
#define substrait_ReadRel_base_schema_MSGTYPE substrait_NamedStruct
#define substrait_ReadRel_filter_MSGTYPE substrait_Expression
#define substrait_ReadRel_projection_MSGTYPE substrait_Expression_MaskExpression
#define substrait_ReadRel_read_type_virtual_table_MSGTYPE substrait_ReadRel_VirtualTable
#define substrait_ReadRel_read_type_local_files_MSGTYPE substrait_ReadRel_LocalFiles
#define substrait_ReadRel_read_type_named_table_MSGTYPE substrait_ReadRel_NamedTable
#define substrait_ReadRel_read_type_extension_table_MSGTYPE substrait_ReadRel_ExtensionTable
#define substrait_ReadRel_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension
#define substrait_ReadRel_best_effort_filter_MSGTYPE substrait_Expression

#define substrait_ReadRel_NamedTable_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, STRING,   names,             1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10)
#define substrait_ReadRel_NamedTable_CALLBACK NULL
#define substrait_ReadRel_NamedTable_DEFAULT NULL
#define substrait_ReadRel_NamedTable_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_ReadRel_VirtualTable_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  values,            1)
#define substrait_ReadRel_VirtualTable_CALLBACK NULL
#define substrait_ReadRel_VirtualTable_DEFAULT NULL
#define substrait_ReadRel_VirtualTable_values_MSGTYPE substrait_Expression_Literal_Struct

#define substrait_ReadRel_ExtensionTable_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  detail,            1)
#define substrait_ReadRel_ExtensionTable_CALLBACK NULL
#define substrait_ReadRel_ExtensionTable_DEFAULT NULL
#define substrait_ReadRel_ExtensionTable_detail_MSGTYPE substrait_Any

#define substrait_ReadRel_LocalFiles_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  items,             1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10)
#define substrait_ReadRel_LocalFiles_CALLBACK NULL
#define substrait_ReadRel_LocalFiles_DEFAULT NULL
#define substrait_ReadRel_LocalFiles_items_MSGTYPE substrait_ReadRel_LocalFiles_FileOrFiles
#define substrait_ReadRel_LocalFiles_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_ReadRel_LocalFiles_FileOrFiles_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    STRING,   (path_type,uri_path,path_type.uri_path),   1) \
X(a, POINTER,  ONEOF,    STRING,   (path_type,uri_path_glob,path_type.uri_path_glob),   2) \
X(a, POINTER,  ONEOF,    STRING,   (path_type,uri_file,path_type.uri_file),   3) \
X(a, POINTER,  ONEOF,    STRING,   (path_type,uri_folder,path_type.uri_folder),   4) \
X(a, POINTER,  SINGULAR, UINT64,   partition_index,   6) \
X(a, POINTER,  SINGULAR, UINT64,   start,             7) \
X(a, POINTER,  SINGULAR, UINT64,   length,            8) \
X(a, POINTER,  ONEOF,    MESSAGE,  (file_format,parquet,file_format.parquet),   9) \
X(a, POINTER,  ONEOF,    MESSAGE,  (file_format,arrow,file_format.arrow),  10) \
X(a, POINTER,  ONEOF,    MESSAGE,  (file_format,orc,file_format.orc),  11) \
X(a, POINTER,  ONEOF,    MESSAGE,  (file_format,extension,file_format.extension),  12) \
X(a, POINTER,  ONEOF,    MESSAGE,  (file_format,dwrf,file_format.dwrf),  13)
#define substrait_ReadRel_LocalFiles_FileOrFiles_CALLBACK NULL
#define substrait_ReadRel_LocalFiles_FileOrFiles_DEFAULT NULL
#define substrait_ReadRel_LocalFiles_FileOrFiles_file_format_parquet_MSGTYPE substrait_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions
#define substrait_ReadRel_LocalFiles_FileOrFiles_file_format_arrow_MSGTYPE substrait_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions
#define substrait_ReadRel_LocalFiles_FileOrFiles_file_format_orc_MSGTYPE substrait_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions
#define substrait_ReadRel_LocalFiles_FileOrFiles_file_format_extension_MSGTYPE substrait_Any
#define substrait_ReadRel_LocalFiles_FileOrFiles_file_format_dwrf_MSGTYPE substrait_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions

#define substrait_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions_FIELDLIST(X, a) \

#define substrait_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions_CALLBACK NULL
#define substrait_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions_DEFAULT NULL

#define substrait_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions_FIELDLIST(X, a) \

#define substrait_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions_CALLBACK NULL
#define substrait_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions_DEFAULT NULL

#define substrait_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions_FIELDLIST(X, a) \

#define substrait_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions_CALLBACK NULL
#define substrait_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions_DEFAULT NULL

#define substrait_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions_FIELDLIST(X, a) \

#define substrait_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions_CALLBACK NULL
#define substrait_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions_DEFAULT NULL

#define substrait_ProjectRel_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  common,            1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  input,             2) \
X(a, POINTER,  REPEATED, MESSAGE,  expressions,       3) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10)
#define substrait_ProjectRel_CALLBACK NULL
#define substrait_ProjectRel_DEFAULT NULL
#define substrait_ProjectRel_common_MSGTYPE substrait_RelCommon
#define substrait_ProjectRel_input_MSGTYPE substrait_Rel
#define substrait_ProjectRel_expressions_MSGTYPE substrait_Expression
#define substrait_ProjectRel_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_JoinRel_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  common,            1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  left,              2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  right,             3) \
X(a, POINTER,  OPTIONAL, MESSAGE,  expression,        4) \
X(a, POINTER,  OPTIONAL, MESSAGE,  post_join_filter,   5) \
X(a, POINTER,  SINGULAR, UENUM,    type,              6) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10)
#define substrait_JoinRel_CALLBACK NULL
#define substrait_JoinRel_DEFAULT NULL
#define substrait_JoinRel_common_MSGTYPE substrait_RelCommon
#define substrait_JoinRel_left_MSGTYPE substrait_Rel
#define substrait_JoinRel_right_MSGTYPE substrait_Rel
#define substrait_JoinRel_expression_MSGTYPE substrait_Expression
#define substrait_JoinRel_post_join_filter_MSGTYPE substrait_Expression
#define substrait_JoinRel_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_CrossRel_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  common,            1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  left,              2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  right,             3) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10)
#define substrait_CrossRel_CALLBACK NULL
#define substrait_CrossRel_DEFAULT NULL
#define substrait_CrossRel_common_MSGTYPE substrait_RelCommon
#define substrait_CrossRel_left_MSGTYPE substrait_Rel
#define substrait_CrossRel_right_MSGTYPE substrait_Rel
#define substrait_CrossRel_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_FetchRel_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  common,            1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  input,             2) \
X(a, POINTER,  SINGULAR, INT64,    offset,            3) \
X(a, POINTER,  SINGULAR, INT64,    count,             4) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10)
#define substrait_FetchRel_CALLBACK NULL
#define substrait_FetchRel_DEFAULT NULL
#define substrait_FetchRel_common_MSGTYPE substrait_RelCommon
#define substrait_FetchRel_input_MSGTYPE substrait_Rel
#define substrait_FetchRel_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_AggregateRel_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  common,            1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  input,             2) \
X(a, POINTER,  REPEATED, MESSAGE,  groupings,         3) \
X(a, POINTER,  REPEATED, MESSAGE,  measures,          4) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10)
#define substrait_AggregateRel_CALLBACK NULL
#define substrait_AggregateRel_DEFAULT NULL
#define substrait_AggregateRel_common_MSGTYPE substrait_RelCommon
#define substrait_AggregateRel_input_MSGTYPE substrait_Rel
#define substrait_AggregateRel_groupings_MSGTYPE substrait_AggregateRel_Grouping
#define substrait_AggregateRel_measures_MSGTYPE substrait_AggregateRel_Measure
#define substrait_AggregateRel_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_AggregateRel_Grouping_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  grouping_expressions,   1)
#define substrait_AggregateRel_Grouping_CALLBACK NULL
#define substrait_AggregateRel_Grouping_DEFAULT NULL
#define substrait_AggregateRel_Grouping_grouping_expressions_MSGTYPE substrait_Expression

#define substrait_AggregateRel_Measure_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  measure,           1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  filter,            2)
#define substrait_AggregateRel_Measure_CALLBACK NULL
#define substrait_AggregateRel_Measure_DEFAULT NULL
#define substrait_AggregateRel_Measure_measure_MSGTYPE substrait_AggregateFunction
#define substrait_AggregateRel_Measure_filter_MSGTYPE substrait_Expression

#define substrait_SortRel_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  common,            1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  input,             2) \
X(a, POINTER,  REPEATED, MESSAGE,  sorts,             3) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10)
#define substrait_SortRel_CALLBACK NULL
#define substrait_SortRel_DEFAULT NULL
#define substrait_SortRel_common_MSGTYPE substrait_RelCommon
#define substrait_SortRel_input_MSGTYPE substrait_Rel
#define substrait_SortRel_sorts_MSGTYPE substrait_SortField
#define substrait_SortRel_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_FilterRel_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  common,            1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  input,             2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  condition,         3) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10)
#define substrait_FilterRel_CALLBACK NULL
#define substrait_FilterRel_DEFAULT NULL
#define substrait_FilterRel_common_MSGTYPE substrait_RelCommon
#define substrait_FilterRel_input_MSGTYPE substrait_Rel
#define substrait_FilterRel_condition_MSGTYPE substrait_Expression
#define substrait_FilterRel_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_SetRel_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  common,            1) \
X(a, POINTER,  REPEATED, MESSAGE,  inputs,            2) \
X(a, POINTER,  SINGULAR, UENUM,    op,                3) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10)
#define substrait_SetRel_CALLBACK NULL
#define substrait_SetRel_DEFAULT NULL
#define substrait_SetRel_common_MSGTYPE substrait_RelCommon
#define substrait_SetRel_inputs_MSGTYPE substrait_Rel
#define substrait_SetRel_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_ExtensionSingleRel_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  common,            1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  input,             2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  detail,            3)
#define substrait_ExtensionSingleRel_CALLBACK NULL
#define substrait_ExtensionSingleRel_DEFAULT NULL
#define substrait_ExtensionSingleRel_common_MSGTYPE substrait_RelCommon
#define substrait_ExtensionSingleRel_input_MSGTYPE substrait_Rel
#define substrait_ExtensionSingleRel_detail_MSGTYPE substrait_Any

#define substrait_ExtensionLeafRel_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  common,            1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  detail,            2)
#define substrait_ExtensionLeafRel_CALLBACK NULL
#define substrait_ExtensionLeafRel_DEFAULT NULL
#define substrait_ExtensionLeafRel_common_MSGTYPE substrait_RelCommon
#define substrait_ExtensionLeafRel_detail_MSGTYPE substrait_Any

#define substrait_ExtensionMultiRel_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  common,            1) \
X(a, POINTER,  REPEATED, MESSAGE,  inputs,            2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  detail,            3)
#define substrait_ExtensionMultiRel_CALLBACK NULL
#define substrait_ExtensionMultiRel_DEFAULT NULL
#define substrait_ExtensionMultiRel_common_MSGTYPE substrait_RelCommon
#define substrait_ExtensionMultiRel_inputs_MSGTYPE substrait_Rel
#define substrait_ExtensionMultiRel_detail_MSGTYPE substrait_Any

#define substrait_ExchangeRel_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  common,            1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  input,             2) \
X(a, POINTER,  SINGULAR, INT32,    partition_count,   3) \
X(a, POINTER,  REPEATED, MESSAGE,  targets,           4) \
X(a, POINTER,  ONEOF,    MESSAGE,  (exchange_kind,scatter_by_fields,exchange_kind.scatter_by_fields),   5) \
X(a, POINTER,  ONEOF,    MESSAGE,  (exchange_kind,single_target,exchange_kind.single_target),   6) \
X(a, POINTER,  ONEOF,    MESSAGE,  (exchange_kind,multi_target,exchange_kind.multi_target),   7) \
X(a, POINTER,  ONEOF,    MESSAGE,  (exchange_kind,round_robin,exchange_kind.round_robin),   8) \
X(a, POINTER,  ONEOF,    MESSAGE,  (exchange_kind,broadcast,exchange_kind.broadcast),   9) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10)
#define substrait_ExchangeRel_CALLBACK NULL
#define substrait_ExchangeRel_DEFAULT NULL
#define substrait_ExchangeRel_common_MSGTYPE substrait_RelCommon
#define substrait_ExchangeRel_input_MSGTYPE substrait_Rel
#define substrait_ExchangeRel_targets_MSGTYPE substrait_ExchangeRel_ExchangeTarget
#define substrait_ExchangeRel_exchange_kind_scatter_by_fields_MSGTYPE substrait_ExchangeRel_ScatterFields
#define substrait_ExchangeRel_exchange_kind_single_target_MSGTYPE substrait_ExchangeRel_SingleBucketExpression
#define substrait_ExchangeRel_exchange_kind_multi_target_MSGTYPE substrait_ExchangeRel_MultiBucketExpression
#define substrait_ExchangeRel_exchange_kind_round_robin_MSGTYPE substrait_ExchangeRel_RoundRobin
#define substrait_ExchangeRel_exchange_kind_broadcast_MSGTYPE substrait_ExchangeRel_Broadcast
#define substrait_ExchangeRel_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_ExchangeRel_ScatterFields_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  fields,            1)
#define substrait_ExchangeRel_ScatterFields_CALLBACK NULL
#define substrait_ExchangeRel_ScatterFields_DEFAULT NULL
#define substrait_ExchangeRel_ScatterFields_fields_MSGTYPE substrait_Expression_FieldReference

#define substrait_ExchangeRel_SingleBucketExpression_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  expression,        1)
#define substrait_ExchangeRel_SingleBucketExpression_CALLBACK NULL
#define substrait_ExchangeRel_SingleBucketExpression_DEFAULT NULL
#define substrait_ExchangeRel_SingleBucketExpression_expression_MSGTYPE substrait_Expression

#define substrait_ExchangeRel_MultiBucketExpression_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  expression,        1) \
X(a, POINTER,  SINGULAR, BOOL,     constrained_to_count,   2)
#define substrait_ExchangeRel_MultiBucketExpression_CALLBACK NULL
#define substrait_ExchangeRel_MultiBucketExpression_DEFAULT NULL
#define substrait_ExchangeRel_MultiBucketExpression_expression_MSGTYPE substrait_Expression

#define substrait_ExchangeRel_Broadcast_FIELDLIST(X, a) \

#define substrait_ExchangeRel_Broadcast_CALLBACK NULL
#define substrait_ExchangeRel_Broadcast_DEFAULT NULL

#define substrait_ExchangeRel_RoundRobin_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, BOOL,     exact,             1)
#define substrait_ExchangeRel_RoundRobin_CALLBACK NULL
#define substrait_ExchangeRel_RoundRobin_DEFAULT NULL

#define substrait_ExchangeRel_ExchangeTarget_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, INT32,    partition_id,      1) \
X(a, POINTER,  ONEOF,    STRING,   (target_type,uri,target_type.uri),   2) \
X(a, POINTER,  ONEOF,    MESSAGE,  (target_type,extended,target_type.extended),   3)
#define substrait_ExchangeRel_ExchangeTarget_CALLBACK NULL
#define substrait_ExchangeRel_ExchangeTarget_DEFAULT NULL
#define substrait_ExchangeRel_ExchangeTarget_target_type_extended_MSGTYPE substrait_Any

#define substrait_RelRoot_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  input,             1) \
X(a, POINTER,  REPEATED, STRING,   names,             2)
#define substrait_RelRoot_CALLBACK NULL
#define substrait_RelRoot_DEFAULT NULL
#define substrait_RelRoot_input_MSGTYPE substrait_Rel

#define substrait_Rel_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rel_type,read,rel_type.read),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rel_type,filter,rel_type.filter),   2) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rel_type,fetch,rel_type.fetch),   3) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rel_type,aggregate,rel_type.aggregate),   4) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rel_type,sort,rel_type.sort),   5) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rel_type,join,rel_type.join),   6) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rel_type,project,rel_type.project),   7) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rel_type,set,rel_type.set),   8) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rel_type,extension_single,rel_type.extension_single),   9) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rel_type,extension_multi,rel_type.extension_multi),  10) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rel_type,extension_leaf,rel_type.extension_leaf),  11) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rel_type,cross,rel_type.cross),  12)
#define substrait_Rel_CALLBACK NULL
#define substrait_Rel_DEFAULT NULL
#define substrait_Rel_rel_type_read_MSGTYPE substrait_ReadRel
#define substrait_Rel_rel_type_filter_MSGTYPE substrait_FilterRel
#define substrait_Rel_rel_type_fetch_MSGTYPE substrait_FetchRel
#define substrait_Rel_rel_type_aggregate_MSGTYPE substrait_AggregateRel
#define substrait_Rel_rel_type_sort_MSGTYPE substrait_SortRel
#define substrait_Rel_rel_type_join_MSGTYPE substrait_JoinRel
#define substrait_Rel_rel_type_project_MSGTYPE substrait_ProjectRel
#define substrait_Rel_rel_type_set_MSGTYPE substrait_SetRel
#define substrait_Rel_rel_type_extension_single_MSGTYPE substrait_ExtensionSingleRel
#define substrait_Rel_rel_type_extension_multi_MSGTYPE substrait_ExtensionMultiRel
#define substrait_Rel_rel_type_extension_leaf_MSGTYPE substrait_ExtensionLeafRel
#define substrait_Rel_rel_type_cross_MSGTYPE substrait_CrossRel

#define substrait_NamedObjectWrite_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, STRING,   names,             1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  advanced_extension,  10)
#define substrait_NamedObjectWrite_CALLBACK NULL
#define substrait_NamedObjectWrite_DEFAULT NULL
#define substrait_NamedObjectWrite_advanced_extension_MSGTYPE substrait_extensions_AdvancedExtension

#define substrait_ExtensionObject_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  detail,            1)
#define substrait_ExtensionObject_CALLBACK NULL
#define substrait_ExtensionObject_DEFAULT NULL
#define substrait_ExtensionObject_detail_MSGTYPE substrait_Any

#define substrait_DdlRel_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    MESSAGE,  (write_type,named_object,write_type.named_object),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (write_type,extension_object,write_type.extension_object),   2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  table_schema,      3) \
X(a, POINTER,  OPTIONAL, MESSAGE,  table_defaults,    4) \
X(a, POINTER,  SINGULAR, UENUM,    object,            5) \
X(a, POINTER,  SINGULAR, UENUM,    op,                6) \
X(a, POINTER,  OPTIONAL, MESSAGE,  view_definition,   7)
#define substrait_DdlRel_CALLBACK NULL
#define substrait_DdlRel_DEFAULT NULL
#define substrait_DdlRel_write_type_named_object_MSGTYPE substrait_NamedObjectWrite
#define substrait_DdlRel_write_type_extension_object_MSGTYPE substrait_ExtensionObject
#define substrait_DdlRel_table_schema_MSGTYPE substrait_NamedStruct
#define substrait_DdlRel_table_defaults_MSGTYPE substrait_Expression_Literal_Struct
#define substrait_DdlRel_view_definition_MSGTYPE substrait_Rel

#define substrait_WriteRel_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    MESSAGE,  (write_type,named_table,write_type.named_table),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (write_type,extension_table,write_type.extension_table),   2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  table_schema,      3) \
X(a, POINTER,  SINGULAR, UENUM,    op,                4) \
X(a, POINTER,  OPTIONAL, MESSAGE,  input,             5) \
X(a, POINTER,  SINGULAR, UENUM,    output,            6)
#define substrait_WriteRel_CALLBACK NULL
#define substrait_WriteRel_DEFAULT NULL
#define substrait_WriteRel_write_type_named_table_MSGTYPE substrait_NamedObjectWrite
#define substrait_WriteRel_write_type_extension_table_MSGTYPE substrait_ExtensionObject
#define substrait_WriteRel_table_schema_MSGTYPE substrait_NamedStruct
#define substrait_WriteRel_input_MSGTYPE substrait_Rel

#define substrait_FunctionArgument_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    STRING,   (arg_type,enum_,arg_type.enum_),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (arg_type,type,arg_type.type),   2) \
X(a, POINTER,  ONEOF,    MESSAGE,  (arg_type,value,arg_type.value),   3)
#define substrait_FunctionArgument_CALLBACK NULL
#define substrait_FunctionArgument_DEFAULT NULL
#define substrait_FunctionArgument_arg_type_type_MSGTYPE substrait_Type
#define substrait_FunctionArgument_arg_type_value_MSGTYPE substrait_Expression

#define substrait_FunctionOption_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   name,              1) \
X(a, POINTER,  REPEATED, STRING,   preference,        2)
#define substrait_FunctionOption_CALLBACK NULL
#define substrait_FunctionOption_DEFAULT NULL

#define substrait_Expression_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rex_type,literal,rex_type.literal),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rex_type,selection,rex_type.selection),   2) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rex_type,scalar_function,rex_type.scalar_function),   3) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rex_type,window_function,rex_type.window_function),   5) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rex_type,if_then,rex_type.if_then),   6) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rex_type,switch_expression,rex_type.switch_expression),   7) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rex_type,singular_or_list,rex_type.singular_or_list),   8) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rex_type,multi_or_list,rex_type.multi_or_list),   9) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rex_type,enum,rex_type.enum),  10) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rex_type,cast,rex_type.cast),  11) \
X(a, POINTER,  ONEOF,    MESSAGE,  (rex_type,subquery,rex_type.subquery),  12)
#define substrait_Expression_CALLBACK NULL
#define substrait_Expression_DEFAULT NULL
#define substrait_Expression_rex_type_literal_MSGTYPE substrait_Expression_Literal
#define substrait_Expression_rex_type_selection_MSGTYPE substrait_Expression_FieldReference
#define substrait_Expression_rex_type_scalar_function_MSGTYPE substrait_Expression_ScalarFunction
#define substrait_Expression_rex_type_window_function_MSGTYPE substrait_Expression_WindowFunction
#define substrait_Expression_rex_type_if_then_MSGTYPE substrait_Expression_IfThen
#define substrait_Expression_rex_type_switch_expression_MSGTYPE substrait_Expression_SwitchExpression
#define substrait_Expression_rex_type_singular_or_list_MSGTYPE substrait_Expression_SingularOrList
#define substrait_Expression_rex_type_multi_or_list_MSGTYPE substrait_Expression_MultiOrList
#define substrait_Expression_rex_type_enum_MSGTYPE substrait_Expression_Enum
#define substrait_Expression_rex_type_cast_MSGTYPE substrait_Expression_Cast
#define substrait_Expression_rex_type_subquery_MSGTYPE substrait_Expression_Subquery

#define substrait_Expression_Enum_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    STRING,   (enum_kind,specified,enum_kind.specified),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (enum_kind,unspecified,enum_kind.unspecified),   2)
#define substrait_Expression_Enum_CALLBACK NULL
#define substrait_Expression_Enum_DEFAULT NULL
#define substrait_Expression_Enum_enum_kind_unspecified_MSGTYPE substrait_Expression_Enum_Empty

#define substrait_Expression_Enum_Empty_FIELDLIST(X, a) \

#define substrait_Expression_Enum_Empty_CALLBACK NULL
#define substrait_Expression_Enum_Empty_DEFAULT NULL

#define substrait_Expression_Literal_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    BOOL,     (literal_type,boolean,literal_type.boolean),   1) \
X(a, POINTER,  ONEOF,    INT32,    (literal_type,i8,literal_type.i8),   2) \
X(a, POINTER,  ONEOF,    INT32,    (literal_type,i16,literal_type.i16),   3) \
X(a, POINTER,  ONEOF,    INT32,    (literal_type,i32,literal_type.i32),   5) \
X(a, POINTER,  ONEOF,    INT64,    (literal_type,i64,literal_type.i64),   7) \
X(a, POINTER,  ONEOF,    FLOAT,    (literal_type,fp32,literal_type.fp32),  10) \
X(a, POINTER,  ONEOF,    DOUBLE,   (literal_type,fp64,literal_type.fp64),  11) \
X(a, POINTER,  ONEOF,    STRING,   (literal_type,string,literal_type.string),  12) \
X(a, POINTER,  ONEOF,    BYTES,    (literal_type,binary,literal_type.binary),  13) \
X(a, POINTER,  ONEOF,    INT64,    (literal_type,timestamp,literal_type.timestamp),  14) \
X(a, POINTER,  ONEOF,    INT32,    (literal_type,date,literal_type.date),  16) \
X(a, POINTER,  ONEOF,    INT64,    (literal_type,time,literal_type.time),  17) \
X(a, POINTER,  ONEOF,    MESSAGE,  (literal_type,interval_year_to_month,literal_type.interval_year_to_month),  19) \
X(a, POINTER,  ONEOF,    MESSAGE,  (literal_type,interval_day_to_second,literal_type.interval_day_to_second),  20) \
X(a, POINTER,  ONEOF,    STRING,   (literal_type,fixed_char,literal_type.fixed_char),  21) \
X(a, POINTER,  ONEOF,    MESSAGE,  (literal_type,var_char,literal_type.var_char),  22) \
X(a, POINTER,  ONEOF,    BYTES,    (literal_type,fixed_binary,literal_type.fixed_binary),  23) \
X(a, POINTER,  ONEOF,    MESSAGE,  (literal_type,decimal,literal_type.decimal),  24) \
X(a, POINTER,  ONEOF,    MESSAGE,  (literal_type,struct_,literal_type.struct_),  25) \
X(a, POINTER,  ONEOF,    MESSAGE,  (literal_type,map,literal_type.map),  26) \
X(a, POINTER,  ONEOF,    INT64,    (literal_type,timestamp_tz,literal_type.timestamp_tz),  27) \
X(a, POINTER,  ONEOF,    BYTES,    (literal_type,uuid,literal_type.uuid),  28) \
X(a, POINTER,  ONEOF,    MESSAGE,  (literal_type,null,literal_type.null),  29) \
X(a, POINTER,  ONEOF,    MESSAGE,  (literal_type,list,literal_type.list),  30) \
X(a, POINTER,  ONEOF,    MESSAGE,  (literal_type,empty_list,literal_type.empty_list),  31) \
X(a, POINTER,  ONEOF,    MESSAGE,  (literal_type,empty_map,literal_type.empty_map),  32) \
X(a, POINTER,  ONEOF,    MESSAGE,  (literal_type,user_defined,literal_type.user_defined),  33) \
X(a, POINTER,  SINGULAR, BOOL,     nullable,         50) \
X(a, POINTER,  SINGULAR, UINT32,   type_variation_reference,  51)
#define substrait_Expression_Literal_CALLBACK NULL
#define substrait_Expression_Literal_DEFAULT NULL
#define substrait_Expression_Literal_literal_type_interval_year_to_month_MSGTYPE substrait_Expression_Literal_IntervalYearToMonth
#define substrait_Expression_Literal_literal_type_interval_day_to_second_MSGTYPE substrait_Expression_Literal_IntervalDayToSecond
#define substrait_Expression_Literal_literal_type_var_char_MSGTYPE substrait_Expression_Literal_VarChar
#define substrait_Expression_Literal_literal_type_decimal_MSGTYPE substrait_Expression_Literal_Decimal
#define substrait_Expression_Literal_literal_type_struct__MSGTYPE substrait_Expression_Literal_Struct
#define substrait_Expression_Literal_literal_type_map_MSGTYPE substrait_Expression_Literal_Map
#define substrait_Expression_Literal_literal_type_null_MSGTYPE substrait_Type
#define substrait_Expression_Literal_literal_type_list_MSGTYPE substrait_Expression_Literal_List
#define substrait_Expression_Literal_literal_type_empty_list_MSGTYPE substrait_Type_List
#define substrait_Expression_Literal_literal_type_empty_map_MSGTYPE substrait_Type_Map
#define substrait_Expression_Literal_literal_type_user_defined_MSGTYPE substrait_Expression_Literal_UserDefined

#define substrait_Expression_Literal_VarChar_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   value,             1) \
X(a, POINTER,  SINGULAR, UINT32,   length,            2)
#define substrait_Expression_Literal_VarChar_CALLBACK NULL
#define substrait_Expression_Literal_VarChar_DEFAULT NULL

#define substrait_Expression_Literal_Decimal_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, BYTES,    value,             1) \
X(a, POINTER,  SINGULAR, INT32,    precision,         2) \
X(a, POINTER,  SINGULAR, INT32,    scale,             3)
#define substrait_Expression_Literal_Decimal_CALLBACK NULL
#define substrait_Expression_Literal_Decimal_DEFAULT NULL

#define substrait_Expression_Literal_Map_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  key_values,        1)
#define substrait_Expression_Literal_Map_CALLBACK NULL
#define substrait_Expression_Literal_Map_DEFAULT NULL
#define substrait_Expression_Literal_Map_key_values_MSGTYPE substrait_Expression_Literal_Map_KeyValue

#define substrait_Expression_Literal_Map_KeyValue_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  key,               1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  value,             2)
#define substrait_Expression_Literal_Map_KeyValue_CALLBACK NULL
#define substrait_Expression_Literal_Map_KeyValue_DEFAULT NULL
#define substrait_Expression_Literal_Map_KeyValue_key_MSGTYPE substrait_Expression_Literal
#define substrait_Expression_Literal_Map_KeyValue_value_MSGTYPE substrait_Expression_Literal

#define substrait_Expression_Literal_IntervalYearToMonth_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, INT32,    years,             1) \
X(a, POINTER,  SINGULAR, INT32,    months,            2)
#define substrait_Expression_Literal_IntervalYearToMonth_CALLBACK NULL
#define substrait_Expression_Literal_IntervalYearToMonth_DEFAULT NULL

#define substrait_Expression_Literal_IntervalDayToSecond_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, INT32,    days,              1) \
X(a, POINTER,  SINGULAR, INT32,    seconds,           2) \
X(a, POINTER,  SINGULAR, INT32,    microseconds,      3)
#define substrait_Expression_Literal_IntervalDayToSecond_CALLBACK NULL
#define substrait_Expression_Literal_IntervalDayToSecond_DEFAULT NULL

#define substrait_Expression_Literal_Struct_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  fields,            1)
#define substrait_Expression_Literal_Struct_CALLBACK NULL
#define substrait_Expression_Literal_Struct_DEFAULT NULL
#define substrait_Expression_Literal_Struct_fields_MSGTYPE substrait_Expression_Literal

#define substrait_Expression_Literal_List_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  values,            1)
#define substrait_Expression_Literal_List_CALLBACK NULL
#define substrait_Expression_Literal_List_DEFAULT NULL
#define substrait_Expression_Literal_List_values_MSGTYPE substrait_Expression_Literal

#define substrait_Expression_Literal_UserDefined_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT32,   type_reference,    1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  value,             2) \
X(a, POINTER,  REPEATED, MESSAGE,  type_parameters,   3)
#define substrait_Expression_Literal_UserDefined_CALLBACK NULL
#define substrait_Expression_Literal_UserDefined_DEFAULT NULL
#define substrait_Expression_Literal_UserDefined_value_MSGTYPE substrait_Any
#define substrait_Expression_Literal_UserDefined_type_parameters_MSGTYPE substrait_Type_Parameter

#define substrait_Expression_ScalarFunction_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT32,   function_reference,   1) \
X(a, POINTER,  REPEATED, MESSAGE,  args,              2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  output_type,       3) \
X(a, POINTER,  REPEATED, MESSAGE,  arguments,         4) \
X(a, POINTER,  REPEATED, MESSAGE,  options,           5)
#define substrait_Expression_ScalarFunction_CALLBACK NULL
#define substrait_Expression_ScalarFunction_DEFAULT NULL
#define substrait_Expression_ScalarFunction_args_MSGTYPE substrait_Expression
#define substrait_Expression_ScalarFunction_output_type_MSGTYPE substrait_Type
#define substrait_Expression_ScalarFunction_arguments_MSGTYPE substrait_FunctionArgument
#define substrait_Expression_ScalarFunction_options_MSGTYPE substrait_FunctionOption

#define substrait_Expression_WindowFunction_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT32,   function_reference,   1) \
X(a, POINTER,  REPEATED, MESSAGE,  partitions,        2) \
X(a, POINTER,  REPEATED, MESSAGE,  sorts,             3) \
X(a, POINTER,  OPTIONAL, MESSAGE,  upper_bound,       4) \
X(a, POINTER,  OPTIONAL, MESSAGE,  lower_bound,       5) \
X(a, POINTER,  SINGULAR, UENUM,    phase,             6) \
X(a, POINTER,  OPTIONAL, MESSAGE,  output_type,       7) \
X(a, POINTER,  REPEATED, MESSAGE,  args,              8) \
X(a, POINTER,  REPEATED, MESSAGE,  arguments,         9) \
X(a, POINTER,  SINGULAR, UENUM,    invocation,       10) \
X(a, POINTER,  REPEATED, MESSAGE,  options,          11)
#define substrait_Expression_WindowFunction_CALLBACK NULL
#define substrait_Expression_WindowFunction_DEFAULT NULL
#define substrait_Expression_WindowFunction_partitions_MSGTYPE substrait_Expression
#define substrait_Expression_WindowFunction_sorts_MSGTYPE substrait_SortField
#define substrait_Expression_WindowFunction_upper_bound_MSGTYPE substrait_Expression_WindowFunction_Bound
#define substrait_Expression_WindowFunction_lower_bound_MSGTYPE substrait_Expression_WindowFunction_Bound
#define substrait_Expression_WindowFunction_output_type_MSGTYPE substrait_Type
#define substrait_Expression_WindowFunction_args_MSGTYPE substrait_Expression
#define substrait_Expression_WindowFunction_arguments_MSGTYPE substrait_FunctionArgument
#define substrait_Expression_WindowFunction_options_MSGTYPE substrait_FunctionOption

#define substrait_Expression_WindowFunction_Bound_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,preceding,kind.preceding),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,following,kind.following),   2) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,current_row,kind.current_row),   3) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,unbounded,kind.unbounded),   4)
#define substrait_Expression_WindowFunction_Bound_CALLBACK NULL
#define substrait_Expression_WindowFunction_Bound_DEFAULT NULL
#define substrait_Expression_WindowFunction_Bound_kind_preceding_MSGTYPE substrait_Expression_WindowFunction_Bound_Preceding
#define substrait_Expression_WindowFunction_Bound_kind_following_MSGTYPE substrait_Expression_WindowFunction_Bound_Following
#define substrait_Expression_WindowFunction_Bound_kind_current_row_MSGTYPE substrait_Expression_WindowFunction_Bound_CurrentRow
#define substrait_Expression_WindowFunction_Bound_kind_unbounded_MSGTYPE substrait_Expression_WindowFunction_Bound_Unbounded

#define substrait_Expression_WindowFunction_Bound_Preceding_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, INT64,    offset,            1)
#define substrait_Expression_WindowFunction_Bound_Preceding_CALLBACK NULL
#define substrait_Expression_WindowFunction_Bound_Preceding_DEFAULT NULL

#define substrait_Expression_WindowFunction_Bound_Following_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, INT64,    offset,            1)
#define substrait_Expression_WindowFunction_Bound_Following_CALLBACK NULL
#define substrait_Expression_WindowFunction_Bound_Following_DEFAULT NULL

#define substrait_Expression_WindowFunction_Bound_CurrentRow_FIELDLIST(X, a) \

#define substrait_Expression_WindowFunction_Bound_CurrentRow_CALLBACK NULL
#define substrait_Expression_WindowFunction_Bound_CurrentRow_DEFAULT NULL

#define substrait_Expression_WindowFunction_Bound_Unbounded_FIELDLIST(X, a) \

#define substrait_Expression_WindowFunction_Bound_Unbounded_CALLBACK NULL
#define substrait_Expression_WindowFunction_Bound_Unbounded_DEFAULT NULL

#define substrait_Expression_IfThen_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  ifs,               1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  else_,             2)
#define substrait_Expression_IfThen_CALLBACK NULL
#define substrait_Expression_IfThen_DEFAULT NULL
#define substrait_Expression_IfThen_ifs_MSGTYPE substrait_Expression_IfThen_IfClause
#define substrait_Expression_IfThen_else__MSGTYPE substrait_Expression

#define substrait_Expression_IfThen_IfClause_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  if_,               1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  then,              2)
#define substrait_Expression_IfThen_IfClause_CALLBACK NULL
#define substrait_Expression_IfThen_IfClause_DEFAULT NULL
#define substrait_Expression_IfThen_IfClause_if__MSGTYPE substrait_Expression
#define substrait_Expression_IfThen_IfClause_then_MSGTYPE substrait_Expression

#define substrait_Expression_Cast_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  type,              1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  input,             2) \
X(a, POINTER,  SINGULAR, UENUM,    failure_behavior,   3)
#define substrait_Expression_Cast_CALLBACK NULL
#define substrait_Expression_Cast_DEFAULT NULL
#define substrait_Expression_Cast_type_MSGTYPE substrait_Type
#define substrait_Expression_Cast_input_MSGTYPE substrait_Expression

#define substrait_Expression_SwitchExpression_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  ifs,               1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  else_,             2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  match,             3)
#define substrait_Expression_SwitchExpression_CALLBACK NULL
#define substrait_Expression_SwitchExpression_DEFAULT NULL
#define substrait_Expression_SwitchExpression_ifs_MSGTYPE substrait_Expression_SwitchExpression_IfValue
#define substrait_Expression_SwitchExpression_else__MSGTYPE substrait_Expression
#define substrait_Expression_SwitchExpression_match_MSGTYPE substrait_Expression

#define substrait_Expression_SwitchExpression_IfValue_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  if_,               1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  then,              2)
#define substrait_Expression_SwitchExpression_IfValue_CALLBACK NULL
#define substrait_Expression_SwitchExpression_IfValue_DEFAULT NULL
#define substrait_Expression_SwitchExpression_IfValue_if__MSGTYPE substrait_Expression_Literal
#define substrait_Expression_SwitchExpression_IfValue_then_MSGTYPE substrait_Expression

#define substrait_Expression_SingularOrList_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  value,             1) \
X(a, POINTER,  REPEATED, MESSAGE,  options,           2)
#define substrait_Expression_SingularOrList_CALLBACK NULL
#define substrait_Expression_SingularOrList_DEFAULT NULL
#define substrait_Expression_SingularOrList_value_MSGTYPE substrait_Expression
#define substrait_Expression_SingularOrList_options_MSGTYPE substrait_Expression

#define substrait_Expression_MultiOrList_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  value,             1) \
X(a, POINTER,  REPEATED, MESSAGE,  options,           2)
#define substrait_Expression_MultiOrList_CALLBACK NULL
#define substrait_Expression_MultiOrList_DEFAULT NULL
#define substrait_Expression_MultiOrList_value_MSGTYPE substrait_Expression
#define substrait_Expression_MultiOrList_options_MSGTYPE substrait_Expression_MultiOrList_Record

#define substrait_Expression_MultiOrList_Record_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  fields,            1)
#define substrait_Expression_MultiOrList_Record_CALLBACK NULL
#define substrait_Expression_MultiOrList_Record_DEFAULT NULL
#define substrait_Expression_MultiOrList_Record_fields_MSGTYPE substrait_Expression

#define substrait_Expression_EmbeddedFunction_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  arguments,         1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  output_type,       2) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,python_pickle_function,kind.python_pickle_function),   3) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,web_assembly_function,kind.web_assembly_function),   4)
#define substrait_Expression_EmbeddedFunction_CALLBACK NULL
#define substrait_Expression_EmbeddedFunction_DEFAULT NULL
#define substrait_Expression_EmbeddedFunction_arguments_MSGTYPE substrait_Expression
#define substrait_Expression_EmbeddedFunction_output_type_MSGTYPE substrait_Type
#define substrait_Expression_EmbeddedFunction_kind_python_pickle_function_MSGTYPE substrait_Expression_EmbeddedFunction_PythonPickleFunction
#define substrait_Expression_EmbeddedFunction_kind_web_assembly_function_MSGTYPE substrait_Expression_EmbeddedFunction_WebAssemblyFunction

#define substrait_Expression_EmbeddedFunction_PythonPickleFunction_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, BYTES,    function_,         1) \
X(a, POINTER,  REPEATED, STRING,   prerequisite,      2)
#define substrait_Expression_EmbeddedFunction_PythonPickleFunction_CALLBACK NULL
#define substrait_Expression_EmbeddedFunction_PythonPickleFunction_DEFAULT NULL

#define substrait_Expression_EmbeddedFunction_WebAssemblyFunction_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, BYTES,    script,            1) \
X(a, POINTER,  REPEATED, STRING,   prerequisite,      2)
#define substrait_Expression_EmbeddedFunction_WebAssemblyFunction_CALLBACK NULL
#define substrait_Expression_EmbeddedFunction_WebAssemblyFunction_DEFAULT NULL

#define substrait_Expression_ReferenceSegment_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    MESSAGE,  (reference_type,map_key,reference_type.map_key),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (reference_type,struct_field,reference_type.struct_field),   2) \
X(a, POINTER,  ONEOF,    MESSAGE,  (reference_type,list_element,reference_type.list_element),   3)
#define substrait_Expression_ReferenceSegment_CALLBACK NULL
#define substrait_Expression_ReferenceSegment_DEFAULT NULL
#define substrait_Expression_ReferenceSegment_reference_type_map_key_MSGTYPE substrait_Expression_ReferenceSegment_MapKey
#define substrait_Expression_ReferenceSegment_reference_type_struct_field_MSGTYPE substrait_Expression_ReferenceSegment_StructField
#define substrait_Expression_ReferenceSegment_reference_type_list_element_MSGTYPE substrait_Expression_ReferenceSegment_ListElement

#define substrait_Expression_ReferenceSegment_MapKey_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  map_key,           1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  child,             2)
#define substrait_Expression_ReferenceSegment_MapKey_CALLBACK NULL
#define substrait_Expression_ReferenceSegment_MapKey_DEFAULT NULL
#define substrait_Expression_ReferenceSegment_MapKey_map_key_MSGTYPE substrait_Expression_Literal
#define substrait_Expression_ReferenceSegment_MapKey_child_MSGTYPE substrait_Expression_ReferenceSegment

#define substrait_Expression_ReferenceSegment_StructField_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, INT32,    field,             1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  child,             2)
#define substrait_Expression_ReferenceSegment_StructField_CALLBACK NULL
#define substrait_Expression_ReferenceSegment_StructField_DEFAULT NULL
#define substrait_Expression_ReferenceSegment_StructField_child_MSGTYPE substrait_Expression_ReferenceSegment

#define substrait_Expression_ReferenceSegment_ListElement_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, INT32,    offset,            1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  child,             2)
#define substrait_Expression_ReferenceSegment_ListElement_CALLBACK NULL
#define substrait_Expression_ReferenceSegment_ListElement_DEFAULT NULL
#define substrait_Expression_ReferenceSegment_ListElement_child_MSGTYPE substrait_Expression_ReferenceSegment

#define substrait_Expression_MaskExpression_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  select,            1) \
X(a, POINTER,  SINGULAR, BOOL,     maintain_singular_struct,   2)
#define substrait_Expression_MaskExpression_CALLBACK NULL
#define substrait_Expression_MaskExpression_DEFAULT NULL
#define substrait_Expression_MaskExpression_select_MSGTYPE substrait_Expression_MaskExpression_StructSelect

#define substrait_Expression_MaskExpression_Select_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    MESSAGE,  (type,struct_,type.struct_),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (type,list,type.list),   2) \
X(a, POINTER,  ONEOF,    MESSAGE,  (type,map,type.map),   3)
#define substrait_Expression_MaskExpression_Select_CALLBACK NULL
#define substrait_Expression_MaskExpression_Select_DEFAULT NULL
#define substrait_Expression_MaskExpression_Select_type_struct__MSGTYPE substrait_Expression_MaskExpression_StructSelect
#define substrait_Expression_MaskExpression_Select_type_list_MSGTYPE substrait_Expression_MaskExpression_ListSelect
#define substrait_Expression_MaskExpression_Select_type_map_MSGTYPE substrait_Expression_MaskExpression_MapSelect

#define substrait_Expression_MaskExpression_StructSelect_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  struct_items,      1)
#define substrait_Expression_MaskExpression_StructSelect_CALLBACK NULL
#define substrait_Expression_MaskExpression_StructSelect_DEFAULT NULL
#define substrait_Expression_MaskExpression_StructSelect_struct_items_MSGTYPE substrait_Expression_MaskExpression_StructItem

#define substrait_Expression_MaskExpression_StructItem_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, INT32,    field,             1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  child,             2)
#define substrait_Expression_MaskExpression_StructItem_CALLBACK NULL
#define substrait_Expression_MaskExpression_StructItem_DEFAULT NULL
#define substrait_Expression_MaskExpression_StructItem_child_MSGTYPE substrait_Expression_MaskExpression_Select

#define substrait_Expression_MaskExpression_ListSelect_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  selection,         1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  child,             2)
#define substrait_Expression_MaskExpression_ListSelect_CALLBACK NULL
#define substrait_Expression_MaskExpression_ListSelect_DEFAULT NULL
#define substrait_Expression_MaskExpression_ListSelect_selection_MSGTYPE substrait_Expression_MaskExpression_ListSelect_ListSelectItem
#define substrait_Expression_MaskExpression_ListSelect_child_MSGTYPE substrait_Expression_MaskExpression_Select

#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    MESSAGE,  (type,item,type.item),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (type,slice,type.slice),   2)
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_CALLBACK NULL
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_DEFAULT NULL
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_type_item_MSGTYPE substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_type_slice_MSGTYPE substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice

#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, INT32,    field,             1)
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement_CALLBACK NULL
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement_DEFAULT NULL

#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, INT32,    start,             1) \
X(a, POINTER,  SINGULAR, INT32,    end,               2)
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice_CALLBACK NULL
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice_DEFAULT NULL

#define substrait_Expression_MaskExpression_MapSelect_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    MESSAGE,  (select,key,select.key),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (select,expression,select.expression),   2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  child,             3)
#define substrait_Expression_MaskExpression_MapSelect_CALLBACK NULL
#define substrait_Expression_MaskExpression_MapSelect_DEFAULT NULL
#define substrait_Expression_MaskExpression_MapSelect_select_key_MSGTYPE substrait_Expression_MaskExpression_MapSelect_MapKey
#define substrait_Expression_MaskExpression_MapSelect_select_expression_MSGTYPE substrait_Expression_MaskExpression_MapSelect_MapKeyExpression
#define substrait_Expression_MaskExpression_MapSelect_child_MSGTYPE substrait_Expression_MaskExpression_Select

#define substrait_Expression_MaskExpression_MapSelect_MapKey_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   map_key,           1)
#define substrait_Expression_MaskExpression_MapSelect_MapKey_CALLBACK NULL
#define substrait_Expression_MaskExpression_MapSelect_MapKey_DEFAULT NULL

#define substrait_Expression_MaskExpression_MapSelect_MapKeyExpression_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   map_key_expression,   1)
#define substrait_Expression_MaskExpression_MapSelect_MapKeyExpression_CALLBACK NULL
#define substrait_Expression_MaskExpression_MapSelect_MapKeyExpression_DEFAULT NULL

#define substrait_Expression_FieldReference_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    MESSAGE,  (reference_type,direct_reference,reference_type.direct_reference),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (reference_type,masked_reference,reference_type.masked_reference),   2) \
X(a, POINTER,  ONEOF,    MESSAGE,  (root_type,expression,root_type.expression),   3) \
X(a, POINTER,  ONEOF,    MESSAGE,  (root_type,root_reference,root_type.root_reference),   4) \
X(a, POINTER,  ONEOF,    MESSAGE,  (root_type,outer_reference,root_type.outer_reference),   5)
#define substrait_Expression_FieldReference_CALLBACK NULL
#define substrait_Expression_FieldReference_DEFAULT NULL
#define substrait_Expression_FieldReference_reference_type_direct_reference_MSGTYPE substrait_Expression_ReferenceSegment
#define substrait_Expression_FieldReference_reference_type_masked_reference_MSGTYPE substrait_Expression_MaskExpression
#define substrait_Expression_FieldReference_root_type_expression_MSGTYPE substrait_Expression
#define substrait_Expression_FieldReference_root_type_root_reference_MSGTYPE substrait_Expression_FieldReference_RootReference
#define substrait_Expression_FieldReference_root_type_outer_reference_MSGTYPE substrait_Expression_FieldReference_OuterReference

#define substrait_Expression_FieldReference_RootReference_FIELDLIST(X, a) \

#define substrait_Expression_FieldReference_RootReference_CALLBACK NULL
#define substrait_Expression_FieldReference_RootReference_DEFAULT NULL

#define substrait_Expression_FieldReference_OuterReference_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT32,   steps_out,         1)
#define substrait_Expression_FieldReference_OuterReference_CALLBACK NULL
#define substrait_Expression_FieldReference_OuterReference_DEFAULT NULL

#define substrait_Expression_Subquery_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    MESSAGE,  (subquery_type,scalar,subquery_type.scalar),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (subquery_type,in_predicate,subquery_type.in_predicate),   2) \
X(a, POINTER,  ONEOF,    MESSAGE,  (subquery_type,set_predicate,subquery_type.set_predicate),   3) \
X(a, POINTER,  ONEOF,    MESSAGE,  (subquery_type,set_comparison,subquery_type.set_comparison),   4)
#define substrait_Expression_Subquery_CALLBACK NULL
#define substrait_Expression_Subquery_DEFAULT NULL
#define substrait_Expression_Subquery_subquery_type_scalar_MSGTYPE substrait_Expression_Subquery_Scalar
#define substrait_Expression_Subquery_subquery_type_in_predicate_MSGTYPE substrait_Expression_Subquery_InPredicate
#define substrait_Expression_Subquery_subquery_type_set_predicate_MSGTYPE substrait_Expression_Subquery_SetPredicate
#define substrait_Expression_Subquery_subquery_type_set_comparison_MSGTYPE substrait_Expression_Subquery_SetComparison

#define substrait_Expression_Subquery_Scalar_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  input,             1)
#define substrait_Expression_Subquery_Scalar_CALLBACK NULL
#define substrait_Expression_Subquery_Scalar_DEFAULT NULL
#define substrait_Expression_Subquery_Scalar_input_MSGTYPE substrait_Rel

#define substrait_Expression_Subquery_InPredicate_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  needles,           1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  haystack,          2)
#define substrait_Expression_Subquery_InPredicate_CALLBACK NULL
#define substrait_Expression_Subquery_InPredicate_DEFAULT NULL
#define substrait_Expression_Subquery_InPredicate_needles_MSGTYPE substrait_Expression
#define substrait_Expression_Subquery_InPredicate_haystack_MSGTYPE substrait_Rel

#define substrait_Expression_Subquery_SetPredicate_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UENUM,    predicate_op,      1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  tuples,            2)
#define substrait_Expression_Subquery_SetPredicate_CALLBACK NULL
#define substrait_Expression_Subquery_SetPredicate_DEFAULT NULL
#define substrait_Expression_Subquery_SetPredicate_tuples_MSGTYPE substrait_Rel

#define substrait_Expression_Subquery_SetComparison_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UENUM,    reduction_op,      1) \
X(a, POINTER,  SINGULAR, UENUM,    comparison_op,     2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  left,              3) \
X(a, POINTER,  OPTIONAL, MESSAGE,  right,             4)
#define substrait_Expression_Subquery_SetComparison_CALLBACK NULL
#define substrait_Expression_Subquery_SetComparison_DEFAULT NULL
#define substrait_Expression_Subquery_SetComparison_left_MSGTYPE substrait_Expression
#define substrait_Expression_Subquery_SetComparison_right_MSGTYPE substrait_Rel

#define substrait_SortField_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  expr,              1) \
X(a, POINTER,  ONEOF,    UENUM,    (sort_kind,direction,sort_kind.direction),   2) \
X(a, POINTER,  ONEOF,    UINT32,   (sort_kind,comparison_function_reference,sort_kind.comparison_function_reference),   3)
#define substrait_SortField_CALLBACK NULL
#define substrait_SortField_DEFAULT NULL
#define substrait_SortField_expr_MSGTYPE substrait_Expression

#define substrait_AggregateFunction_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT32,   function_reference,   1) \
X(a, POINTER,  REPEATED, MESSAGE,  args,              2) \
X(a, POINTER,  REPEATED, MESSAGE,  sorts,             3) \
X(a, POINTER,  SINGULAR, UENUM,    phase,             4) \
X(a, POINTER,  OPTIONAL, MESSAGE,  output_type,       5) \
X(a, POINTER,  SINGULAR, UENUM,    invocation,        6) \
X(a, POINTER,  REPEATED, MESSAGE,  arguments,         7) \
X(a, POINTER,  REPEATED, MESSAGE,  options,           8)
#define substrait_AggregateFunction_CALLBACK NULL
#define substrait_AggregateFunction_DEFAULT NULL
#define substrait_AggregateFunction_args_MSGTYPE substrait_Expression
#define substrait_AggregateFunction_sorts_MSGTYPE substrait_SortField
#define substrait_AggregateFunction_output_type_MSGTYPE substrait_Type
#define substrait_AggregateFunction_arguments_MSGTYPE substrait_FunctionArgument
#define substrait_AggregateFunction_options_MSGTYPE substrait_FunctionOption

#define substrait_AggregateFunction_ReferenceRel_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, INT32,    subtree_ordinal,   1)
#define substrait_AggregateFunction_ReferenceRel_CALLBACK NULL
#define substrait_AggregateFunction_ReferenceRel_DEFAULT NULL

extern const pb_msgdesc_t substrait_RelCommon_msg;
extern const pb_msgdesc_t substrait_RelCommon_Direct_msg;
extern const pb_msgdesc_t substrait_RelCommon_Emit_msg;
extern const pb_msgdesc_t substrait_RelCommon_Hint_msg;
extern const pb_msgdesc_t substrait_RelCommon_Hint_Stats_msg;
extern const pb_msgdesc_t substrait_RelCommon_Hint_RuntimeConstraint_msg;
extern const pb_msgdesc_t substrait_ReadRel_msg;
extern const pb_msgdesc_t substrait_ReadRel_NamedTable_msg;
extern const pb_msgdesc_t substrait_ReadRel_VirtualTable_msg;
extern const pb_msgdesc_t substrait_ReadRel_ExtensionTable_msg;
extern const pb_msgdesc_t substrait_ReadRel_LocalFiles_msg;
extern const pb_msgdesc_t substrait_ReadRel_LocalFiles_FileOrFiles_msg;
extern const pb_msgdesc_t substrait_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions_msg;
extern const pb_msgdesc_t substrait_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions_msg;
extern const pb_msgdesc_t substrait_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions_msg;
extern const pb_msgdesc_t substrait_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions_msg;
extern const pb_msgdesc_t substrait_ProjectRel_msg;
extern const pb_msgdesc_t substrait_JoinRel_msg;
extern const pb_msgdesc_t substrait_CrossRel_msg;
extern const pb_msgdesc_t substrait_FetchRel_msg;
extern const pb_msgdesc_t substrait_AggregateRel_msg;
extern const pb_msgdesc_t substrait_AggregateRel_Grouping_msg;
extern const pb_msgdesc_t substrait_AggregateRel_Measure_msg;
extern const pb_msgdesc_t substrait_SortRel_msg;
extern const pb_msgdesc_t substrait_FilterRel_msg;
extern const pb_msgdesc_t substrait_SetRel_msg;
extern const pb_msgdesc_t substrait_ExtensionSingleRel_msg;
extern const pb_msgdesc_t substrait_ExtensionLeafRel_msg;
extern const pb_msgdesc_t substrait_ExtensionMultiRel_msg;
extern const pb_msgdesc_t substrait_ExchangeRel_msg;
extern const pb_msgdesc_t substrait_ExchangeRel_ScatterFields_msg;
extern const pb_msgdesc_t substrait_ExchangeRel_SingleBucketExpression_msg;
extern const pb_msgdesc_t substrait_ExchangeRel_MultiBucketExpression_msg;
extern const pb_msgdesc_t substrait_ExchangeRel_Broadcast_msg;
extern const pb_msgdesc_t substrait_ExchangeRel_RoundRobin_msg;
extern const pb_msgdesc_t substrait_ExchangeRel_ExchangeTarget_msg;
extern const pb_msgdesc_t substrait_RelRoot_msg;
extern const pb_msgdesc_t substrait_Rel_msg;
extern const pb_msgdesc_t substrait_NamedObjectWrite_msg;
extern const pb_msgdesc_t substrait_ExtensionObject_msg;
extern const pb_msgdesc_t substrait_DdlRel_msg;
extern const pb_msgdesc_t substrait_WriteRel_msg;
extern const pb_msgdesc_t substrait_FunctionArgument_msg;
extern const pb_msgdesc_t substrait_FunctionOption_msg;
extern const pb_msgdesc_t substrait_Expression_msg;
extern const pb_msgdesc_t substrait_Expression_Enum_msg;
extern const pb_msgdesc_t substrait_Expression_Enum_Empty_msg;
extern const pb_msgdesc_t substrait_Expression_Literal_msg;
extern const pb_msgdesc_t substrait_Expression_Literal_VarChar_msg;
extern const pb_msgdesc_t substrait_Expression_Literal_Decimal_msg;
extern const pb_msgdesc_t substrait_Expression_Literal_Map_msg;
extern const pb_msgdesc_t substrait_Expression_Literal_Map_KeyValue_msg;
extern const pb_msgdesc_t substrait_Expression_Literal_IntervalYearToMonth_msg;
extern const pb_msgdesc_t substrait_Expression_Literal_IntervalDayToSecond_msg;
extern const pb_msgdesc_t substrait_Expression_Literal_Struct_msg;
extern const pb_msgdesc_t substrait_Expression_Literal_List_msg;
extern const pb_msgdesc_t substrait_Expression_Literal_UserDefined_msg;
extern const pb_msgdesc_t substrait_Expression_ScalarFunction_msg;
extern const pb_msgdesc_t substrait_Expression_WindowFunction_msg;
extern const pb_msgdesc_t substrait_Expression_WindowFunction_Bound_msg;
extern const pb_msgdesc_t substrait_Expression_WindowFunction_Bound_Preceding_msg;
extern const pb_msgdesc_t substrait_Expression_WindowFunction_Bound_Following_msg;
extern const pb_msgdesc_t substrait_Expression_WindowFunction_Bound_CurrentRow_msg;
extern const pb_msgdesc_t substrait_Expression_WindowFunction_Bound_Unbounded_msg;
extern const pb_msgdesc_t substrait_Expression_IfThen_msg;
extern const pb_msgdesc_t substrait_Expression_IfThen_IfClause_msg;
extern const pb_msgdesc_t substrait_Expression_Cast_msg;
extern const pb_msgdesc_t substrait_Expression_SwitchExpression_msg;
extern const pb_msgdesc_t substrait_Expression_SwitchExpression_IfValue_msg;
extern const pb_msgdesc_t substrait_Expression_SingularOrList_msg;
extern const pb_msgdesc_t substrait_Expression_MultiOrList_msg;
extern const pb_msgdesc_t substrait_Expression_MultiOrList_Record_msg;
extern const pb_msgdesc_t substrait_Expression_EmbeddedFunction_msg;
extern const pb_msgdesc_t substrait_Expression_EmbeddedFunction_PythonPickleFunction_msg;
extern const pb_msgdesc_t substrait_Expression_EmbeddedFunction_WebAssemblyFunction_msg;
extern const pb_msgdesc_t substrait_Expression_ReferenceSegment_msg;
extern const pb_msgdesc_t substrait_Expression_ReferenceSegment_MapKey_msg;
extern const pb_msgdesc_t substrait_Expression_ReferenceSegment_StructField_msg;
extern const pb_msgdesc_t substrait_Expression_ReferenceSegment_ListElement_msg;
extern const pb_msgdesc_t substrait_Expression_MaskExpression_msg;
extern const pb_msgdesc_t substrait_Expression_MaskExpression_Select_msg;
extern const pb_msgdesc_t substrait_Expression_MaskExpression_StructSelect_msg;
extern const pb_msgdesc_t substrait_Expression_MaskExpression_StructItem_msg;
extern const pb_msgdesc_t substrait_Expression_MaskExpression_ListSelect_msg;
extern const pb_msgdesc_t substrait_Expression_MaskExpression_ListSelect_ListSelectItem_msg;
extern const pb_msgdesc_t substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement_msg;
extern const pb_msgdesc_t substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice_msg;
extern const pb_msgdesc_t substrait_Expression_MaskExpression_MapSelect_msg;
extern const pb_msgdesc_t substrait_Expression_MaskExpression_MapSelect_MapKey_msg;
extern const pb_msgdesc_t substrait_Expression_MaskExpression_MapSelect_MapKeyExpression_msg;
extern const pb_msgdesc_t substrait_Expression_FieldReference_msg;
extern const pb_msgdesc_t substrait_Expression_FieldReference_RootReference_msg;
extern const pb_msgdesc_t substrait_Expression_FieldReference_OuterReference_msg;
extern const pb_msgdesc_t substrait_Expression_Subquery_msg;
extern const pb_msgdesc_t substrait_Expression_Subquery_Scalar_msg;
extern const pb_msgdesc_t substrait_Expression_Subquery_InPredicate_msg;
extern const pb_msgdesc_t substrait_Expression_Subquery_SetPredicate_msg;
extern const pb_msgdesc_t substrait_Expression_Subquery_SetComparison_msg;
extern const pb_msgdesc_t substrait_SortField_msg;
extern const pb_msgdesc_t substrait_AggregateFunction_msg;
extern const pb_msgdesc_t substrait_AggregateFunction_ReferenceRel_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define substrait_RelCommon_fields &substrait_RelCommon_msg
#define substrait_RelCommon_Direct_fields &substrait_RelCommon_Direct_msg
#define substrait_RelCommon_Emit_fields &substrait_RelCommon_Emit_msg
#define substrait_RelCommon_Hint_fields &substrait_RelCommon_Hint_msg
#define substrait_RelCommon_Hint_Stats_fields &substrait_RelCommon_Hint_Stats_msg
#define substrait_RelCommon_Hint_RuntimeConstraint_fields &substrait_RelCommon_Hint_RuntimeConstraint_msg
#define substrait_ReadRel_fields &substrait_ReadRel_msg
#define substrait_ReadRel_NamedTable_fields &substrait_ReadRel_NamedTable_msg
#define substrait_ReadRel_VirtualTable_fields &substrait_ReadRel_VirtualTable_msg
#define substrait_ReadRel_ExtensionTable_fields &substrait_ReadRel_ExtensionTable_msg
#define substrait_ReadRel_LocalFiles_fields &substrait_ReadRel_LocalFiles_msg
#define substrait_ReadRel_LocalFiles_FileOrFiles_fields &substrait_ReadRel_LocalFiles_FileOrFiles_msg
#define substrait_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions_fields &substrait_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions_msg
#define substrait_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions_fields &substrait_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions_msg
#define substrait_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions_fields &substrait_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions_msg
#define substrait_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions_fields &substrait_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions_msg
#define substrait_ProjectRel_fields &substrait_ProjectRel_msg
#define substrait_JoinRel_fields &substrait_JoinRel_msg
#define substrait_CrossRel_fields &substrait_CrossRel_msg
#define substrait_FetchRel_fields &substrait_FetchRel_msg
#define substrait_AggregateRel_fields &substrait_AggregateRel_msg
#define substrait_AggregateRel_Grouping_fields &substrait_AggregateRel_Grouping_msg
#define substrait_AggregateRel_Measure_fields &substrait_AggregateRel_Measure_msg
#define substrait_SortRel_fields &substrait_SortRel_msg
#define substrait_FilterRel_fields &substrait_FilterRel_msg
#define substrait_SetRel_fields &substrait_SetRel_msg
#define substrait_ExtensionSingleRel_fields &substrait_ExtensionSingleRel_msg
#define substrait_ExtensionLeafRel_fields &substrait_ExtensionLeafRel_msg
#define substrait_ExtensionMultiRel_fields &substrait_ExtensionMultiRel_msg
#define substrait_ExchangeRel_fields &substrait_ExchangeRel_msg
#define substrait_ExchangeRel_ScatterFields_fields &substrait_ExchangeRel_ScatterFields_msg
#define substrait_ExchangeRel_SingleBucketExpression_fields &substrait_ExchangeRel_SingleBucketExpression_msg
#define substrait_ExchangeRel_MultiBucketExpression_fields &substrait_ExchangeRel_MultiBucketExpression_msg
#define substrait_ExchangeRel_Broadcast_fields &substrait_ExchangeRel_Broadcast_msg
#define substrait_ExchangeRel_RoundRobin_fields &substrait_ExchangeRel_RoundRobin_msg
#define substrait_ExchangeRel_ExchangeTarget_fields &substrait_ExchangeRel_ExchangeTarget_msg
#define substrait_RelRoot_fields &substrait_RelRoot_msg
#define substrait_Rel_fields &substrait_Rel_msg
#define substrait_NamedObjectWrite_fields &substrait_NamedObjectWrite_msg
#define substrait_ExtensionObject_fields &substrait_ExtensionObject_msg
#define substrait_DdlRel_fields &substrait_DdlRel_msg
#define substrait_WriteRel_fields &substrait_WriteRel_msg
#define substrait_FunctionArgument_fields &substrait_FunctionArgument_msg
#define substrait_FunctionOption_fields &substrait_FunctionOption_msg
#define substrait_Expression_fields &substrait_Expression_msg
#define substrait_Expression_Enum_fields &substrait_Expression_Enum_msg
#define substrait_Expression_Enum_Empty_fields &substrait_Expression_Enum_Empty_msg
#define substrait_Expression_Literal_fields &substrait_Expression_Literal_msg
#define substrait_Expression_Literal_VarChar_fields &substrait_Expression_Literal_VarChar_msg
#define substrait_Expression_Literal_Decimal_fields &substrait_Expression_Literal_Decimal_msg
#define substrait_Expression_Literal_Map_fields &substrait_Expression_Literal_Map_msg
#define substrait_Expression_Literal_Map_KeyValue_fields &substrait_Expression_Literal_Map_KeyValue_msg
#define substrait_Expression_Literal_IntervalYearToMonth_fields &substrait_Expression_Literal_IntervalYearToMonth_msg
#define substrait_Expression_Literal_IntervalDayToSecond_fields &substrait_Expression_Literal_IntervalDayToSecond_msg
#define substrait_Expression_Literal_Struct_fields &substrait_Expression_Literal_Struct_msg
#define substrait_Expression_Literal_List_fields &substrait_Expression_Literal_List_msg
#define substrait_Expression_Literal_UserDefined_fields &substrait_Expression_Literal_UserDefined_msg
#define substrait_Expression_ScalarFunction_fields &substrait_Expression_ScalarFunction_msg
#define substrait_Expression_WindowFunction_fields &substrait_Expression_WindowFunction_msg
#define substrait_Expression_WindowFunction_Bound_fields &substrait_Expression_WindowFunction_Bound_msg
#define substrait_Expression_WindowFunction_Bound_Preceding_fields &substrait_Expression_WindowFunction_Bound_Preceding_msg
#define substrait_Expression_WindowFunction_Bound_Following_fields &substrait_Expression_WindowFunction_Bound_Following_msg
#define substrait_Expression_WindowFunction_Bound_CurrentRow_fields &substrait_Expression_WindowFunction_Bound_CurrentRow_msg
#define substrait_Expression_WindowFunction_Bound_Unbounded_fields &substrait_Expression_WindowFunction_Bound_Unbounded_msg
#define substrait_Expression_IfThen_fields &substrait_Expression_IfThen_msg
#define substrait_Expression_IfThen_IfClause_fields &substrait_Expression_IfThen_IfClause_msg
#define substrait_Expression_Cast_fields &substrait_Expression_Cast_msg
#define substrait_Expression_SwitchExpression_fields &substrait_Expression_SwitchExpression_msg
#define substrait_Expression_SwitchExpression_IfValue_fields &substrait_Expression_SwitchExpression_IfValue_msg
#define substrait_Expression_SingularOrList_fields &substrait_Expression_SingularOrList_msg
#define substrait_Expression_MultiOrList_fields &substrait_Expression_MultiOrList_msg
#define substrait_Expression_MultiOrList_Record_fields &substrait_Expression_MultiOrList_Record_msg
#define substrait_Expression_EmbeddedFunction_fields &substrait_Expression_EmbeddedFunction_msg
#define substrait_Expression_EmbeddedFunction_PythonPickleFunction_fields &substrait_Expression_EmbeddedFunction_PythonPickleFunction_msg
#define substrait_Expression_EmbeddedFunction_WebAssemblyFunction_fields &substrait_Expression_EmbeddedFunction_WebAssemblyFunction_msg
#define substrait_Expression_ReferenceSegment_fields &substrait_Expression_ReferenceSegment_msg
#define substrait_Expression_ReferenceSegment_MapKey_fields &substrait_Expression_ReferenceSegment_MapKey_msg
#define substrait_Expression_ReferenceSegment_StructField_fields &substrait_Expression_ReferenceSegment_StructField_msg
#define substrait_Expression_ReferenceSegment_ListElement_fields &substrait_Expression_ReferenceSegment_ListElement_msg
#define substrait_Expression_MaskExpression_fields &substrait_Expression_MaskExpression_msg
#define substrait_Expression_MaskExpression_Select_fields &substrait_Expression_MaskExpression_Select_msg
#define substrait_Expression_MaskExpression_StructSelect_fields &substrait_Expression_MaskExpression_StructSelect_msg
#define substrait_Expression_MaskExpression_StructItem_fields &substrait_Expression_MaskExpression_StructItem_msg
#define substrait_Expression_MaskExpression_ListSelect_fields &substrait_Expression_MaskExpression_ListSelect_msg
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_fields &substrait_Expression_MaskExpression_ListSelect_ListSelectItem_msg
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement_fields &substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement_msg
#define substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice_fields &substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice_msg
#define substrait_Expression_MaskExpression_MapSelect_fields &substrait_Expression_MaskExpression_MapSelect_msg
#define substrait_Expression_MaskExpression_MapSelect_MapKey_fields &substrait_Expression_MaskExpression_MapSelect_MapKey_msg
#define substrait_Expression_MaskExpression_MapSelect_MapKeyExpression_fields &substrait_Expression_MaskExpression_MapSelect_MapKeyExpression_msg
#define substrait_Expression_FieldReference_fields &substrait_Expression_FieldReference_msg
#define substrait_Expression_FieldReference_RootReference_fields &substrait_Expression_FieldReference_RootReference_msg
#define substrait_Expression_FieldReference_OuterReference_fields &substrait_Expression_FieldReference_OuterReference_msg
#define substrait_Expression_Subquery_fields &substrait_Expression_Subquery_msg
#define substrait_Expression_Subquery_Scalar_fields &substrait_Expression_Subquery_Scalar_msg
#define substrait_Expression_Subquery_InPredicate_fields &substrait_Expression_Subquery_InPredicate_msg
#define substrait_Expression_Subquery_SetPredicate_fields &substrait_Expression_Subquery_SetPredicate_msg
#define substrait_Expression_Subquery_SetComparison_fields &substrait_Expression_Subquery_SetComparison_msg
#define substrait_SortField_fields &substrait_SortField_msg
#define substrait_AggregateFunction_fields &substrait_AggregateFunction_msg
#define substrait_AggregateFunction_ReferenceRel_fields &substrait_AggregateFunction_ReferenceRel_msg

/* Maximum encoded size of messages (where known) */
/* substrait_RelCommon_size depends on runtime parameters */
/* substrait_RelCommon_Emit_size depends on runtime parameters */
/* substrait_RelCommon_Hint_size depends on runtime parameters */
/* substrait_RelCommon_Hint_Stats_size depends on runtime parameters */
/* substrait_RelCommon_Hint_RuntimeConstraint_size depends on runtime parameters */
/* substrait_ReadRel_size depends on runtime parameters */
/* substrait_ReadRel_NamedTable_size depends on runtime parameters */
/* substrait_ReadRel_VirtualTable_size depends on runtime parameters */
/* substrait_ReadRel_ExtensionTable_size depends on runtime parameters */
/* substrait_ReadRel_LocalFiles_size depends on runtime parameters */
/* substrait_ReadRel_LocalFiles_FileOrFiles_size depends on runtime parameters */
/* substrait_ProjectRel_size depends on runtime parameters */
/* substrait_JoinRel_size depends on runtime parameters */
/* substrait_CrossRel_size depends on runtime parameters */
/* substrait_FetchRel_size depends on runtime parameters */
/* substrait_AggregateRel_size depends on runtime parameters */
/* substrait_AggregateRel_Grouping_size depends on runtime parameters */
/* substrait_AggregateRel_Measure_size depends on runtime parameters */
/* substrait_SortRel_size depends on runtime parameters */
/* substrait_FilterRel_size depends on runtime parameters */
/* substrait_SetRel_size depends on runtime parameters */
/* substrait_ExtensionSingleRel_size depends on runtime parameters */
/* substrait_ExtensionLeafRel_size depends on runtime parameters */
/* substrait_ExtensionMultiRel_size depends on runtime parameters */
/* substrait_ExchangeRel_size depends on runtime parameters */
/* substrait_ExchangeRel_ScatterFields_size depends on runtime parameters */
/* substrait_ExchangeRel_SingleBucketExpression_size depends on runtime parameters */
/* substrait_ExchangeRel_MultiBucketExpression_size depends on runtime parameters */
/* substrait_ExchangeRel_RoundRobin_size depends on runtime parameters */
/* substrait_ExchangeRel_ExchangeTarget_size depends on runtime parameters */
/* substrait_RelRoot_size depends on runtime parameters */
/* substrait_Rel_size depends on runtime parameters */
/* substrait_NamedObjectWrite_size depends on runtime parameters */
/* substrait_ExtensionObject_size depends on runtime parameters */
/* substrait_DdlRel_size depends on runtime parameters */
/* substrait_WriteRel_size depends on runtime parameters */
/* substrait_FunctionArgument_size depends on runtime parameters */
/* substrait_FunctionOption_size depends on runtime parameters */
/* substrait_Expression_size depends on runtime parameters */
/* substrait_Expression_Enum_size depends on runtime parameters */
/* substrait_Expression_Literal_size depends on runtime parameters */
/* substrait_Expression_Literal_VarChar_size depends on runtime parameters */
/* substrait_Expression_Literal_Decimal_size depends on runtime parameters */
/* substrait_Expression_Literal_Map_size depends on runtime parameters */
/* substrait_Expression_Literal_Map_KeyValue_size depends on runtime parameters */
/* substrait_Expression_Literal_IntervalYearToMonth_size depends on runtime parameters */
/* substrait_Expression_Literal_IntervalDayToSecond_size depends on runtime parameters */
/* substrait_Expression_Literal_Struct_size depends on runtime parameters */
/* substrait_Expression_Literal_List_size depends on runtime parameters */
/* substrait_Expression_Literal_UserDefined_size depends on runtime parameters */
/* substrait_Expression_ScalarFunction_size depends on runtime parameters */
/* substrait_Expression_WindowFunction_size depends on runtime parameters */
/* substrait_Expression_WindowFunction_Bound_size depends on runtime parameters */
/* substrait_Expression_WindowFunction_Bound_Preceding_size depends on runtime parameters */
/* substrait_Expression_WindowFunction_Bound_Following_size depends on runtime parameters */
/* substrait_Expression_IfThen_size depends on runtime parameters */
/* substrait_Expression_IfThen_IfClause_size depends on runtime parameters */
/* substrait_Expression_Cast_size depends on runtime parameters */
/* substrait_Expression_SwitchExpression_size depends on runtime parameters */
/* substrait_Expression_SwitchExpression_IfValue_size depends on runtime parameters */
/* substrait_Expression_SingularOrList_size depends on runtime parameters */
/* substrait_Expression_MultiOrList_size depends on runtime parameters */
/* substrait_Expression_MultiOrList_Record_size depends on runtime parameters */
/* substrait_Expression_EmbeddedFunction_size depends on runtime parameters */
/* substrait_Expression_EmbeddedFunction_PythonPickleFunction_size depends on runtime parameters */
/* substrait_Expression_EmbeddedFunction_WebAssemblyFunction_size depends on runtime parameters */
/* substrait_Expression_ReferenceSegment_size depends on runtime parameters */
/* substrait_Expression_ReferenceSegment_MapKey_size depends on runtime parameters */
/* substrait_Expression_ReferenceSegment_StructField_size depends on runtime parameters */
/* substrait_Expression_ReferenceSegment_ListElement_size depends on runtime parameters */
/* substrait_Expression_MaskExpression_size depends on runtime parameters */
/* substrait_Expression_MaskExpression_Select_size depends on runtime parameters */
/* substrait_Expression_MaskExpression_StructSelect_size depends on runtime parameters */
/* substrait_Expression_MaskExpression_StructItem_size depends on runtime parameters */
/* substrait_Expression_MaskExpression_ListSelect_size depends on runtime parameters */
/* substrait_Expression_MaskExpression_ListSelect_ListSelectItem_size depends on runtime parameters */
/* substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListElement_size depends on runtime parameters */
/* substrait_Expression_MaskExpression_ListSelect_ListSelectItem_ListSlice_size depends on runtime parameters */
/* substrait_Expression_MaskExpression_MapSelect_size depends on runtime parameters */
/* substrait_Expression_MaskExpression_MapSelect_MapKey_size depends on runtime parameters */
/* substrait_Expression_MaskExpression_MapSelect_MapKeyExpression_size depends on runtime parameters */
/* substrait_Expression_FieldReference_size depends on runtime parameters */
/* substrait_Expression_FieldReference_OuterReference_size depends on runtime parameters */
/* substrait_Expression_Subquery_size depends on runtime parameters */
/* substrait_Expression_Subquery_Scalar_size depends on runtime parameters */
/* substrait_Expression_Subquery_InPredicate_size depends on runtime parameters */
/* substrait_Expression_Subquery_SetPredicate_size depends on runtime parameters */
/* substrait_Expression_Subquery_SetComparison_size depends on runtime parameters */
/* substrait_SortField_size depends on runtime parameters */
/* substrait_AggregateFunction_size depends on runtime parameters */
/* substrait_AggregateFunction_ReferenceRel_size depends on runtime parameters */
#define substrait_ExchangeRel_Broadcast_size     0
#define substrait_Expression_Enum_Empty_size     0
#define substrait_Expression_FieldReference_RootReference_size 0
#define substrait_Expression_WindowFunction_Bound_CurrentRow_size 0
#define substrait_Expression_WindowFunction_Bound_Unbounded_size 0
#define substrait_ReadRel_LocalFiles_FileOrFiles_ArrowReadOptions_size 0
#define substrait_ReadRel_LocalFiles_FileOrFiles_DwrfReadOptions_size 0
#define substrait_ReadRel_LocalFiles_FileOrFiles_OrcReadOptions_size 0
#define substrait_ReadRel_LocalFiles_FileOrFiles_ParquetReadOptions_size 0
#define substrait_RelCommon_Direct_size          0

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
