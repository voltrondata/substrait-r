/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_SUBSTRAIT_EXTENSIONS_SUBSTRAIT_EXTENSIONS_EXTENSIONS_PB_H_INCLUDED
#define PB_SUBSTRAIT_EXTENSIONS_SUBSTRAIT_EXTENSIONS_EXTENSIONS_PB_H_INCLUDED
#include <pb.h>
#include "substrait/any.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _substrait_extensions_AdvancedExtension { 
    struct _substrait_Any *optimization;
    struct _substrait_Any *enhancement;
} substrait_extensions_AdvancedExtension;

/* Describes a mapping between a specific extension entity and the uri where
 that extension can be found. */
typedef struct _substrait_extensions_SimpleExtensionDeclaration { 
    pb_size_t which_mapping_type;
    union {
        struct _substrait_extensions_SimpleExtensionDeclaration_ExtensionType *extension_type;
        struct _substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation *extension_type_variation;
        struct _substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction *extension_function_;
    } mapping_type;
} substrait_extensions_SimpleExtensionDeclaration;

typedef struct _substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction { 
    uint32_t *extension_uri_reference;
    uint32_t *function_anchor;
    char *name;
} substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction;

/* A generic object that can be used to embed additional extension information
 into the serialized substrait plan. */
typedef struct _substrait_extensions_SimpleExtensionDeclaration_ExtensionType { 
    /* An optimization is helpful information that don't influence semantics. May
 be ignored by a consumer. */
    uint32_t *extension_uri_reference;
    /* An enhancement alter semantics. Cannot be ignored by a consumer. */
    uint32_t *type_anchor;
    char *name;
} substrait_extensions_SimpleExtensionDeclaration_ExtensionType;

typedef struct _substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation { 
    uint32_t *extension_uri_reference;
    uint32_t *type_variation_anchor;
    char *name;
} substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation;

typedef struct _substrait_extensions_SimpleExtensionURI { 
    /* A surrogate key used in the context of a single plan used to reference the
 URI associated with an extension. */
    uint32_t *extension_uri_anchor;
    /* The URI where this extension YAML can be retrieved. This is the "namespace"
 of this extension. */
    char *uri;
} substrait_extensions_SimpleExtensionURI;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define substrait_extensions_SimpleExtensionURI_init_default {NULL, NULL}
#define substrait_extensions_SimpleExtensionDeclaration_init_default {0, {NULL}}
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionType_init_default {NULL, NULL, NULL}
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation_init_default {NULL, NULL, NULL}
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction_init_default {NULL, NULL, NULL}
#define substrait_extensions_AdvancedExtension_init_default {NULL, NULL}
#define substrait_extensions_SimpleExtensionURI_init_zero {NULL, NULL}
#define substrait_extensions_SimpleExtensionDeclaration_init_zero {0, {NULL}}
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionType_init_zero {NULL, NULL, NULL}
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation_init_zero {NULL, NULL, NULL}
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction_init_zero {NULL, NULL, NULL}
#define substrait_extensions_AdvancedExtension_init_zero {NULL, NULL}

/* Field tags (for use in manual encoding/decoding) */
#define substrait_extensions_AdvancedExtension_optimization_tag 1
#define substrait_extensions_AdvancedExtension_enhancement_tag 2
#define substrait_extensions_SimpleExtensionDeclaration_extension_type_tag 1
#define substrait_extensions_SimpleExtensionDeclaration_extension_type_variation_tag 2
#define substrait_extensions_SimpleExtensionDeclaration_extension_function__tag 3
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction_extension_uri_reference_tag 1
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction_function_anchor_tag 2
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction_name_tag 3
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionType_extension_uri_reference_tag 1
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionType_type_anchor_tag 2
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionType_name_tag 3
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation_extension_uri_reference_tag 1
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation_type_variation_anchor_tag 2
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation_name_tag 3
#define substrait_extensions_SimpleExtensionURI_extension_uri_anchor_tag 1
#define substrait_extensions_SimpleExtensionURI_uri_tag 2

/* Struct field encoding specification for nanopb */
#define substrait_extensions_SimpleExtensionURI_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT32,   extension_uri_anchor,   1) \
X(a, POINTER,  SINGULAR, STRING,   uri,               2)
#define substrait_extensions_SimpleExtensionURI_CALLBACK NULL
#define substrait_extensions_SimpleExtensionURI_DEFAULT NULL

#define substrait_extensions_SimpleExtensionDeclaration_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    MESSAGE,  (mapping_type,extension_type,mapping_type.extension_type),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (mapping_type,extension_type_variation,mapping_type.extension_type_variation),   2) \
X(a, POINTER,  ONEOF,    MESSAGE,  (mapping_type,extension_function_,mapping_type.extension_function_),   3)
#define substrait_extensions_SimpleExtensionDeclaration_CALLBACK NULL
#define substrait_extensions_SimpleExtensionDeclaration_DEFAULT NULL
#define substrait_extensions_SimpleExtensionDeclaration_mapping_type_extension_type_MSGTYPE substrait_extensions_SimpleExtensionDeclaration_ExtensionType
#define substrait_extensions_SimpleExtensionDeclaration_mapping_type_extension_type_variation_MSGTYPE substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation
#define substrait_extensions_SimpleExtensionDeclaration_mapping_type_extension_function__MSGTYPE substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction

#define substrait_extensions_SimpleExtensionDeclaration_ExtensionType_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT32,   extension_uri_reference,   1) \
X(a, POINTER,  SINGULAR, UINT32,   type_anchor,       2) \
X(a, POINTER,  SINGULAR, STRING,   name,              3)
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionType_CALLBACK NULL
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionType_DEFAULT NULL

#define substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT32,   extension_uri_reference,   1) \
X(a, POINTER,  SINGULAR, UINT32,   type_variation_anchor,   2) \
X(a, POINTER,  SINGULAR, STRING,   name,              3)
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation_CALLBACK NULL
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation_DEFAULT NULL

#define substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT32,   extension_uri_reference,   1) \
X(a, POINTER,  SINGULAR, UINT32,   function_anchor,   2) \
X(a, POINTER,  SINGULAR, STRING,   name,              3)
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction_CALLBACK NULL
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction_DEFAULT NULL

#define substrait_extensions_AdvancedExtension_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  optimization,      1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  enhancement,       2)
#define substrait_extensions_AdvancedExtension_CALLBACK NULL
#define substrait_extensions_AdvancedExtension_DEFAULT NULL
#define substrait_extensions_AdvancedExtension_optimization_MSGTYPE substrait_Any
#define substrait_extensions_AdvancedExtension_enhancement_MSGTYPE substrait_Any

extern const pb_msgdesc_t substrait_extensions_SimpleExtensionURI_msg;
extern const pb_msgdesc_t substrait_extensions_SimpleExtensionDeclaration_msg;
extern const pb_msgdesc_t substrait_extensions_SimpleExtensionDeclaration_ExtensionType_msg;
extern const pb_msgdesc_t substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation_msg;
extern const pb_msgdesc_t substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction_msg;
extern const pb_msgdesc_t substrait_extensions_AdvancedExtension_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define substrait_extensions_SimpleExtensionURI_fields &substrait_extensions_SimpleExtensionURI_msg
#define substrait_extensions_SimpleExtensionDeclaration_fields &substrait_extensions_SimpleExtensionDeclaration_msg
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionType_fields &substrait_extensions_SimpleExtensionDeclaration_ExtensionType_msg
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation_fields &substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation_msg
#define substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction_fields &substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction_msg
#define substrait_extensions_AdvancedExtension_fields &substrait_extensions_AdvancedExtension_msg

/* Maximum encoded size of messages (where known) */
/* substrait_extensions_SimpleExtensionURI_size depends on runtime parameters */
/* substrait_extensions_SimpleExtensionDeclaration_size depends on runtime parameters */
/* substrait_extensions_SimpleExtensionDeclaration_ExtensionType_size depends on runtime parameters */
/* substrait_extensions_SimpleExtensionDeclaration_ExtensionTypeVariation_size depends on runtime parameters */
/* substrait_extensions_SimpleExtensionDeclaration_ExtensionFunction_size depends on runtime parameters */
/* substrait_extensions_AdvancedExtension_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
