/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6 */

#ifndef PB_SUBSTRAIT_SUBSTRAIT_TYPE_EXPRESSIONS_PB_H_INCLUDED
#define PB_SUBSTRAIT_SUBSTRAIT_TYPE_EXPRESSIONS_PB_H_INCLUDED
#include <pb.h>
#include "substrait/type.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _substrait_DerivationExpression_UnaryOp_UnaryOpType { 
    substrait_DerivationExpression_UnaryOp_UnaryOpType_UNARY_OP_TYPE_UNSPECIFIED = 0, 
    substrait_DerivationExpression_UnaryOp_UnaryOpType_UNARY_OP_TYPE_BOOLEAN_NOT = 1 
} substrait_DerivationExpression_UnaryOp_UnaryOpType;

typedef enum _substrait_DerivationExpression_BinaryOp_BinaryOpType { 
    substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_UNSPECIFIED = 0, 
    substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_PLUS = 1, 
    substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_MINUS = 2, 
    substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_MULTIPLY = 3, 
    substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_DIVIDE = 4, 
    substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_MIN = 5, 
    substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_MAX = 6, 
    substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_GREATER_THAN = 7, 
    substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_LESS_THAN = 8, 
    substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_AND = 9, 
    substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_OR = 10, 
    substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_EQUALS = 11, 
    substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_COVERS = 12 
} substrait_DerivationExpression_BinaryOp_BinaryOpType;

/* Struct definitions */
typedef struct _substrait_DerivationExpression { 
    pb_size_t which_kind;
    union {
        struct _substrait_Type_Boolean *bool_;
        struct _substrait_Type_I8 *i8;
        struct _substrait_Type_I16 *i16;
        struct _substrait_Type_I32 *i32;
        struct _substrait_Type_I64 *i64;
        struct _substrait_Type_FP32 *fp32;
        struct _substrait_Type_FP64 *fp64;
        struct _substrait_Type_String *string;
        struct _substrait_Type_Binary *binary;
        struct _substrait_Type_Timestamp *timestamp;
        struct _substrait_Type_Date *date;
        struct _substrait_Type_Time *time;
        struct _substrait_Type_IntervalYear *interval_year;
        struct _substrait_Type_IntervalDay *interval_day;
        struct _substrait_DerivationExpression_ExpressionFixedChar *fixed_char;
        struct _substrait_DerivationExpression_ExpressionVarChar *varchar;
        struct _substrait_DerivationExpression_ExpressionFixedBinary *fixed_binary;
        struct _substrait_DerivationExpression_ExpressionDecimal *decimal;
        struct _substrait_DerivationExpression_ExpressionStruct *struct_;
        struct _substrait_DerivationExpression_ExpressionList *list;
        struct _substrait_DerivationExpression_ExpressionMap *map;
        struct _substrait_Type_TimestampTZ *timestamp_tz;
        struct _substrait_DerivationExpression_ExpressionUserDefined *user_defined;
        /* Deprecated in favor of user_defined, which allows nullability and
     variations to be specified. If user_defined_pointer is encountered,
     treat it as being non-nullable and having the default variation. */
        uint32_t *user_defined_pointer;
        struct _substrait_Type_UUID *uuid;
        char *type_parameter_name;
        char *integer_parameter_name;
        int32_t *integer_literal;
        struct _substrait_DerivationExpression_UnaryOp *unary_op;
        struct _substrait_DerivationExpression_BinaryOp *binary_op;
        struct _substrait_DerivationExpression_IfElse *if_else_;
        struct _substrait_DerivationExpression_ReturnProgram *return_program;
    } kind;
} substrait_DerivationExpression;

typedef struct _substrait_DerivationExpression_BinaryOp { 
    substrait_DerivationExpression_BinaryOp_BinaryOpType *op_type;
    struct _substrait_DerivationExpression *arg1;
    struct _substrait_DerivationExpression *arg2;
} substrait_DerivationExpression_BinaryOp;

typedef struct _substrait_DerivationExpression_ExpressionDecimal { 
    struct _substrait_DerivationExpression *scale;
    struct _substrait_DerivationExpression *precision;
    uint32_t *variation_pointer;
    substrait_Type_Nullability *nullability;
} substrait_DerivationExpression_ExpressionDecimal;

typedef struct _substrait_DerivationExpression_ExpressionFixedBinary { 
    struct _substrait_DerivationExpression *length;
    uint32_t *variation_pointer;
    substrait_Type_Nullability *nullability;
} substrait_DerivationExpression_ExpressionFixedBinary;

typedef struct _substrait_DerivationExpression_ExpressionFixedChar { 
    struct _substrait_DerivationExpression *length;
    uint32_t *variation_pointer;
    substrait_Type_Nullability *nullability;
} substrait_DerivationExpression_ExpressionFixedChar;

typedef struct _substrait_DerivationExpression_ExpressionList { 
    struct _substrait_DerivationExpression *type;
    uint32_t *variation_pointer;
    substrait_Type_Nullability *nullability;
} substrait_DerivationExpression_ExpressionList;

typedef struct _substrait_DerivationExpression_ExpressionMap { 
    struct _substrait_DerivationExpression *key;
    struct _substrait_DerivationExpression *value;
    uint32_t *variation_pointer;
    substrait_Type_Nullability *nullability;
} substrait_DerivationExpression_ExpressionMap;

typedef struct _substrait_DerivationExpression_ExpressionNamedStruct { 
    pb_size_t names_count;
    char **names;
    struct _substrait_DerivationExpression_ExpressionStruct *struct_;
} substrait_DerivationExpression_ExpressionNamedStruct;

typedef struct _substrait_DerivationExpression_ExpressionStruct { 
    pb_size_t types_count;
    struct _substrait_DerivationExpression *types;
    uint32_t *variation_pointer;
    substrait_Type_Nullability *nullability;
} substrait_DerivationExpression_ExpressionStruct;

typedef struct _substrait_DerivationExpression_ExpressionUserDefined { 
    uint32_t *type_pointer;
    uint32_t *variation_pointer;
    substrait_Type_Nullability *nullability;
} substrait_DerivationExpression_ExpressionUserDefined;

typedef struct _substrait_DerivationExpression_ExpressionVarChar { 
    struct _substrait_DerivationExpression *length;
    uint32_t *variation_pointer;
    substrait_Type_Nullability *nullability;
} substrait_DerivationExpression_ExpressionVarChar;

typedef struct _substrait_DerivationExpression_IfElse { 
    struct _substrait_DerivationExpression *if_condition;
    struct _substrait_DerivationExpression *if_return;
    struct _substrait_DerivationExpression *else_return;
} substrait_DerivationExpression_IfElse;

typedef struct _substrait_DerivationExpression_ReturnProgram { 
    pb_size_t assignments_count;
    struct _substrait_DerivationExpression_ReturnProgram_Assignment *assignments;
    struct _substrait_DerivationExpression *final_expression;
} substrait_DerivationExpression_ReturnProgram;

typedef struct _substrait_DerivationExpression_ReturnProgram_Assignment { 
    char *name;
    struct _substrait_DerivationExpression *expression;
} substrait_DerivationExpression_ReturnProgram_Assignment;

typedef struct _substrait_DerivationExpression_UnaryOp { 
    substrait_DerivationExpression_UnaryOp_UnaryOpType *op_type;
    struct _substrait_DerivationExpression *arg;
} substrait_DerivationExpression_UnaryOp;


/* Helper constants for enums */
#define _substrait_DerivationExpression_UnaryOp_UnaryOpType_MIN substrait_DerivationExpression_UnaryOp_UnaryOpType_UNARY_OP_TYPE_UNSPECIFIED
#define _substrait_DerivationExpression_UnaryOp_UnaryOpType_MAX substrait_DerivationExpression_UnaryOp_UnaryOpType_UNARY_OP_TYPE_BOOLEAN_NOT
#define _substrait_DerivationExpression_UnaryOp_UnaryOpType_ARRAYSIZE ((substrait_DerivationExpression_UnaryOp_UnaryOpType)(substrait_DerivationExpression_UnaryOp_UnaryOpType_UNARY_OP_TYPE_BOOLEAN_NOT+1))

#define _substrait_DerivationExpression_BinaryOp_BinaryOpType_MIN substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_UNSPECIFIED
#define _substrait_DerivationExpression_BinaryOp_BinaryOpType_MAX substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_COVERS
#define _substrait_DerivationExpression_BinaryOp_BinaryOpType_ARRAYSIZE ((substrait_DerivationExpression_BinaryOp_BinaryOpType)(substrait_DerivationExpression_BinaryOp_BinaryOpType_BINARY_OP_TYPE_COVERS+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define substrait_DerivationExpression_init_default {0, {NULL}}
#define substrait_DerivationExpression_ExpressionFixedChar_init_default {NULL, NULL, NULL}
#define substrait_DerivationExpression_ExpressionVarChar_init_default {NULL, NULL, NULL}
#define substrait_DerivationExpression_ExpressionFixedBinary_init_default {NULL, NULL, NULL}
#define substrait_DerivationExpression_ExpressionDecimal_init_default {NULL, NULL, NULL, NULL}
#define substrait_DerivationExpression_ExpressionStruct_init_default {0, NULL, NULL, NULL}
#define substrait_DerivationExpression_ExpressionNamedStruct_init_default {0, NULL, NULL}
#define substrait_DerivationExpression_ExpressionList_init_default {NULL, NULL, NULL}
#define substrait_DerivationExpression_ExpressionMap_init_default {NULL, NULL, NULL, NULL}
#define substrait_DerivationExpression_ExpressionUserDefined_init_default {NULL, NULL, NULL}
#define substrait_DerivationExpression_IfElse_init_default {NULL, NULL, NULL}
#define substrait_DerivationExpression_UnaryOp_init_default {NULL, NULL}
#define substrait_DerivationExpression_BinaryOp_init_default {NULL, NULL, NULL}
#define substrait_DerivationExpression_ReturnProgram_init_default {0, NULL, NULL}
#define substrait_DerivationExpression_ReturnProgram_Assignment_init_default {NULL, NULL}
#define substrait_DerivationExpression_init_zero {0, {NULL}}
#define substrait_DerivationExpression_ExpressionFixedChar_init_zero {NULL, NULL, NULL}
#define substrait_DerivationExpression_ExpressionVarChar_init_zero {NULL, NULL, NULL}
#define substrait_DerivationExpression_ExpressionFixedBinary_init_zero {NULL, NULL, NULL}
#define substrait_DerivationExpression_ExpressionDecimal_init_zero {NULL, NULL, NULL, NULL}
#define substrait_DerivationExpression_ExpressionStruct_init_zero {0, NULL, NULL, NULL}
#define substrait_DerivationExpression_ExpressionNamedStruct_init_zero {0, NULL, NULL}
#define substrait_DerivationExpression_ExpressionList_init_zero {NULL, NULL, NULL}
#define substrait_DerivationExpression_ExpressionMap_init_zero {NULL, NULL, NULL, NULL}
#define substrait_DerivationExpression_ExpressionUserDefined_init_zero {NULL, NULL, NULL}
#define substrait_DerivationExpression_IfElse_init_zero {NULL, NULL, NULL}
#define substrait_DerivationExpression_UnaryOp_init_zero {NULL, NULL}
#define substrait_DerivationExpression_BinaryOp_init_zero {NULL, NULL, NULL}
#define substrait_DerivationExpression_ReturnProgram_init_zero {0, NULL, NULL}
#define substrait_DerivationExpression_ReturnProgram_Assignment_init_zero {NULL, NULL}

/* Field tags (for use in manual encoding/decoding) */
#define substrait_DerivationExpression_bool__tag 1
#define substrait_DerivationExpression_i8_tag    2
#define substrait_DerivationExpression_i16_tag   3
#define substrait_DerivationExpression_i32_tag   5
#define substrait_DerivationExpression_i64_tag   7
#define substrait_DerivationExpression_fp32_tag  10
#define substrait_DerivationExpression_fp64_tag  11
#define substrait_DerivationExpression_string_tag 12
#define substrait_DerivationExpression_binary_tag 13
#define substrait_DerivationExpression_timestamp_tag 14
#define substrait_DerivationExpression_date_tag  16
#define substrait_DerivationExpression_time_tag  17
#define substrait_DerivationExpression_interval_year_tag 19
#define substrait_DerivationExpression_interval_day_tag 20
#define substrait_DerivationExpression_fixed_char_tag 21
#define substrait_DerivationExpression_varchar_tag 22
#define substrait_DerivationExpression_fixed_binary_tag 23
#define substrait_DerivationExpression_decimal_tag 24
#define substrait_DerivationExpression_struct__tag 25
#define substrait_DerivationExpression_list_tag  27
#define substrait_DerivationExpression_map_tag   28
#define substrait_DerivationExpression_timestamp_tz_tag 29
#define substrait_DerivationExpression_user_defined_tag 30
#define substrait_DerivationExpression_user_defined_pointer_tag 31
#define substrait_DerivationExpression_uuid_tag  32
#define substrait_DerivationExpression_type_parameter_name_tag 33
#define substrait_DerivationExpression_integer_parameter_name_tag 34
#define substrait_DerivationExpression_integer_literal_tag 35
#define substrait_DerivationExpression_unary_op_tag 36
#define substrait_DerivationExpression_binary_op_tag 37
#define substrait_DerivationExpression_if_else__tag 38
#define substrait_DerivationExpression_return_program_tag 39
#define substrait_DerivationExpression_BinaryOp_op_type_tag 1
#define substrait_DerivationExpression_BinaryOp_arg1_tag 2
#define substrait_DerivationExpression_BinaryOp_arg2_tag 3
#define substrait_DerivationExpression_ExpressionDecimal_scale_tag 1
#define substrait_DerivationExpression_ExpressionDecimal_precision_tag 2
#define substrait_DerivationExpression_ExpressionDecimal_variation_pointer_tag 3
#define substrait_DerivationExpression_ExpressionDecimal_nullability_tag 4
#define substrait_DerivationExpression_ExpressionFixedBinary_length_tag 1
#define substrait_DerivationExpression_ExpressionFixedBinary_variation_pointer_tag 2
#define substrait_DerivationExpression_ExpressionFixedBinary_nullability_tag 3
#define substrait_DerivationExpression_ExpressionFixedChar_length_tag 1
#define substrait_DerivationExpression_ExpressionFixedChar_variation_pointer_tag 2
#define substrait_DerivationExpression_ExpressionFixedChar_nullability_tag 3
#define substrait_DerivationExpression_ExpressionList_type_tag 1
#define substrait_DerivationExpression_ExpressionList_variation_pointer_tag 2
#define substrait_DerivationExpression_ExpressionList_nullability_tag 3
#define substrait_DerivationExpression_ExpressionMap_key_tag 1
#define substrait_DerivationExpression_ExpressionMap_value_tag 2
#define substrait_DerivationExpression_ExpressionMap_variation_pointer_tag 3
#define substrait_DerivationExpression_ExpressionMap_nullability_tag 4
#define substrait_DerivationExpression_ExpressionNamedStruct_names_tag 1
#define substrait_DerivationExpression_ExpressionNamedStruct_struct__tag 2
#define substrait_DerivationExpression_ExpressionStruct_types_tag 1
#define substrait_DerivationExpression_ExpressionStruct_variation_pointer_tag 2
#define substrait_DerivationExpression_ExpressionStruct_nullability_tag 3
#define substrait_DerivationExpression_ExpressionUserDefined_type_pointer_tag 1
#define substrait_DerivationExpression_ExpressionUserDefined_variation_pointer_tag 2
#define substrait_DerivationExpression_ExpressionUserDefined_nullability_tag 3
#define substrait_DerivationExpression_ExpressionVarChar_length_tag 1
#define substrait_DerivationExpression_ExpressionVarChar_variation_pointer_tag 2
#define substrait_DerivationExpression_ExpressionVarChar_nullability_tag 3
#define substrait_DerivationExpression_IfElse_if_condition_tag 1
#define substrait_DerivationExpression_IfElse_if_return_tag 2
#define substrait_DerivationExpression_IfElse_else_return_tag 3
#define substrait_DerivationExpression_ReturnProgram_assignments_tag 1
#define substrait_DerivationExpression_ReturnProgram_final_expression_tag 2
#define substrait_DerivationExpression_ReturnProgram_Assignment_name_tag 1
#define substrait_DerivationExpression_ReturnProgram_Assignment_expression_tag 2
#define substrait_DerivationExpression_UnaryOp_op_type_tag 1
#define substrait_DerivationExpression_UnaryOp_arg_tag 2

/* Struct field encoding specification for nanopb */
#define substrait_DerivationExpression_FIELDLIST(X, a) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,bool_,kind.bool_),   1) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,i8,kind.i8),   2) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,i16,kind.i16),   3) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,i32,kind.i32),   5) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,i64,kind.i64),   7) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,fp32,kind.fp32),  10) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,fp64,kind.fp64),  11) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,string,kind.string),  12) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,binary,kind.binary),  13) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,timestamp,kind.timestamp),  14) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,date,kind.date),  16) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,time,kind.time),  17) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,interval_year,kind.interval_year),  19) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,interval_day,kind.interval_day),  20) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,fixed_char,kind.fixed_char),  21) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,varchar,kind.varchar),  22) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,fixed_binary,kind.fixed_binary),  23) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,decimal,kind.decimal),  24) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,struct_,kind.struct_),  25) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,list,kind.list),  27) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,map,kind.map),  28) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,timestamp_tz,kind.timestamp_tz),  29) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,user_defined,kind.user_defined),  30) \
X(a, POINTER,  ONEOF,    UINT32,   (kind,user_defined_pointer,kind.user_defined_pointer),  31) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,uuid,kind.uuid),  32) \
X(a, POINTER,  ONEOF,    STRING,   (kind,type_parameter_name,kind.type_parameter_name),  33) \
X(a, POINTER,  ONEOF,    STRING,   (kind,integer_parameter_name,kind.integer_parameter_name),  34) \
X(a, POINTER,  ONEOF,    INT32,    (kind,integer_literal,kind.integer_literal),  35) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,unary_op,kind.unary_op),  36) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,binary_op,kind.binary_op),  37) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,if_else_,kind.if_else_),  38) \
X(a, POINTER,  ONEOF,    MESSAGE,  (kind,return_program,kind.return_program),  39)
#define substrait_DerivationExpression_CALLBACK NULL
#define substrait_DerivationExpression_DEFAULT NULL
#define substrait_DerivationExpression_kind_bool__MSGTYPE substrait_Type_Boolean
#define substrait_DerivationExpression_kind_i8_MSGTYPE substrait_Type_I8
#define substrait_DerivationExpression_kind_i16_MSGTYPE substrait_Type_I16
#define substrait_DerivationExpression_kind_i32_MSGTYPE substrait_Type_I32
#define substrait_DerivationExpression_kind_i64_MSGTYPE substrait_Type_I64
#define substrait_DerivationExpression_kind_fp32_MSGTYPE substrait_Type_FP32
#define substrait_DerivationExpression_kind_fp64_MSGTYPE substrait_Type_FP64
#define substrait_DerivationExpression_kind_string_MSGTYPE substrait_Type_String
#define substrait_DerivationExpression_kind_binary_MSGTYPE substrait_Type_Binary
#define substrait_DerivationExpression_kind_timestamp_MSGTYPE substrait_Type_Timestamp
#define substrait_DerivationExpression_kind_date_MSGTYPE substrait_Type_Date
#define substrait_DerivationExpression_kind_time_MSGTYPE substrait_Type_Time
#define substrait_DerivationExpression_kind_interval_year_MSGTYPE substrait_Type_IntervalYear
#define substrait_DerivationExpression_kind_interval_day_MSGTYPE substrait_Type_IntervalDay
#define substrait_DerivationExpression_kind_fixed_char_MSGTYPE substrait_DerivationExpression_ExpressionFixedChar
#define substrait_DerivationExpression_kind_varchar_MSGTYPE substrait_DerivationExpression_ExpressionVarChar
#define substrait_DerivationExpression_kind_fixed_binary_MSGTYPE substrait_DerivationExpression_ExpressionFixedBinary
#define substrait_DerivationExpression_kind_decimal_MSGTYPE substrait_DerivationExpression_ExpressionDecimal
#define substrait_DerivationExpression_kind_struct__MSGTYPE substrait_DerivationExpression_ExpressionStruct
#define substrait_DerivationExpression_kind_list_MSGTYPE substrait_DerivationExpression_ExpressionList
#define substrait_DerivationExpression_kind_map_MSGTYPE substrait_DerivationExpression_ExpressionMap
#define substrait_DerivationExpression_kind_timestamp_tz_MSGTYPE substrait_Type_TimestampTZ
#define substrait_DerivationExpression_kind_user_defined_MSGTYPE substrait_DerivationExpression_ExpressionUserDefined
#define substrait_DerivationExpression_kind_uuid_MSGTYPE substrait_Type_UUID
#define substrait_DerivationExpression_kind_unary_op_MSGTYPE substrait_DerivationExpression_UnaryOp
#define substrait_DerivationExpression_kind_binary_op_MSGTYPE substrait_DerivationExpression_BinaryOp
#define substrait_DerivationExpression_kind_if_else__MSGTYPE substrait_DerivationExpression_IfElse
#define substrait_DerivationExpression_kind_return_program_MSGTYPE substrait_DerivationExpression_ReturnProgram

#define substrait_DerivationExpression_ExpressionFixedChar_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  length,            1) \
X(a, POINTER,  SINGULAR, UINT32,   variation_pointer,   2) \
X(a, POINTER,  SINGULAR, UENUM,    nullability,       3)
#define substrait_DerivationExpression_ExpressionFixedChar_CALLBACK NULL
#define substrait_DerivationExpression_ExpressionFixedChar_DEFAULT NULL
#define substrait_DerivationExpression_ExpressionFixedChar_length_MSGTYPE substrait_DerivationExpression

#define substrait_DerivationExpression_ExpressionVarChar_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  length,            1) \
X(a, POINTER,  SINGULAR, UINT32,   variation_pointer,   2) \
X(a, POINTER,  SINGULAR, UENUM,    nullability,       3)
#define substrait_DerivationExpression_ExpressionVarChar_CALLBACK NULL
#define substrait_DerivationExpression_ExpressionVarChar_DEFAULT NULL
#define substrait_DerivationExpression_ExpressionVarChar_length_MSGTYPE substrait_DerivationExpression

#define substrait_DerivationExpression_ExpressionFixedBinary_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  length,            1) \
X(a, POINTER,  SINGULAR, UINT32,   variation_pointer,   2) \
X(a, POINTER,  SINGULAR, UENUM,    nullability,       3)
#define substrait_DerivationExpression_ExpressionFixedBinary_CALLBACK NULL
#define substrait_DerivationExpression_ExpressionFixedBinary_DEFAULT NULL
#define substrait_DerivationExpression_ExpressionFixedBinary_length_MSGTYPE substrait_DerivationExpression

#define substrait_DerivationExpression_ExpressionDecimal_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  scale,             1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  precision,         2) \
X(a, POINTER,  SINGULAR, UINT32,   variation_pointer,   3) \
X(a, POINTER,  SINGULAR, UENUM,    nullability,       4)
#define substrait_DerivationExpression_ExpressionDecimal_CALLBACK NULL
#define substrait_DerivationExpression_ExpressionDecimal_DEFAULT NULL
#define substrait_DerivationExpression_ExpressionDecimal_scale_MSGTYPE substrait_DerivationExpression
#define substrait_DerivationExpression_ExpressionDecimal_precision_MSGTYPE substrait_DerivationExpression

#define substrait_DerivationExpression_ExpressionStruct_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  types,             1) \
X(a, POINTER,  SINGULAR, UINT32,   variation_pointer,   2) \
X(a, POINTER,  SINGULAR, UENUM,    nullability,       3)
#define substrait_DerivationExpression_ExpressionStruct_CALLBACK NULL
#define substrait_DerivationExpression_ExpressionStruct_DEFAULT NULL
#define substrait_DerivationExpression_ExpressionStruct_types_MSGTYPE substrait_DerivationExpression

#define substrait_DerivationExpression_ExpressionNamedStruct_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, STRING,   names,             1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  struct_,           2)
#define substrait_DerivationExpression_ExpressionNamedStruct_CALLBACK NULL
#define substrait_DerivationExpression_ExpressionNamedStruct_DEFAULT NULL
#define substrait_DerivationExpression_ExpressionNamedStruct_struct__MSGTYPE substrait_DerivationExpression_ExpressionStruct

#define substrait_DerivationExpression_ExpressionList_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  type,              1) \
X(a, POINTER,  SINGULAR, UINT32,   variation_pointer,   2) \
X(a, POINTER,  SINGULAR, UENUM,    nullability,       3)
#define substrait_DerivationExpression_ExpressionList_CALLBACK NULL
#define substrait_DerivationExpression_ExpressionList_DEFAULT NULL
#define substrait_DerivationExpression_ExpressionList_type_MSGTYPE substrait_DerivationExpression

#define substrait_DerivationExpression_ExpressionMap_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  key,               1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  value,             2) \
X(a, POINTER,  SINGULAR, UINT32,   variation_pointer,   3) \
X(a, POINTER,  SINGULAR, UENUM,    nullability,       4)
#define substrait_DerivationExpression_ExpressionMap_CALLBACK NULL
#define substrait_DerivationExpression_ExpressionMap_DEFAULT NULL
#define substrait_DerivationExpression_ExpressionMap_key_MSGTYPE substrait_DerivationExpression
#define substrait_DerivationExpression_ExpressionMap_value_MSGTYPE substrait_DerivationExpression

#define substrait_DerivationExpression_ExpressionUserDefined_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT32,   type_pointer,      1) \
X(a, POINTER,  SINGULAR, UINT32,   variation_pointer,   2) \
X(a, POINTER,  SINGULAR, UENUM,    nullability,       3)
#define substrait_DerivationExpression_ExpressionUserDefined_CALLBACK NULL
#define substrait_DerivationExpression_ExpressionUserDefined_DEFAULT NULL

#define substrait_DerivationExpression_IfElse_FIELDLIST(X, a) \
X(a, POINTER,  OPTIONAL, MESSAGE,  if_condition,      1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  if_return,         2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  else_return,       3)
#define substrait_DerivationExpression_IfElse_CALLBACK NULL
#define substrait_DerivationExpression_IfElse_DEFAULT NULL
#define substrait_DerivationExpression_IfElse_if_condition_MSGTYPE substrait_DerivationExpression
#define substrait_DerivationExpression_IfElse_if_return_MSGTYPE substrait_DerivationExpression
#define substrait_DerivationExpression_IfElse_else_return_MSGTYPE substrait_DerivationExpression

#define substrait_DerivationExpression_UnaryOp_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UENUM,    op_type,           1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  arg,               2)
#define substrait_DerivationExpression_UnaryOp_CALLBACK NULL
#define substrait_DerivationExpression_UnaryOp_DEFAULT NULL
#define substrait_DerivationExpression_UnaryOp_arg_MSGTYPE substrait_DerivationExpression

#define substrait_DerivationExpression_BinaryOp_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UENUM,    op_type,           1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  arg1,              2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  arg2,              3)
#define substrait_DerivationExpression_BinaryOp_CALLBACK NULL
#define substrait_DerivationExpression_BinaryOp_DEFAULT NULL
#define substrait_DerivationExpression_BinaryOp_arg1_MSGTYPE substrait_DerivationExpression
#define substrait_DerivationExpression_BinaryOp_arg2_MSGTYPE substrait_DerivationExpression

#define substrait_DerivationExpression_ReturnProgram_FIELDLIST(X, a) \
X(a, POINTER,  REPEATED, MESSAGE,  assignments,       1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  final_expression,   2)
#define substrait_DerivationExpression_ReturnProgram_CALLBACK NULL
#define substrait_DerivationExpression_ReturnProgram_DEFAULT NULL
#define substrait_DerivationExpression_ReturnProgram_assignments_MSGTYPE substrait_DerivationExpression_ReturnProgram_Assignment
#define substrait_DerivationExpression_ReturnProgram_final_expression_MSGTYPE substrait_DerivationExpression

#define substrait_DerivationExpression_ReturnProgram_Assignment_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   name,              1) \
X(a, POINTER,  OPTIONAL, MESSAGE,  expression,        2)
#define substrait_DerivationExpression_ReturnProgram_Assignment_CALLBACK NULL
#define substrait_DerivationExpression_ReturnProgram_Assignment_DEFAULT NULL
#define substrait_DerivationExpression_ReturnProgram_Assignment_expression_MSGTYPE substrait_DerivationExpression

extern const pb_msgdesc_t substrait_DerivationExpression_msg;
extern const pb_msgdesc_t substrait_DerivationExpression_ExpressionFixedChar_msg;
extern const pb_msgdesc_t substrait_DerivationExpression_ExpressionVarChar_msg;
extern const pb_msgdesc_t substrait_DerivationExpression_ExpressionFixedBinary_msg;
extern const pb_msgdesc_t substrait_DerivationExpression_ExpressionDecimal_msg;
extern const pb_msgdesc_t substrait_DerivationExpression_ExpressionStruct_msg;
extern const pb_msgdesc_t substrait_DerivationExpression_ExpressionNamedStruct_msg;
extern const pb_msgdesc_t substrait_DerivationExpression_ExpressionList_msg;
extern const pb_msgdesc_t substrait_DerivationExpression_ExpressionMap_msg;
extern const pb_msgdesc_t substrait_DerivationExpression_ExpressionUserDefined_msg;
extern const pb_msgdesc_t substrait_DerivationExpression_IfElse_msg;
extern const pb_msgdesc_t substrait_DerivationExpression_UnaryOp_msg;
extern const pb_msgdesc_t substrait_DerivationExpression_BinaryOp_msg;
extern const pb_msgdesc_t substrait_DerivationExpression_ReturnProgram_msg;
extern const pb_msgdesc_t substrait_DerivationExpression_ReturnProgram_Assignment_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define substrait_DerivationExpression_fields &substrait_DerivationExpression_msg
#define substrait_DerivationExpression_ExpressionFixedChar_fields &substrait_DerivationExpression_ExpressionFixedChar_msg
#define substrait_DerivationExpression_ExpressionVarChar_fields &substrait_DerivationExpression_ExpressionVarChar_msg
#define substrait_DerivationExpression_ExpressionFixedBinary_fields &substrait_DerivationExpression_ExpressionFixedBinary_msg
#define substrait_DerivationExpression_ExpressionDecimal_fields &substrait_DerivationExpression_ExpressionDecimal_msg
#define substrait_DerivationExpression_ExpressionStruct_fields &substrait_DerivationExpression_ExpressionStruct_msg
#define substrait_DerivationExpression_ExpressionNamedStruct_fields &substrait_DerivationExpression_ExpressionNamedStruct_msg
#define substrait_DerivationExpression_ExpressionList_fields &substrait_DerivationExpression_ExpressionList_msg
#define substrait_DerivationExpression_ExpressionMap_fields &substrait_DerivationExpression_ExpressionMap_msg
#define substrait_DerivationExpression_ExpressionUserDefined_fields &substrait_DerivationExpression_ExpressionUserDefined_msg
#define substrait_DerivationExpression_IfElse_fields &substrait_DerivationExpression_IfElse_msg
#define substrait_DerivationExpression_UnaryOp_fields &substrait_DerivationExpression_UnaryOp_msg
#define substrait_DerivationExpression_BinaryOp_fields &substrait_DerivationExpression_BinaryOp_msg
#define substrait_DerivationExpression_ReturnProgram_fields &substrait_DerivationExpression_ReturnProgram_msg
#define substrait_DerivationExpression_ReturnProgram_Assignment_fields &substrait_DerivationExpression_ReturnProgram_Assignment_msg

/* Maximum encoded size of messages (where known) */
/* substrait_DerivationExpression_size depends on runtime parameters */
/* substrait_DerivationExpression_ExpressionFixedChar_size depends on runtime parameters */
/* substrait_DerivationExpression_ExpressionVarChar_size depends on runtime parameters */
/* substrait_DerivationExpression_ExpressionFixedBinary_size depends on runtime parameters */
/* substrait_DerivationExpression_ExpressionDecimal_size depends on runtime parameters */
/* substrait_DerivationExpression_ExpressionStruct_size depends on runtime parameters */
/* substrait_DerivationExpression_ExpressionNamedStruct_size depends on runtime parameters */
/* substrait_DerivationExpression_ExpressionList_size depends on runtime parameters */
/* substrait_DerivationExpression_ExpressionMap_size depends on runtime parameters */
/* substrait_DerivationExpression_ExpressionUserDefined_size depends on runtime parameters */
/* substrait_DerivationExpression_IfElse_size depends on runtime parameters */
/* substrait_DerivationExpression_UnaryOp_size depends on runtime parameters */
/* substrait_DerivationExpression_BinaryOp_size depends on runtime parameters */
/* substrait_DerivationExpression_ReturnProgram_size depends on runtime parameters */
/* substrait_DerivationExpression_ReturnProgram_Assignment_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
