% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/substrait-proto.R, R/types-generated.R
\docType{data}
\name{substrait_create}
\alias{substrait_create}
\alias{substrait}
\title{Create 'Substrait' message objects}
\format{
An object of class \code{list} of length 39.
}
\usage{
substrait_create(.qualified_name, ...)

substrait
}
\arguments{
\item{.qualified_name}{The fully qualified name of the message type
or enum (e.g., "substrait.Type.Boolean")}

\item{...}{Arguments passed to the constructor. rlang-style
tidy dots are supported.}
}
\value{
An object of class "substrait_proto".
}
\description{
The 'Substrait' system of objects is made up of a series of
nested types serializable to the Protocol Buffer binary format.
You can create these objects using \code{\link[=substrait_create]{substrait_create()}},
or the namespace-style constructor object \link{substrait}. Convert
an existing object to a Substrait message using \code{\link[=as_substrait]{as_substrait()}},
and convert an existing object back to an R object using
\code{\link[=from_substrait]{from_substrait()}}.
}
\details{
Under the hood, substrait objects are \code{\link[=raw]{raw()}} vectors containing the
underlying binary protocol buffer serialization. This may not be
the case in the future, but is done here to separate the protocol
buffer reader/writer (currently RProtoBuf) from object conversion
to facilitate getting started on the conversion code.
}
\examples{
substrait_create("substrait.Type.Boolean", type_variation_reference = 1)
substrait$Type$Boolean$create(type_variation_reference = 1)

}
\keyword{datasets}
