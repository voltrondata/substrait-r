% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/consumer.R
\name{Consumer}
\alias{Consumer}
\alias{GenericConsumer}
\title{Substrait Consumer}
\description{
Substrait Consumer

Substrait Consumer
}
\details{
In general, the substrait package provides consumer-agnostic tools to
generate \code{substrait.Plan} objects. However, the consumer that will be
evaluating the plan has more information and in many cases has the ability
to provide more meaningful error messages and/or previews than substrait
can provide on its own. The \code{Consumer} R6 class is a mutable object that
provides substrait consumers the ability to customize the behaviour
of the \code{\link[=substrait_builder]{substrait_builder()}} as it is created, modified, printed,
and evaluated. While the object itself is mutable, it is cloned whenever
the builder is modified to minimize a user's interaction with reference
semantics. Whereas the \link{Consumer} defines the interface that other substrait
package functions use, the \link{GenericConsumer} provides an implementation
that takes care of a number of useful details that implementors may wish
to use.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-create_builder}{\code{Consumer$create_builder()}}
\item \href{#method-validate_builder}{\code{Consumer$validate_builder()}}
\item \href{#method-collect_builder}{\code{Consumer$collect_builder()}}
\item \href{#method-print_builder}{\code{Consumer$print_builder()}}
\item \href{#method-resolve_function}{\code{Consumer$resolve_function()}}
\item \href{#method-clone}{\code{Consumer$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-create_builder"></a>}}
\if{latex}{\out{\hypertarget{method-create_builder}{}}}
\subsection{Method \code{create_builder()}}{
Creates a new \code{\link[=substrait_builder]{substrait_builder()}} instance from a given \code{object}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Consumer$create_builder(object, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{object}}{An object, most commonly a data.frame or table-like
object.}

\item{\code{...}}{Extra arguments specific to the \link{Consumer}/\code{object}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A \code{\link[=substrait_builder]{substrait_builder()}}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate_builder"></a>}}
\if{latex}{\out{\hypertarget{method-validate_builder}{}}}
\subsection{Method \code{validate_builder()}}{
Validates a builder after it was modified. This is an opportunity to
provide meaningful feedback after the \code{builder} has been modified.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Consumer$validate_builder(builder)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{builder}}{A \code{\link[=substrait_builder]{substrait_builder()}}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{builder}, potentially modified
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-collect_builder"></a>}}
\if{latex}{\out{\hypertarget{method-collect_builder}{}}}
\subsection{Method \code{collect_builder()}}{
Evaluates the plan being built by \code{builder}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Consumer$collect_builder(builder)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{builder}}{A \code{\link[=substrait_builder]{substrait_builder()}}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A table-like object whose structure is defined by the \link{Consumer}
class. The returned object should have a \code{\link[=as.data.frame]{as.data.frame()}} method.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print_builder"></a>}}
\if{latex}{\out{\hypertarget{method-print_builder}{}}}
\subsection{Method \code{print_builder()}}{
Prints a preview the plan being built by \code{builder}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Consumer$print_builder(builder, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{builder}}{A \code{\link[=substrait_builder]{substrait_builder()}}}

\item{\code{...}}{The dots passed to \code{\link[=print]{print()}}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-resolve_function"></a>}}
\if{latex}{\out{\hypertarget{method-resolve_function}{}}}
\subsection{Method \code{resolve_function()}}{
Resolves an R function call as a Substrait function call.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Consumer$resolve_function(builder, name, args, template)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{builder}}{A \code{\link[=substrait_builder]{substrait_builder()}}}

\item{\code{name}}{The fully-qualified name of the function as it was
called (e.g., \code{pkg::fun}). If no package name was explicitly
specified, the package name will not be present in \code{name}.}

\item{\code{args}}{A \code{list()} of arguments. These may be R objects or Substrait
objects created while evaluating the user-provided arguments
(e.g., field references or function calls).}

\item{\code{template}}{A \code{substrait.Expression.ScalarFunction}, a
\code{substrait.Expression.WindowFunction}, or a
\code{substrait.AggregateFunction}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A modified \code{template}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Consumer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super class}{
\code{\link[substrait:Consumer]{substrait::Consumer}} -> \code{GenericConsumer}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{GenericConsumer$new()}}
\item \href{#method-create_builder}{\code{GenericConsumer$create_builder()}}
\item \href{#method-named_table}{\code{GenericConsumer$named_table()}}
\item \href{#method-validate_builder}{\code{GenericConsumer$validate_builder()}}
\item \href{#method-collect_builder}{\code{GenericConsumer$collect_builder()}}
\item \href{#method-resolve_function}{\code{GenericConsumer$resolve_function()}}
\item \href{#method-function_id}{\code{GenericConsumer$function_id()}}
\item \href{#method-function_extension}{\code{GenericConsumer$function_extension()}}
\item \href{#method-next_id}{\code{GenericConsumer$next_id()}}
\item \href{#method-clone}{\code{GenericConsumer$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="substrait" data-topic="Consumer" data-id="print_builder">}\href{../../substrait/html/Consumer.html#method-print_builder}{\code{substrait::Consumer$print_builder()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new \link{GenericConsumer}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GenericConsumer$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-create_builder"></a>}}
\if{latex}{\out{\hypertarget{method-create_builder}{}}}
\subsection{Method \code{create_builder()}}{
Implementation of \code{Consumer$create_builder()}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GenericConsumer$create_builder(object, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{object}}{An object, most commonly a data.frame or table-like
object.}

\item{\code{...}}{Unused}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-named_table"></a>}}
\if{latex}{\out{\hypertarget{method-named_table}{}}}
\subsection{Method \code{named_table()}}{
Retrieve a named table
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GenericConsumer$named_table(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{A table name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The \code{object} that was passed
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-validate_builder"></a>}}
\if{latex}{\out{\hypertarget{method-validate_builder}{}}}
\subsection{Method \code{validate_builder()}}{
Implementation of \code{Consumer$validate_builder()}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GenericConsumer$validate_builder(builder)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{builder}}{A \code{\link[=substrait_builder]{substrait_builder()}}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-collect_builder"></a>}}
\if{latex}{\out{\hypertarget{method-collect_builder}{}}}
\subsection{Method \code{collect_builder()}}{
Implementation of \code{Consumer$collect_builder()}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GenericConsumer$collect_builder(builder)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{builder}}{A \code{\link[=substrait_builder]{substrait_builder()}}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-resolve_function"></a>}}
\if{latex}{\out{\hypertarget{method-resolve_function}{}}}
\subsection{Method \code{resolve_function()}}{
Implementation of \code{Consumer$resolve_function()}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GenericConsumer$resolve_function(builder, name, args, template)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{builder}}{A \code{\link[=substrait_builder]{substrait_builder()}}}

\item{\code{name}}{The fully-qualified name of the function as it was
called (e.g., \code{pkg::fun}). If no package name was explicitly
specified, the package name will not be present in \code{name}.}

\item{\code{args}}{A \code{list()} of arguments. These may be R objects or Substrait
objects created while evaluating the user-provided arguments
(e.g., field references or function calls).}

\item{\code{template}}{A \code{substrait.Expression.ScalarFunction}, a
\code{substrait.Expression.WindowFunction}, or a
\code{substrait.AggregateFunction}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-function_id"></a>}}
\if{latex}{\out{\hypertarget{method-function_id}{}}}
\subsection{Method \code{function_id()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GenericConsumer$function_id(name, arg_types)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The fully-qualified name of the function as it was
called (e.g., \code{pkg::fun}). If no package name was explicitly
specified, the package name will not be present in \code{name}.}

\item{\code{arg_types}}{A \code{list()} of \code{substrait.Type} objects.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Get a function reference identifier for a given function/input
argument combination.
}

\subsection{Returns}{
An integer function reference
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-function_extension"></a>}}
\if{latex}{\out{\hypertarget{method-function_extension}{}}}
\subsection{Method \code{function_extension()}}{
Retrieve a function extension by anchor/reference
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GenericConsumer$function_extension(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{An function_anchor/function_reference identifier}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A
\code{substrait.extensions.SimpleExtensionDeclaration.ExtensionFunction}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-next_id"></a>}}
\if{latex}{\out{\hypertarget{method-next_id}{}}}
\subsection{Method \code{next_id()}}{
Get the next unique identifier.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GenericConsumer$next_id()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An integer that has not been returned by a previous call to
\code{next_id()} for this instance.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GenericConsumer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
