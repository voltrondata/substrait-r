% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compiler.R
\name{substrait_compiler}
\alias{substrait_compiler}
\alias{substrait_compiler_evaluate_plan}
\alias{substrait_compiler_evaluate_plan.default}
\alias{substrait_compiler_rel}
\alias{substrait_compiler_rel.default}
\alias{substrait_compiler_function_id}
\alias{substrait_compiler_function}
\title{Substrait compiler}
\usage{
substrait_compiler()

substrait_compiler_evaluate_plan(compiler, builder, ...)

\method{substrait_compiler_evaluate_plan}{default}(compiler, builder, ...)

substrait_compiler_rel(compiler, rel, ...)

\method{substrait_compiler_rel}{default}(compiler, rel, ...)

substrait_compiler_function_id(compiler, name, arg_types)

substrait_compiler_function(
  compiler,
  name,
  args,
  pkg = NULL,
  context = NULL,
  ...
)
}
\arguments{
\item{compiler}{a \code{\link[=substrait_compiler]{substrait_compiler()}}}

\item{builder}{A \code{\link[=substrait_builder]{substrait_builder()}} to finalize and evaluate}

\item{...}{Passed to S3 methods.}

\item{rel}{A table-like object that can be converted to a substrait.Rel}

\item{name}{A function name}

\item{arg_types}{A \code{list()} of substrait.Type objects}

\item{args}{A \code{list()} of arguments, which may be R objects or field
references and may be named (i.e., these have not yet been converted
into substrait.Expression objects).}

\item{pkg}{An R package name or NULL if no R package name was present
in the function call.}

\item{context}{An optional context that can be used to pick the correct
function (e.g., scalar, window, aggregate).}
}
\value{
\itemize{
\item \code{substrait_compiler()} returns an object of class "substrait_compiler"
\item \code{substrait_compiler_function_id()} returns an integer identifier for
a function with a given name and argument types
\item \code{substrait_compiler_function()} returns
a "substrait.Expression.ScalarFunction", a
"substrait.Expression.WindowFunction", or a "substrait.AggregateFunction"
depending on the \code{context}.
}
}
\description{
Substrait compiler
}
\examples{
(compiler <- substrait_compiler())
substrait_compiler_function_id(compiler, "some_func", list(integer()))
substrait_compiler_function(compiler, "some_func", list(1L))

}
