# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true


jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # skip advanced checks until there is some compiled code that lives
          # in this package that needs Mac/Windows/R-devel
          # - {os: macOS-latest,   r: 'release'}
          # - {os: windows-latest, r: 'release'}
          # - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          # - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      ARROW_HOME: ${{ env.GITHUB_WORKSPACE }}/arrow_install
      LD_LIBRARY_PATH: ${{ env.GITHUB_WORKSPACE }}/arrow_install/lib
      ARROW_R_DEV: TRUE
      ARROW_REF: '54e17920eee65e4227eba889aadbdfeb66c114cd'

    steps:
      - uses: actions/checkout@v3
        with:
          path: substrait

      - uses: r-lib/actions/setup-pandoc@v2
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - if: runner.os == 'Linux'
        run: sudo apt-get install -y protobuf-compiler libprotobuf-dev libprotoc-dev cmake

      - name: Setup substrait dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: rcmdcheck
          working-directory: substrait

      - name: Cache Arrow build
        id: cache-arrow
        uses: actions/cache@v3
        with:
          path: ${{ env.ARROW_HOME }}
          key: ${{ runner.os }}-arrow-${{ env.ARROW_REF }}-1

      - name: Checkout Arrow repo
        uses: actions/checkout@v3
        with:
          repository: apache/arrow
          path: arrow
          ref: ${{ env.ARROW_REF }}

      - name: Install Arrow with ARROW_SUBSTRAIT turned on
        if: steps.cache-arrow.outputs.cache-hit != 'true'
        run: |
          cd arrow/cpp
          mkdir build_dir
          cd build_dir

          cmake -DCMAKE_INSTALL_PREFIX=${ARROW_HOME} \
          -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_BUILD_TYPE=Debug  -DARROW_COMPUTE=ON   -DARROW_CSV=ON   -DARROW_DATASET=OFF \
          -DARROW_FILESYSTEM=ON   -DARROW_JEMALLOC=OFF   -DARROW_JSON=OFF   -DARROW_PARQUET=ON   -DARROW_WITH_SNAPPY=OFF \
          -DARROW_WITH_ZLIB=OFF   -DARROW_INSTALL_NAME_RPATH=OFF   -DARROW_EXTRA_ERROR_CONTEXT=ON \
          -DARROW_INSTALL_NAME_RPATH=OFF -DARROW_DEPENDENCY_SOURCE=BUNDLED -DARROW_SUBSTRAIT=ON ..

          make -j2 install
          cd ../../r
          R CMD INSTALL . --build
          cp arrow*.tar.gz $ARROW_HOME

      - name: Setup arrow dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: 'arrow/r'

      - name: Install Arrow R package
        run: |
          R CMD INSTALL $ARROW_HOME/arrow*.tar.gz

      - name: Run R CMD check
        uses: r-lib/actions/check-r-package@v2
        with:
          working-directory: substrait
